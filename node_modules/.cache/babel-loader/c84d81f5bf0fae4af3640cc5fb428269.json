{"ast":null,"code":"var _jsxFileName = \"/Users/kzjouf/Desktop/project/scdapp/src/helper/AuthContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { auth, db } from \"./Firebase\";\nimport XContract from './../artifacts/contracts/XContract.sol/XContract.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext();\nexport function useAuth() {\n  _s();\n\n  return useContext(AuthContext);\n}\n\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport function AuthProvider({\n  children\n}) {\n  _s2();\n\n  const [currentUser, setCurrentUser] = useState();\n  const [currentAddress, setCurrentAddress] = useState();\n  const [loading, setLoading] = useState(true);\n  const [currentPass, setCurrentPass] = useState('');\n  const [key, setKey] = useState({\n    pubkey: '',\n    privkey: ''\n  }); //   function signup(email, password) {\n  //     return auth.createUserWithEmailAndPassword(email, password)\n  //   }\n\n  function login(email, password) {\n    setCurrentPass(password);\n    return auth.signInWithEmailAndPassword(email, password);\n  }\n\n  function logout() {\n    return auth.signOut();\n  }\n\n  async function getKey(uid) {\n    const response = await fetch(\"/fetchKey\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        'uid': uid\n      })\n    });\n    let result;\n    await response.json().then(message => {\n      result = message[\"data\"];\n      const y = result[\"y\"];\n      const x = result[\"x\"];\n      const balance = message['balance'];\n      setKey({\n        pubkey: y,\n        privkey: x\n      });\n    });\n  }\n\n  function writeUserData(userId, name, email, imageUrl) {\n    db.ref('users/' + userId).set({\n      username: name,\n      email: email,\n      profile_picture: imageUrl\n    });\n  } //   function resetPassword(email) {\n  //     return auth.sendPasswordResetEmail(email)\n  //   }\n  //   function updateEmail(email) {\n  //     return currentUser.updateEmail(email)\n  //   }\n  //   function updatePassword(password) {\n  //     return currentUser.updatePassword(password)\n  //   }\n\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(user => {\n      setCurrentUser(user);\n\n      if (user) {\n        console.log(user.uid);\n        const docRef = db.collection(\"users\").doc(user.uid);\n        docRef.get().then(doc => {\n          if (doc.exists) {\n            const addr = doc.data().address;\n            console.log(addr);\n            setCurrentAddress(addr);\n            getKey(user.uid);\n          } else {\n            // doc.data() will be undefined in this case\n            console.log(\"No such document!\");\n            setCurrentAddress('');\n            setCurrentPass(''); //getPubkey\n          }\n        }).catch(error => {\n          console.log(\"Error getting document:\", error);\n          setCurrentAddress('');\n        });\n      } else {\n        setCurrentAddress(null);\n      }\n\n      setLoading(false);\n    });\n    return unsubscribe;\n  }, []);\n  const value = {\n    currentUser,\n    currentAddress,\n    currentPass,\n    key,\n    login,\n    // signup,\n    logout // resetPassword,\n    // updateEmail,\n    // updatePassword\n\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(AuthProvider, \"I5o6weVD43OyT09OWJPgKytCtFg=\");\n\n_c = AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["/Users/kzjouf/Desktop/project/scdapp/src/helper/AuthContext.js"],"names":["React","useContext","useState","useEffect","auth","db","XContract","AuthContext","createContext","useAuth","AuthProvider","children","currentUser","setCurrentUser","currentAddress","setCurrentAddress","loading","setLoading","currentPass","setCurrentPass","key","setKey","pubkey","privkey","login","email","password","signInWithEmailAndPassword","logout","signOut","getKey","uid","response","fetch","method","headers","body","JSON","stringify","result","json","then","message","y","x","balance","writeUserData","userId","name","imageUrl","ref","set","username","profile_picture","unsubscribe","onAuthStateChanged","user","console","log","docRef","collection","doc","get","exists","addr","data","address","catch","error","value"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from \"react\"\nimport { auth, db } from \"./Firebase\"\nimport XContract from './../artifacts/contracts/XContract.sol/XContract.json'\nconst AuthContext = React.createContext()\n\nexport function useAuth() {\n  return useContext(AuthContext)\n}\n\nexport function AuthProvider({ children }) {\n  const [currentUser, setCurrentUser] = useState()\n  const [currentAddress, setCurrentAddress] = useState()\n  const [loading, setLoading] = useState(true)\n  const [currentPass, setCurrentPass] = useState('')\n  const [key, setKey] = useState({pubkey:'', privkey:''})\n\n//   function signup(email, password) {\n//     return auth.createUserWithEmailAndPassword(email, password)\n//   }\n\n  function login(email, password) {\n    setCurrentPass(password)\n    return auth.signInWithEmailAndPassword(email, password)\n  }\n\n  function logout() {\n    return auth.signOut()\n  }\n\n  async function getKey(uid){\n    const response = await fetch(\"/fetchKey\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        'uid' : uid\n      }),\n    })\n\n    let result\n    await response.json().then((message) => {\n      result = message[\"data\"];\n      const y = result[\"y\"];\n      const x = result[\"x\"];\n      const balance = message['balance']\n      setKey({pubkey:y, privkey:x})\n    });\n  }\n\n  function writeUserData(userId, name, email, imageUrl) {\n    db.ref('users/' + userId).set({\n      username: name,\n      email: email,\n      profile_picture : imageUrl\n    });\n  }\n\n//   function resetPassword(email) {\n//     return auth.sendPasswordResetEmail(email)\n//   }\n\n//   function updateEmail(email) {\n//     return currentUser.updateEmail(email)\n//   }\n\n//   function updatePassword(password) {\n//     return currentUser.updatePassword(password)\n//   }\n\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(user => {\n      setCurrentUser(user)\n      if (user){\n        console.log(user.uid);\n        const docRef = db.collection(\"users\").doc(user.uid);\n\n        docRef.get().then((doc) => {\n        if (doc.exists) {\n            const addr = doc.data().address;\n            console.log(addr)           \n            setCurrentAddress(addr);\n            getKey(user.uid);\n\n        }else {\n            // doc.data() will be undefined in this case\n            console.log(\"No such document!\");\n            setCurrentAddress('')\n            setCurrentPass('')\n            //getPubkey\n\n          }\n          }).catch((error) => {\n            console.log(\"Error getting document:\", error);\n            setCurrentAddress('')\n            });\n      }else{\n        setCurrentAddress(null);\n      }\n      setLoading(false)\n    })\n\n      return unsubscribe\n    }, [])\n\n  const value = {\n    currentUser,\n    currentAddress,\n    currentPass,\n    key,\n    login,\n    // signup,\n    logout,\n    // resetPassword,\n    // updateEmail,\n    // updatePassword\n  }\n\n  return (\n    <AuthContext.Provider value={value}>\n      {!loading && children}\n    </AuthContext.Provider>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}