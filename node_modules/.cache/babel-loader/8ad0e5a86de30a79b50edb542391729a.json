{"ast":null,"code":"var _jsxFileName = \"/Users/kzjouf/Desktop/project/scdapp/src/pages/Login.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport logo from \"./logo.svg\"; // import {ReactComponet as Logo} \n\nimport { connect, useDispatch } from 'react-redux';\nimport Avatar from '@material-ui/core/Avatar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport PersonPinCircleRoundedIcon from '@material-ui/icons/PersonPinCircleRounded';\nimport { useAuth } from \"../helper/AuthContext\";\nimport { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Typography, Button } from '@material-ui/core';\nimport './Login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login(props) {\n  _s();\n\n  const emails = [\"test1@gmail.com\", \"test2@gmail.com\", \"local1@gmail.com\"];\n  const [errorsObj, setErrorObj] = useState('');\n  const [errors, setErrors] = useState(errorsObj);\n  const [infoUser, setInfoUser] = useState({\n    email: \"test1@gmail.com\",\n    password: \"123456\"\n  });\n  const dispatch = useDispatch();\n  const {\n    login,\n    loading\n  } = useAuth();\n  let history = useHistory();\n\n  async function handleLogin() {\n    if (infoUser.email === '') {\n      setErrorObj('Email is Required');\n    } else {\n      if (infoUser.password === '') {\n        setErrorObj('Password is Required');\n      } else {\n        try {\n          console.log(infoUser);\n          await login(infoUser.email, infoUser.password);\n          if (loading === false) history.push(\"/\");\n        } catch {\n          setErrorObj(\"Failed to log out\");\n        }\n      }\n    }\n  }\n\n  async function handleListItemClick(value) {\n    setInfoUser({\n      email: value,\n      password: \"123456\"\n    });\n    handleLogin();\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-inner\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \" Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this), errors === false ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: errorsObj\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 40\n        }, this) : \"\", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"email\",\n            id: \"email\",\n            onChange: e => setInfoUser({ ...infoUser,\n              email: e.target.value\n            }),\n            value: infoUser.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"password\",\n            id: \"password\",\n            onChange: e => setInfoUser({ ...infoUser,\n              password: e.target.value\n            }),\n            value: infoUser.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          size: \"small\",\n          color: \"primary\",\n          onClick: handleLogin,\n          children: \"LOGIN\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: emails.map(ev => /*#__PURE__*/_jsxDEV(ListItem, {\n        button: true,\n        onClick: () => handleListItemClick(ev),\n        children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n          children: /*#__PURE__*/_jsxDEV(Avatar, {\n            children: /*#__PURE__*/_jsxDEV(PersonPinCircleRoundedIcon, {\n              color: \"secondary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: ev\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)]\n      }, ev, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Login, \"m4EYtvTD2F5ui4a1T6kJ+K3jYcE=\", false, function () {\n  return [useDispatch, useAuth, useHistory];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/kzjouf/Desktop/project/scdapp/src/pages/Login.js"],"names":["React","connect","useDispatch","Avatar","List","ListItem","ListItemAvatar","ListItemText","PersonPinCircleRoundedIcon","useAuth","useState","useHistory","Typography","Button","Login","props","emails","errorsObj","setErrorObj","errors","setErrors","infoUser","setInfoUser","email","password","dispatch","login","loading","history","handleLogin","console","log","push","handleListItemClick","value","e","target","map","ev"],"mappings":"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","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\n// import {ReactComponet as Logo} \nimport { connect, useDispatch } from 'react-redux';\nimport Avatar from '@material-ui/core/Avatar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport PersonPinCircleRoundedIcon from '@material-ui/icons/PersonPinCircleRounded';\nimport { useAuth } from \"../helper/AuthContext\"\nimport { useState } from 'react';\nimport {useHistory} from 'react-router-dom';\nimport {Typography, Button} from '@material-ui/core'\nimport './Login.css';\n\nfunction Login(props) {\n    \n    const emails = [\"test1@gmail.com\", \"test2@gmail.com\", \"local1@gmail.com\"]\n    const [errorsObj, setErrorObj]= useState('');\n    const [errors, setErrors] = useState(errorsObj);\n    const [infoUser, setInfoUser] = useState({email:\"test1@gmail.com\", password:\"123456\"})\n    const dispatch = useDispatch();\n    \n    const {login, loading} = useAuth()\n    let history = useHistory()\n\n    async function handleLogin() {\n        if (infoUser.email === '') {\n            setErrorObj('Email is Required');\n        }else{\n            if (infoUser.password === '') {\n                setErrorObj('Password is Required');\n            }else{\n                try {\n                    console.log(infoUser);\n                    await login(infoUser.email, infoUser.password)\n                    if (loading === false)\n                        history.push(\"/\")\n                } catch {\n                    setErrorObj(\"Failed to log out\");\n                }\n            }\n\n        }\n    }\n\n    async function handleListItemClick(value){\n        \n        setInfoUser({email: value, password:\"123456\"});\n        handleLogin();\n      };\n    \n    \n\n    return(\n        <div>   \n        <form >\n            <div className =\"form-inner\">\n                <h2> Login</h2>\n                {(errors === false) ? (<div className=\"error\">{errorsObj}</div>):\"\"}           \n                    <div className=\"form-group\">\n                        <label htmlFor=\"name\">Email:</label>\n                        <input type=\"text\" name=\"email\" id=\"email\" onChange={e => setInfoUser({...infoUser, email:e.target.value})} value = {infoUser.email}></input>\n\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"name\">Password:</label>\n                        <input type=\"password\" name=\"password\" id=\"password\" onChange={e => setInfoUser({...infoUser, password:e.target.value})} value = {infoUser.password}></input>\n                    </div>\n                    \n                    <Button variant=\"outlined\" size =\"small\" color=\"primary\" onClick={handleLogin} >LOGIN</Button>\n            </div>\n        </form>\n        <div>\n            {emails.map((ev) => (\n          <ListItem button onClick={() => handleListItemClick(ev)} key={ev}>\n            <ListItemAvatar>\n              <Avatar >\n                <PersonPinCircleRoundedIcon color=\"secondary\" />\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText primary={ev} />\n          </ListItem>\n        ))}\n        </div>\n        </div>\n\n    )\n    \n}\n\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}