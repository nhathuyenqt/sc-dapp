{"ast":null,"code":"var _jsxFileName = \"/Users/kzjouf/Desktop/project/scdapp/src/pages/Posts.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { bindActionCreators } from 'redux';\nimport AddPost from '../components/AddPost';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport Dialog from '@material-ui/core/Dialog';\nimport { Typography, Button, TextField } from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport { DataGrid } from '@material-ui/data-grid';\nimport XContract from './../artifacts/contracts/XContract.sol/XContract.json';\nimport text from './../contract_address.json';\nimport { ethers } from 'ethers';\nimport { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport SendIcon from '@material-ui/icons/Send';\nimport Avatar from '@material-ui/core/Avatar'; // import EditPost from '../../pages2/EditPost/EditPost';\n\nimport PropTypes from 'prop-types';\nimport { useAuth } from \"../helper/AuthContext\"; // import SinglePost from '../../pages2/SinglePost/SinglePost';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst contractAddress = text['contract_address'];\n\nfunction Posts(props) {\n  _s();\n\n  const [postList, setPostList] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [selectedItem, setSelectedItem] = useState({\n    id: '',\n    description: '',\n    pubkey: ''\n  });\n  const [content, setContent] = useState();\n  const classes = useStyles();\n  const columns = [{\n    field: 'id',\n    headerName: 'ID',\n    width: 68,\n    headerClassName: 'super-app-theme--header'\n  }, {\n    field: 'title',\n    headerName: 'Title',\n    width: 150,\n    headerClassName: 'super-app-theme--header'\n  }, {\n    field: 'description',\n    headerName: 'Description',\n    headerClassName: 'super-app-theme--header',\n    flex: 1\n  }, // {\n  //     field: 'id',\n  //     headerName: 'id',\n  //     type: 'number',\n  //     width: 50,\n  //     editable: true,\n  //   }\n  {\n    field: 'action',\n    headerName: 'Action',\n    headerClassName: 'super-app-theme--header',\n    width: 150,\n    renderCell: params => /*#__PURE__*/_jsxDEV(\"strong\", {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"small\",\n        onClick: () => handleClickOpen(params),\n        children: \"Offer a price\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }, this),\n    disableClickEventBubbling: true\n  }];\n  history.push('/posts');\n  setTimeout(() => {\n    listenEvents();\n  }, 30000);\n\n  const handleClickOpen = params => {\n    console.log(params.row);\n    setSelectedItem(params.row);\n    setOpen(true);\n  };\n\n  const handleClose = value => {\n    setOpen(false);\n    setSelectedItem(value);\n  };\n\n  async function loadTasks() {\n    const response = await fetch(\"/loadTasks\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    let result;\n    let newPosts = [];\n    await response.json().then(message => {\n      result = message[\"data\"];\n      console.log(result);\n      result.map(task => {\n        newPosts.push({\n          id: task[0],\n          description: task[1],\n          pubkey: task[2]\n        });\n      });\n      setPostList(newPosts);\n    });\n    return result;\n  }\n\n  async function listenEvents() {\n    if (typeof window.ethereum !== 'undefined') {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const contract = new ethers.Contract(contractAddress, XContract.abi, provider);\n      contract.on(\"aNewPrice\", msg => {\n        console.log(\"event \", msg);\n      });\n    }\n  }\n\n  useEffect(() => {\n    const tasks = loadTasks();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: 400,\n      marginLeft: 100,\n      marginRight: '100px',\n      alignSelf: 'flex-start'\n    },\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(DataGrid, {\n      rows: postList,\n      columns: columns,\n      pageSize: 4 //   checkboxSelection\n      ,\n      disableSelectionOnClick: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(SimpleDialog, {\n      selectedItem: selectedItem,\n      open: open,\n      onClose: handleClose,\n      content: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      size: \"small\",\n      color: \"primary\",\n      onClick: loadTasks,\n      children: \" Load Tasks \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Posts, \"aE/0it7dqpz1CfFHnQICFiftHjQ=\", false, function () {\n  return [useStyles];\n});\n\n_c = Posts;\nconst useStyles = makeStyles({\n  root: {\n    '& .super-app-theme--header': {\n      backgroundColor: 'rgba(255, 7, 0, 0.55)'\n    }\n  }\n});\nexport default Posts;\n\nfunction SimpleDialog(props) {\n  _s2();\n\n  const classes = useStyles();\n  const {\n    currentBCAccount,\n    keypair,\n    loading,\n    balance\n  } = useAuth();\n  const [price, setPrice] = useState();\n  const {\n    onClose,\n    selectedItem,\n    open\n  } = props;\n\n  const handleClose = () => {\n    onClose(selectedItem);\n  };\n\n  async function sendPrice() {\n    const response = await fetch(\"/sendPrice\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        'user_key': currentBCAccount.privateKey,\n        'pubkeyOfRequest': selectedItem.pubkey,\n        'price': price,\n        'id': selectedItem.id\n      })\n    });\n    console.log(selectedItem);\n    let result;\n    let newPosts = [];\n    await response.json().then(message => {// result = message[\"data\"]\n    });\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    \"aria-labelledby\": \"alert-dialog-title\",\n    onClose: handleClose,\n    open: open,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      style: {\n        backgroundColor: 'navy',\n        color: 'white'\n      },\n      id: \"alert-dialog-title\",\n      children: \"Offer a price\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          fullWidth: true,\n          margin: \"dense\",\n          style: {\n            alignSelf: 'flex-start'\n          },\n          variant: \"subtitle1\",\n          children: selectedItem.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        onChange: e => setPrice(e.target.value),\n        autoFocus: true,\n        margin: \"dense\",\n        id: \"name\",\n        label: \"Price\",\n        type: \"number\",\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: /*#__PURE__*/_jsxDEV(IconButton, {\n        color: \"primary\",\n        component: \"span\",\n        onClick: sendPrice,\n        children: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 189,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(SimpleDialog, \"rUyO3z+gWjwowiubThoYEfCDzwo=\", false, function () {\n  return [useStyles, useAuth];\n});\n\n_c2 = SimpleDialog;\nSimpleDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  selectedItem: PropTypes.shape({\n    id: PropTypes.number,\n    description: PropTypes.string.isRequired,\n    pubkey: PropTypes.string.isRequired\n  })\n};\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Posts\");\n$RefreshReg$(_c2, \"SimpleDialog\");","map":{"version":3,"sources":["/Users/kzjouf/Desktop/project/scdapp/src/pages/Posts.js"],"names":["bindActionCreators","AddPost","DialogTitle","DialogActions","DialogContent","DialogContentText","Dialog","Typography","Button","TextField","IconButton","DataGrid","XContract","text","ethers","useState","useEffect","makeStyles","SendIcon","Avatar","PropTypes","useAuth","contractAddress","Posts","props","postList","setPostList","open","setOpen","selectedItem","setSelectedItem","id","description","pubkey","content","setContent","classes","useStyles","columns","field","headerName","width","headerClassName","flex","renderCell","params","handleClickOpen","disableClickEventBubbling","history","push","setTimeout","listenEvents","console","log","row","handleClose","value","loadTasks","response","fetch","method","headers","result","newPosts","json","then","message","map","task","window","ethereum","provider","providers","Web3Provider","contract","Contract","abi","on","msg","tasks","height","marginLeft","marginRight","alignSelf","root","backgroundColor","SimpleDialog","currentBCAccount","keypair","loading","balance","price","setPrice","onClose","sendPrice","body","JSON","stringify","privateKey","color","e","target","propTypes","func","isRequired","bool","shape","number","string"],"mappings":"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","sourcesContent":["import { bindActionCreators } from 'redux';\nimport AddPost from '../components/AddPost';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport Dialog from '@material-ui/core/Dialog';\nimport {Typography, Button, TextField} from '@material-ui/core'\nimport IconButton from '@material-ui/core/IconButton';\nimport { DataGrid } from '@material-ui/data-grid';\nimport XContract from './../artifacts/contracts/XContract.sol/XContract.json'\nimport text  from './../contract_address.json';\nimport {ethers} from 'ethers'\nimport {useState, useEffect} from 'react'\nimport { makeStyles } from '@material-ui/styles';\nimport SendIcon from '@material-ui/icons/Send';\nimport Avatar from '@material-ui/core/Avatar';\n// import EditPost from '../../pages2/EditPost/EditPost';\nimport PropTypes from 'prop-types';\nimport { useAuth } from \"../helper/AuthContext\"\n// import SinglePost from '../../pages2/SinglePost/SinglePost';\nconst contractAddress = text['contract_address']\n\nfunction Posts (props) {\n    \n    const [postList, setPostList] = useState([])\n    const [open, setOpen] = useState(false);\n    const [selectedItem, setSelectedItem] = useState({id:'', description: '', pubkey:''});\n    const [content, setContent] = useState();\n    const classes = useStyles();\n    const columns = [\n      { field: 'id', headerName: 'ID', width: 68, headerClassName: 'super-app-theme--header'},\n      {\n        field: 'title',\n        headerName: 'Title',\n        width: 150,\n        headerClassName: 'super-app-theme--header'\n      },\n      {\n        field: 'description',\n        headerName: 'Description',\n        headerClassName: 'super-app-theme--header',\n        flex: 1\n      },\n      // {\n      //     field: 'id',\n      //     headerName: 'id',\n      //     type: 'number',\n      //     width: 50,\n      //     editable: true,\n      //   }\n      {\n        field: 'action',\n        headerName: 'Action', headerClassName: 'super-app-theme--header',\n        width: 150,\n        renderCell: (params) => (\n          <strong>\n\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              size=\"small\"\n              onClick={() => handleClickOpen(params)}>\n              Offer a price\n            </Button>\n          </strong>\n        ),\n        disableClickEventBubbling: true,\n      }\n    ];\n    \n    history.push('/posts')\n\n      setTimeout(()=>{\n        listenEvents()\n      }, 30000);\n    \n      const handleClickOpen = (params) => {\n        console.log(params.row);\n        setSelectedItem(params.row)\n        setOpen(true);\n      };\n    \n      const handleClose = (value) => {\n        setOpen(false);\n        setSelectedItem(value);\n      };\n\n    async function loadTasks(){\n      const response = await fetch(\"/loadTasks\", {\n        method: \"GET\",\n        headers: { \"Content-Type\": \"application/json\" }\n      })\n      let result\n      let newPosts = []\n      await response.json().then((message) => {\n        result = message[\"data\"]\n        console.log(result)\n        result.map((task) => {\n          newPosts.push({id : task[0],\n            description : task[1],\n            pubkey: task[2]\n          })\n        })\n        setPostList(newPosts)\n      });\n      return result      \n    }\n\n\n    async function listenEvents(){\n\n      if (typeof window.ethereum !== 'undefined'){\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const contract = new ethers.Contract(contractAddress, XContract.abi, provider);\n        contract.on(\"aNewPrice\", (msg) => {\n          console.log(\"event \", msg);\n        })\n      }\n    }\n\n    useEffect(() => {\n      const tasks = loadTasks()\n      \n      }, [])\n\n      \n        \n    \n    return (\n        <div style={{ height: 400,  marginLeft: 100, marginRight: '100px', alignSelf: 'flex-start'}} className={classes.root}>\n        <DataGrid\n          rows={postList}\n          columns={columns}\n          pageSize={4}\n        //   checkboxSelection\n          disableSelectionOnClick\n        />\n        <SimpleDialog selectedItem={selectedItem} open={open} onClose={handleClose} content={content}/>\n        <Button size =\"small\" color=\"primary\" onClick={loadTasks} > Load Tasks </Button>\n      </div>\n  \n    );\n    \n}\n\nconst useStyles = makeStyles({\n  root: {\n    '& .super-app-theme--header': {\n      backgroundColor: 'rgba(255, 7, 0, 0.55)',\n    },\n  },\n});\nexport default (Posts);\n\nfunction SimpleDialog(props) {\n  const classes = useStyles();\n  const { currentBCAccount, keypair, loading, balance} = useAuth()\n  const [price, setPrice] = useState()\n  const { onClose, selectedItem, open} = props;\n\n  const handleClose = () => {\n    onClose(selectedItem);\n  };\n\n  async function sendPrice (){\n    const response = await fetch(\"/sendPrice\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        'user_key': currentBCAccount.privateKey,\n        'pubkeyOfRequest': selectedItem.pubkey,\n        'price': price,\n        'id': selectedItem.id\n      }),\n    })\n    console.log(selectedItem)\n    let result\n    let newPosts = []\n    await response.json().then((message) => {\n      // result = message[\"data\"]\n      \n    });\n  };\n\n\n\n  return (\n    <Dialog aria-labelledby=\"alert-dialog-title\"  onClose={handleClose} open={open}>\n        <DialogTitle  style={{ backgroundColor: 'navy', color: 'white' }} id=\"alert-dialog-title\">\n          Offer a price\n        </DialogTitle>\n        <DialogContent>\n            <DialogContentText>\n              <Typography fullWidth margin=\"dense\" style={{ alignSelf: 'flex-start'}} variant=\"subtitle1\">{selectedItem.description}</Typography>\n            </DialogContentText>\n              <TextField onChange={e => setPrice(e.target.value)} autoFocus\n                        margin=\"dense\"\n                        id=\"name\"\n                        label=\"Price\"\n                        type=\"number\"\n                        fullWidth          />\n        </DialogContent>\n        <DialogActions>\n          <IconButton color=\"primary\" component=\"span\" onClick={sendPrice}>\n                <SendIcon />\n          </IconButton>\n        </DialogActions>\n\n    </Dialog>\n  );\n}\n\nSimpleDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  selectedItem: PropTypes.shape({\n    id: PropTypes.number,\n    description: PropTypes.string.isRequired,\n    pubkey: PropTypes.string.isRequired\n  })\n};"]},"metadata":{},"sourceType":"module"}