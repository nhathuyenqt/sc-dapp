{"ast":null,"code":"import { applyMiddleware, combineReducers, compose, createStore } from 'redux';\nimport PostsReducer from './reducers/PostsReducer';\nimport thunk from 'redux-thunk';\nimport { AuthReducer } from './reducers/AuthReducer';\n\nconst loggerMiddleware = store => next => action => {\n  console.log('dispatching action', action);\n  console.log('before dispatching state', store.getState());\n  let result = next(action);\n  setTimeout(() => {\n    console.log('dispatch time out');\n  }, 5000);\n  console.log('next state', store.getState());\n  return result;\n}; // const fetchDataMiddleware = (store) => (next) => (action) => {\n//     if (action.type === GET_POSTS) {\n//         //ajax call\n//     }\n//     return next(action);\n// };\n\n\nconst middleware = applyMiddleware(thunk);\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst reducers = combineReducers({\n  posts: PostsReducer,\n  auth: AuthReducer\n});\nexport const store = createStore(reducers, composeEnhancers(middleware));","map":{"version":3,"sources":["/Users/kzjouf/Desktop/project/scdapp/src/store/store.js"],"names":["applyMiddleware","combineReducers","compose","createStore","PostsReducer","thunk","AuthReducer","loggerMiddleware","store","next","action","console","log","getState","result","setTimeout","middleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","reducers","posts","auth"],"mappings":"AAAA,SACIA,eADJ,EAEIC,eAFJ,EAGIC,OAHJ,EAIIC,WAJJ,QAKO,OALP;AAMA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,WAAT,QAA4B,wBAA5B;;AAEA,MAAMC,gBAAgB,GAAIC,KAAD,IAAYC,IAAD,IAAWC,MAAD,IAAY;AACtDC,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCF,MAAlC;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCJ,KAAK,CAACK,QAAN,EAAxC;AACA,MAAIC,MAAM,GAAGL,IAAI,CAACC,MAAD,CAAjB;AACAK,EAAAA,UAAU,CAAC,MAAM;AACbJ,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACH,GAFS,EAEP,IAFO,CAAV;AAGAD,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BJ,KAAK,CAACK,QAAN,EAA1B;AACA,SAAOC,MAAP;AACH,CATD,C,CAWA;AACA;AACA;AACA;AAEA;AACA;;;AAEA,MAAME,UAAU,GAAGhB,eAAe,CAACK,KAAD,CAAlC;AAEA,MAAMY,gBAAgB,GAClBC,MAAM,CAACC,oCAAP,IAA+CjB,OADnD;AAGA,MAAMkB,QAAQ,GAAGnB,eAAe,CAAC;AAC7BoB,EAAAA,KAAK,EAAEjB,YADsB;AAE7BkB,EAAAA,IAAI,EAAEhB;AAFuB,CAAD,CAAhC;AAKA,OAAO,MAAME,KAAK,GAAGL,WAAW,CAACiB,QAAD,EAAWH,gBAAgB,CAACD,UAAD,CAA3B,CAAzB","sourcesContent":["import {\n    applyMiddleware,\n    combineReducers,\n    compose,\n    createStore,\n} from 'redux';\nimport PostsReducer from './reducers/PostsReducer';\nimport thunk from 'redux-thunk';\nimport { AuthReducer } from './reducers/AuthReducer';\n\nconst loggerMiddleware = (store) => (next) => (action) => {\n    console.log('dispatching action', action);\n    console.log('before dispatching state', store.getState());\n    let result = next(action);\n    setTimeout(() => {\n        console.log('dispatch time out');\n    }, 5000);\n    console.log('next state', store.getState());\n    return result;\n};\n\n// const fetchDataMiddleware = (store) => (next) => (action) => {\n//     if (action.type === GET_POSTS) {\n//         //ajax call\n//     }\n\n//     return next(action);\n// };\n\nconst middleware = applyMiddleware(thunk);\n\nconst composeEnhancers =\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst reducers = combineReducers({\n    posts: PostsReducer,\n    auth: AuthReducer,\n});\n\nexport const store = createStore(reducers, composeEnhancers(middleware));\n"]},"metadata":{},"sourceType":"module"}