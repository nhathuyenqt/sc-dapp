{"ast":null,"code":"var _jsxFileName = \"/Users/kzjouf/Desktop/project/scdapp/src/pages/components/Deal.js\",\n    _s = $RefreshSig$();\n\nimport { bindActionCreators } from 'redux';\nimport AddPost from '../../components/AddPost';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport Dialog from '@material-ui/core/Dialog';\nimport { Typography, Button, TextField, Grid } from '@material-ui/core';\nimport xtype from 'xtypejs';\nimport text from '../../contract_address.json';\nimport { ethers } from 'ethers';\nimport { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport SendIcon from '@material-ui/icons/Send';\nimport Avatar from '@material-ui/core/Avatar'; // import EditPost from '../../pages2/EditPost/EditPost';\n\nimport PropTypes from 'prop-types';\nimport { useAuth } from \"../../helper/AuthContext\"; // import SinglePost from '../../pages2/SinglePost/SinglePost';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DealDialog(props) {\n  _s();\n\n  const classes = useStyles();\n  const {\n    currentBCAccount\n  } = useAuth();\n  const [offer, setOffer] = useState();\n  const {\n    onClose,\n    selectedItem,\n    open,\n    deal,\n    price\n  } = props;\n  console.log(deal);\n  useEffect(() => {// console.log(deal);\n    // loadMinOffer();\n  }, []);\n\n  const handleClose = () => {\n    onClose(selectedItem);\n  };\n\n  async function loadMinOffer() {\n    const response = await fetch(\"/loadMinOffer\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        'user_key': currentBCAccount.privateKey,\n        'id': selectedItem.id\n      })\n    });\n    console.log(selectedItem);\n    let result;\n    let newPosts = [];\n    await response.json().then(message => {// result = message[\"data\"]\n    });\n  }\n\n  async function acceptDeal() {\n    if (deal != null && selectedItem.state == \"Processing\") {\n      const response = await fetch(\"/acceptDeal\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          'user_key': currentBCAccount.privateKey,\n          'requestId': deal[2],\n          'dealId': deal[0]\n        })\n      });\n      let result;\n      let newPosts = [];\n      await response.json().then(message => {// result = message[\"data\"]\n      });\n    }\n\n    handleClose();\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    \"aria-labelledby\": \"alert-dialog-title\",\n    fullWidth: true,\n    maxWidth: \"xs\",\n    onClose: handleClose,\n    open: open,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      style: {\n        backgroundColor: 'rgba(220, 241, 229, 0.57)',\n        color: 'rgba(9, 91, 11, 0.86)'\n      },\n      id: \"alert-dialog-title\",\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        fullWidth: true,\n        margin: \"dense\",\n        variant: \"h6\",\n        children: \"Current Min Offer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          fullWidth: true,\n          margin: \"dense\",\n          style: {\n            alignSelf: 'flex-start'\n          },\n          variant: \"subtitle1\",\n          children: [\"Description: \\\"\", selectedItem.description, \"\\\"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          fullWidth: true,\n          margin: \"dense\",\n          style: {\n            alignSelf: 'flex-start'\n          },\n          variant: \"subtitle1\",\n          children: [\"State: \", selectedItem.state]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          fullWidth: true,\n          margin: \"dense\",\n          style: {\n            alignSelf: 'flex-start'\n          },\n          variant: \"subtitle1\",\n          children: [\"Current min offered price: \", deal == null ? \"No offer\" : price]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"rgba(9, 91, 11, 0.86)\",\n        size: \"small\",\n        onClick: acceptDeal,\n        children: [\" \", deal == null || selectedItem.state != \"Processing\" ? \"Close\" : \"Accept\", \"  \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 7\n  }, this);\n}\n\n_s(DealDialog, \"EM354FwrH1w5PGTkdYqvLbEvtG4=\", false, function () {\n  return [useStyles, useAuth];\n});\n\n_c = DealDialog;\nconst useStyles = makeStyles({\n  root: {\n    '& .super-app-theme--header': {\n      backgroundColor: 'rgba(255, 7, 0, 0.55)'\n    },\n    '& .super-app-theme--Filled': {\n      backgroundColor: 'rgba(114, 209, 18, 1)'\n    }\n  }\n});\nDealDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  selectedItem: PropTypes.shape({\n    id: PropTypes.number,\n    description: PropTypes.string.isRequired,\n    pubkey: PropTypes.string.isRequired\n  }),\n  deal: PropTypes.shape({\n    dealId: PropTypes.number,\n    requestId: PropTypes.number,\n    price: PropTypes.shape({\n      CL: PropTypes.string,\n      CR: PropTypes.string\n    }),\n    state: PropTypes.number,\n    bidder: PropTypes.string\n  })\n};\nexport default DealDialog;\n\nvar _c;\n\n$RefreshReg$(_c, \"DealDialog\");","map":{"version":3,"sources":["/Users/kzjouf/Desktop/project/scdapp/src/pages/components/Deal.js"],"names":["bindActionCreators","AddPost","DialogTitle","DialogActions","DialogContent","DialogContentText","Dialog","Typography","Button","TextField","Grid","xtype","text","ethers","useState","useEffect","makeStyles","SendIcon","Avatar","PropTypes","useAuth","DealDialog","props","classes","useStyles","currentBCAccount","offer","setOffer","onClose","selectedItem","open","deal","price","console","log","handleClose","loadMinOffer","response","fetch","method","headers","body","JSON","stringify","privateKey","id","result","newPosts","json","then","message","acceptDeal","state","backgroundColor","color","alignSelf","description","root","propTypes","func","isRequired","bool","shape","number","string","pubkey","dealId","requestId","CL","CR","bidder"],"mappings":"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","sourcesContent":["import { bindActionCreators } from 'redux';\nimport AddPost from '../../components/AddPost';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport Dialog from '@material-ui/core/Dialog';\nimport {Typography, Button, TextField, Grid} from '@material-ui/core'\nimport xtype from 'xtypejs'\nimport text  from '../../contract_address.json';\nimport {ethers} from 'ethers'\nimport {useState, useEffect} from 'react'\nimport { makeStyles } from '@material-ui/styles';\nimport SendIcon from '@material-ui/icons/Send';\nimport Avatar from '@material-ui/core/Avatar';\n// import EditPost from '../../pages2/EditPost/EditPost';\nimport PropTypes from 'prop-types';\nimport { useAuth } from \"../../helper/AuthContext\"\n// import SinglePost from '../../pages2/SinglePost/SinglePost';\n\nfunction DealDialog(props) {\n    const classes = useStyles();\n    const { currentBCAccount} = useAuth()\n    const [offer, setOffer] = useState()\n    const { onClose, selectedItem, open, deal, price} = props;\n    console.log(deal);\n    useEffect(() => {\n        // console.log(deal);\n        // loadMinOffer();\n        }, [])\n\n    const handleClose = () => {\n      onClose(selectedItem);\n    };\n    async function loadMinOffer(){\n        const response = await fetch(\"/loadMinOffer\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({\n              'user_key': currentBCAccount.privateKey,\n              'id': selectedItem.id\n            }),\n          })\n          console.log(selectedItem)\n          let result\n          let newPosts = []\n          await response.json().then((message) => {\n            // result = message[\"data\"]\n            \n          });\n    }\n\n    async function acceptDeal (){\n      if (deal != null && selectedItem.state == \"Processing\"){\n        const response = await fetch(\"/acceptDeal\", {\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify({\n            'user_key': currentBCAccount.privateKey,\n            'requestId': deal[2],\n            'dealId': deal[0]\n          }),\n        })\n        \n        let result\n        let newPosts = []\n        await response.json().then((message) => {\n          // result = message[\"data\"]\n          \n        });\n      }\n      \n      handleClose();\n    };\n  \n    return (\n      <Dialog aria-labelledby=\"alert-dialog-title\" fullWidth maxWidth='xs' onClose={handleClose} open={open}>\n          <DialogTitle  style={{ backgroundColor: 'rgba(220, 241, 229, 0.57)', color: 'rgba(9, 91, 11, 0.86)' }} id=\"alert-dialog-title\">\n            <Typography fullWidth margin=\"dense\" variant=\"h6\" >Current Min Offer</Typography>\n          </DialogTitle>\n          <DialogContent>\n              <DialogContentText>\n                <Typography fullWidth margin=\"dense\" style={{ alignSelf: 'flex-start'}} variant=\"subtitle1\">Description: \"{selectedItem.description}\"</Typography>\n                <Typography fullWidth margin=\"dense\" style={{ alignSelf: 'flex-start'}} variant=\"subtitle1\">State: {selectedItem.state}</Typography>\n                <Typography fullWidth margin=\"dense\" style={{ alignSelf: 'flex-start'}} variant=\"subtitle1\">Current min offered price: {(deal == null)? \"No offer\" : price}</Typography>\n                \n                {/* <Typography fullWidth margin=\"dense\" style={{ alignSelf: 'flex-start'}} variant=\"subtitle1\">{bidder}</Typography> */}\n              </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button variant=\"contained\"  color='rgba(9, 91, 11, 0.86)' size=\"small\" onClick={acceptDeal}> {(deal == null || selectedItem.state != \"Processing\") ? \"Close\" : \"Accept\"}  </Button>\n          </DialogActions>\n  \n      </Dialog>\n    );\n  }\n  \n  const useStyles = makeStyles({\n    root: {\n      '& .super-app-theme--header': {\n        backgroundColor: 'rgba(255, 7, 0, 0.55)',\n      },\n      '& .super-app-theme--Filled': {\n        backgroundColor: 'rgba(114, 209, 18, 1)',\n      }\n    }\n  });\n\nDealDialog.propTypes = {\n    onClose: PropTypes.func.isRequired,\n    open: PropTypes.bool.isRequired,\n    selectedItem: PropTypes.shape({\n      id: PropTypes.number,\n      description: PropTypes.string.isRequired,\n      pubkey: PropTypes.string.isRequired\n    }),\n    deal: PropTypes.shape({\n        dealId: PropTypes.number,\n        requestId: PropTypes.number,\n        price: PropTypes.shape({\n            CL: PropTypes.string,\n            CR: PropTypes.string\n        }),\n        state: PropTypes.number,\n        bidder: PropTypes.string   \n      })\n};\nexport default (DealDialog);"]},"metadata":{},"sourceType":"module"}