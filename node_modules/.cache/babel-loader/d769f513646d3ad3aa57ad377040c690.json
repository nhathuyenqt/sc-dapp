{"ast":null,"code":"var _jsxFileName = \"/Users/kzjouf/Desktop/project/scdapp/src/pages/AdminPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component } from 'react';\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap'; // import AppNavbar from './AppNavbar';\n\nimport { useState, useEffect } from 'react';\nimport database from './../firebase';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction GroupList() {\n  _s();\n\n  var groups = [];\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    fetchUsers();\n  }, []); // const groupList = groups.map(group => {\n  //     const address = `${group.address || ''} ${group.city || ''} ${group.stateOrProvince || ''}`;\n  //     return <tr key={group.id}>\n  //     <td style={{whiteSpace: 'nowrap'}}>{group.name}</td>\n  //     <td>{address}</td>\n  //     <td>{group.events.map(event => {\n  //         return <div key={event.id}>{new Intl.DateTimeFormat('en-US', {\n  //         year: 'numeric',\n  //         month: 'long',\n  //         day: '2-digit'\n  //         }).format(new Date(event.date))}: {event.title}</div>\n  //     })}</td>\n  //     <td>\n  //         <ButtonGroup>\n  //         <Button size=\"sm\" color=\"primary\" tag={Link} to={\"/groups/\" + group.id}>Edit</Button>\n  //         <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(group.id)}>Delete</Button>\n  //         </ButtonGroup>\n  //     </td>\n  //     </tr>\n  // });\n\n  const fetchUsers = async () => {\n    const response = database.collection('users');\n    const data = await response.get();\n    data.docs.forEach(item => {\n      console.log(response);\n      setUsers([...users, item.data()]);\n    });\n  }; // const snapshot = database.collection('users').get();\n  //     snapshot.forEach((doc) => {\n  //     console.log(doc.id, '=>', doc.data());\n  //     });\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"float-right\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          color: \"success\",\n          tag: Link,\n          to: \"/groups/new\",\n          children: \"Add Group\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"My JUG Tour\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        className: \"mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              width: \"20%\",\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              width: \"20%\",\n              children: \"Location\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Events\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              width: \"10%\",\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 13\n  }, this);\n} // class GroupList extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {groups: [], isLoading: true};\n//     this.remove = this.remove.bind(this);\n//   }\n//   componentDidMount() {\n//     this.setState({isLoading: true});\n//     const snapshot = database.collection('users').get();\n//         snapshot.forEach((doc) => {\n//         console.log(doc.id, '=>', doc.data());\n//         });\n//   }\n//   async remove(id) {\n//     await fetch(`/api/group/${id}`, {\n//       method: 'DELETE',\n//       headers: {\n//         'Accept': 'application/json',\n//         'Content-Type': 'application/json'\n//       }\n//     }).then(() => {\n//       let updatedGroups = [...this.state.groups].filter(i => i.id !== id);\n//       this.setState({groups: updatedGroups});\n//     });\n//   }\n//   render() {\n//     const {groups, isLoading} = this.state;\n//     if (isLoading) {\n//       return <p>Loading...</p>;\n//     }\n//     const groupList = groups.map(group => {\n//       const address = `${group.address || ''} ${group.city || ''} ${group.stateOrProvince || ''}`;\n//       return <tr key={group.id}>\n//         <td style={{whiteSpace: 'nowrap'}}>{group.name}</td>\n//         <td>{address}</td>\n//         <td>{group.events.map(event => {\n//           return <div key={event.id}>{new Intl.DateTimeFormat('en-US', {\n//             year: 'numeric',\n//             month: 'long',\n//             day: '2-digit'\n//           }).format(new Date(event.date))}: {event.title}</div>\n//         })}</td>\n//         <td>\n//           <ButtonGroup>\n//             <Button size=\"sm\" color=\"primary\" tag={Link} to={\"/groups/\" + group.id}>Edit</Button>\n//             <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(group.id)}>Delete</Button>\n//           </ButtonGroup>\n//         </td>\n//       </tr>\n//     });\n//     return (\n//       <div>\n//         {/* <AppNavbar/> */}\n//         <Container fluid>\n//           <div className=\"float-right\">\n//             <Button color=\"success\" tag={Link} to=\"/groups/new\">Add Group</Button>\n//           </div>\n//           <h3>My JUG Tour</h3>\n//           <Table className=\"mt-4\">\n//             <thead>\n//             <tr>\n//               <th width=\"20%\">Name</th>\n//               <th width=\"20%\">Location</th>\n//               <th>Events</th>\n//               <th width=\"10%\">Actions</th>\n//             </tr>\n//             </thead>\n//             <tbody>\n//             {groupList}\n//             </tbody>\n//           </Table>\n//         </Container>\n//       </div>\n//     );\n//   }\n// }\n\n\n_s(GroupList, \"JadZszbqna06PpJs9hMo7Hl/LOY=\");\n\n_c = GroupList;\nexport default GroupList;\n\nvar _c;\n\n$RefreshReg$(_c, \"GroupList\");","map":{"version":3,"sources":["/Users/kzjouf/Desktop/project/scdapp/src/pages/AdminPage.js"],"names":["React","Component","Button","ButtonGroup","Container","Table","useState","useEffect","database","Link","GroupList","groups","users","setUsers","fetchUsers","response","collection","data","get","docs","forEach","item","console","log"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\n// import AppNavbar from './AppNavbar';\nimport {useState, useEffect} from 'react'\nimport database from './../firebase'\nimport { Link } from 'react-router-dom';\n\n\nfunction GroupList(){\n    var groups = [];\n    const [users, setUsers] = useState([]);\n    \n    useEffect(() => {\n        fetchUsers();\n      }, [])\n    // const groupList = groups.map(group => {\n    //     const address = `${group.address || ''} ${group.city || ''} ${group.stateOrProvince || ''}`;\n    //     return <tr key={group.id}>\n    //     <td style={{whiteSpace: 'nowrap'}}>{group.name}</td>\n    //     <td>{address}</td>\n    //     <td>{group.events.map(event => {\n    //         return <div key={event.id}>{new Intl.DateTimeFormat('en-US', {\n    //         year: 'numeric',\n    //         month: 'long',\n    //         day: '2-digit'\n    //         }).format(new Date(event.date))}: {event.title}</div>\n    //     })}</td>\n    //     <td>\n    //         <ButtonGroup>\n    //         <Button size=\"sm\" color=\"primary\" tag={Link} to={\"/groups/\" + group.id}>Edit</Button>\n    //         <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(group.id)}>Delete</Button>\n    //         </ButtonGroup>\n    //     </td>\n    //     </tr>\n    // });\n\n    const fetchUsers = async()=>{\n        const response = database.collection('users');\n        \n        const data = await response.get();\n        data.docs.forEach(item=>{\n            console.log(response)\n            setUsers([...users, item.data()])\n           })\n        \n    }\n \n\n    // const snapshot = database.collection('users').get();\n    //     snapshot.forEach((doc) => {\n    //     console.log(doc.id, '=>', doc.data());\n    //     });\n\n        return (\n            <div>\n              {/* <AppNavbar/> */}\n              <Container fluid>\n                <div className=\"float-right\">\n                  <Button color=\"success\" tag={Link} to=\"/groups/new\">Add Group</Button>\n                </div>\n                <h3>My JUG Tour</h3>\n                <Table className=\"mt-4\">\n                  <thead>\n                  <tr>\n                    <th width=\"20%\">Name</th>\n                    <th width=\"20%\">Location</th>\n                    <th>Events</th>\n                    <th width=\"10%\">Actions</th>\n                  </tr>\n                  </thead>\n                  <tbody>\n                  {/* {groupList} */}\n                  </tbody>\n                </Table>\n              </Container>\n            </div>\n          );\n}\n\n// class GroupList extends Component {\n\n//   constructor(props) {\n//     super(props);\n//     this.state = {groups: [], isLoading: true};\n//     this.remove = this.remove.bind(this);\n//   }\n\n//   componentDidMount() {\n//     this.setState({isLoading: true});\n\n//     const snapshot = database.collection('users').get();\n//         snapshot.forEach((doc) => {\n//         console.log(doc.id, '=>', doc.data());\n//         });\n//   }\n\n//   async remove(id) {\n//     await fetch(`/api/group/${id}`, {\n//       method: 'DELETE',\n//       headers: {\n//         'Accept': 'application/json',\n//         'Content-Type': 'application/json'\n//       }\n//     }).then(() => {\n//       let updatedGroups = [...this.state.groups].filter(i => i.id !== id);\n//       this.setState({groups: updatedGroups});\n//     });\n//   }\n\n//   render() {\n//     const {groups, isLoading} = this.state;\n\n//     if (isLoading) {\n//       return <p>Loading...</p>;\n//     }\n\n//     const groupList = groups.map(group => {\n//       const address = `${group.address || ''} ${group.city || ''} ${group.stateOrProvince || ''}`;\n//       return <tr key={group.id}>\n//         <td style={{whiteSpace: 'nowrap'}}>{group.name}</td>\n//         <td>{address}</td>\n//         <td>{group.events.map(event => {\n//           return <div key={event.id}>{new Intl.DateTimeFormat('en-US', {\n//             year: 'numeric',\n//             month: 'long',\n//             day: '2-digit'\n//           }).format(new Date(event.date))}: {event.title}</div>\n//         })}</td>\n//         <td>\n//           <ButtonGroup>\n//             <Button size=\"sm\" color=\"primary\" tag={Link} to={\"/groups/\" + group.id}>Edit</Button>\n//             <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(group.id)}>Delete</Button>\n//           </ButtonGroup>\n//         </td>\n//       </tr>\n//     });\n\n//     return (\n//       <div>\n//         {/* <AppNavbar/> */}\n//         <Container fluid>\n//           <div className=\"float-right\">\n//             <Button color=\"success\" tag={Link} to=\"/groups/new\">Add Group</Button>\n//           </div>\n//           <h3>My JUG Tour</h3>\n//           <Table className=\"mt-4\">\n//             <thead>\n//             <tr>\n//               <th width=\"20%\">Name</th>\n//               <th width=\"20%\">Location</th>\n//               <th>Events</th>\n//               <th width=\"10%\">Actions</th>\n//             </tr>\n//             </thead>\n//             <tbody>\n//             {groupList}\n//             </tbody>\n//           </Table>\n//         </Container>\n//       </div>\n//     );\n//   }\n// }\n\nexport default GroupList;"]},"metadata":{},"sourceType":"module"}