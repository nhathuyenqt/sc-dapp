{"ast":null,"code":"var _jsxFileName = \"/Users/kzjouf/Desktop/project/scdapp/src/pages/components/DealTransfer.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { Link } from \"react-router-dom\";\nimport QRCode from \"react-qr-code\";\nimport Switch from '@material-ui/core/Switch';\nimport QRscanner from './QRscanner.js';\nimport { useState, useEffect, useRef } from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport { useAuth } from \"../../helper/AuthContext\";\nimport { Typography, Button, TextField, Grid } from '@material-ui/core';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DealTransfer(props) {\n  _s();\n\n  const {\n    currentBCAccount,\n    keypair,\n    balance\n  } = useAuth();\n  const [text, setText] = useState();\n  const {\n    onClose,\n    open,\n    deal\n  } = props;\n  const [amtView, setAmtView] = useState(true);\n  const [amt, setAmt] = useState(true);\n\n  const handleClose = () => {\n    onClose();\n  };\n\n  const showRaw = check => {\n    setAmtView(check);\n  };\n\n  useEffect(() => {\n    encryptTransfer();\n  });\n\n  async function encryptTransfer() {\n    // setAmtView(check);\n    console.log(deal);\n\n    if (deal != null) {\n      console.log(\"DEAL \", deal);\n      const response = await fetch(\"/encryptAmount\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          'x': keypair.x,\n          'CL': deal.price[0],\n          'CR': deal.price[1]\n        })\n      });\n      await response.json().then(message => {\n        console.log(message);\n        setAmt(message['amt']);\n      });\n    }\n  }\n\n  ;\n\n  async function payTheDeal() {\n    console.log();\n    const response = await fetch(\"/payTheDeal\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        'privateKey': currentBCAccount.privateKey,\n        'user_address': currentBCAccount.address,\n        'y_sender': keypair.y,\n        'y_recipient': deal.recipient,\n        'amt': amt,\n        'x_sender': keypair.x,\n        'requestId': deal.requestId\n      })\n    });\n    let result;\n    let newPosts = [];\n    await response.json().then(message => {\n      console.log(message);\n      onClose();\n    });\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    \"aria-labelledby\": \"alert-dialog-title\",\n    fullWidth: true,\n    maxWidth: \"xs\",\n    style: {\n      height: '500px'\n    },\n    onClose: handleClose,\n    open: open,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      style: {\n        backgroundColor: 'rgba(220, 241, 229, 0.57)',\n        color: 'rgba(9, 91, 11, 0.86)'\n      },\n      id: \"alert-dialog-title\",\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        fullWidth: true,\n        margin: \"dense\",\n        variant: \"h6\",\n        children: \"Pay for the task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }, this), deal && /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          fullWidth: true,\n          margin: \"dense\",\n          style: {\n            alignSelf: 'flex-start'\n          },\n          variant: \"button\",\n          display: \"block\",\n          children: [\"Post: \", deal.requestId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          fullWidth: true,\n          margin: \"dense\",\n          style: {\n            alignSelf: 'flex-start'\n          },\n          variant: \"button\",\n          display: \"block\",\n          children: \"Price:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            margin: '10px'\n          },\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            \"align-items\": \"center\",\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                align: \"center\",\n                children: \" Raw \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Switch, {\n                checked: amtView,\n                onChange: e => showRaw(e.target.checked),\n                name: \"checkedA\",\n                inputProps: {\n                  'aria-label': 'secondary checkbox'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                align: \"center\",\n                children: \" Encrypted \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }, this), amtView ? /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"caption\",\n          style: {\n            height: '32px'\n          },\n          children: [\" (\", deal.price[0], \" \", deal.price[1], \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 22\n        }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          align: \"center\",\n          children: [\" \", amt, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"small\",\n        onClick: handleClose,\n        children: \" Close \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }, this), deal && /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        size: \"small\",\n        onClick: payTheDeal,\n        children: \" Pay \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DealTransfer, \"MrMtp8AULsxk13MW+mvLurnl1dA=\", false, function () {\n  return [useAuth];\n});\n\n_c = DealTransfer;\nDealTransfer.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  deal: PropTypes.shape({\n    id: PropTypes.number,\n    description: PropTypes.string,\n    recipient: PropTypes.string\n  })\n};\nexport default DealTransfer;\n\nvar _c;\n\n$RefreshReg$(_c, \"DealTransfer\");","map":{"version":3,"sources":["/Users/kzjouf/Desktop/project/scdapp/src/pages/components/DealTransfer.js"],"names":["PropTypes","Link","QRCode","Switch","QRscanner","useState","useEffect","useRef","Dialog","useAuth","Typography","Button","TextField","Grid","DialogTitle","DialogActions","DialogContent","DialogContentText","DealTransfer","props","currentBCAccount","keypair","balance","text","setText","onClose","open","deal","amtView","setAmtView","amt","setAmt","handleClose","showRaw","check","encryptTransfer","console","log","response","fetch","method","headers","body","JSON","stringify","x","price","json","then","message","payTheDeal","privateKey","address","y","recipient","requestId","result","newPosts","height","backgroundColor","color","alignSelf","display","margin","e","target","checked","propTypes","func","isRequired","bool","shape","id","number","description","string"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport { Link } from \"react-router-dom\";\nimport QRCode from \"react-qr-code\";\nimport Switch from '@material-ui/core/Switch';\nimport QRscanner from './QRscanner.js';\nimport {useState, useEffect, useRef} from 'react'\nimport Dialog from '@material-ui/core/Dialog';\nimport { useAuth } from \"../../helper/AuthContext\"\nimport {Typography, Button, TextField, Grid} from '@material-ui/core'\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\n\nfunction DealTransfer(props) {\n\n    const { currentBCAccount, keypair, balance} = useAuth()\n    const [text, setText] = useState();\n    const { onClose, open, deal } = props;\n    const [amtView, setAmtView] = useState(true);\n    const [amt, setAmt] = useState(true);\n\n    const handleClose = () => {\n        onClose();\n    };\n\n    const showRaw = (check) =>{\n      setAmtView(check);\n    }\n    \n    useEffect(() => {\n      encryptTransfer()\n    });\n\n    async function encryptTransfer(){\n        // setAmtView(check);\n        console.log(deal)\n        if (deal != null ){\n            console.log(\"DEAL \", deal);\n            const response = await fetch(\"/encryptAmount\", {\n                method: \"POST\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify({\n                  'x' : keypair.x,\n                  'CL': deal.price[0],\n                  'CR': deal.price[1]\n                }),\n              })\n        \n              await response.json().then((message) => {\n                console.log(message)\n                setAmt(message['amt']);\n                \n              });\n        }\n\n\n        \n    };\n\n    async function payTheDeal (){\n\n      console.log()\n        const response = await fetch(\"/payTheDeal\", {\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify({\n            'privateKey': currentBCAccount.privateKey,\n            'user_address': currentBCAccount.address,\n            'y_sender': keypair.y,\n            'y_recipient': deal.recipient,\n            'amt':amt,\n            'x_sender': keypair.x,\n            'requestId': deal.requestId\n          }),\n        })\n          \n        let result\n        let newPosts = []\n        await response.json().then((message) => {\n          console.log(message);\n          onClose();\n        });\n\n    \n    };\n\n    \n\n    return (\n        <Dialog aria-labelledby=\"alert-dialog-title\" fullWidth maxWidth='xs' style={{height:'500px'}} onClose={handleClose} open={open}>\n          <DialogTitle  style={{ backgroundColor: 'rgba(220, 241, 229, 0.57)', color: 'rgba(9, 91, 11, 0.86)' }} id=\"alert-dialog-title\">\n            <Typography fullWidth margin=\"dense\" variant=\"h6\" >Pay for the task</Typography>\n          </DialogTitle>\n          {deal && (<DialogContent>\n              <DialogContentText>\n              <Typography fullWidth margin=\"dense\" style={{ alignSelf: 'flex-start'}} variant=\"button\" display=\"block\">Post: {deal.requestId}</Typography>\n                <Typography fullWidth margin=\"dense\" style={{ alignSelf: 'flex-start'}} variant=\"button\" display=\"block\">Price:</Typography>\n                <div style={{display: 'flex', margin:'10px'}}>\n                    <Grid container align-items=\"center\" spacing={2}>\n                    <Grid item>\n                      <Typography variant = \"body2\" align='center'> Raw </Typography>\n                    </Grid>\n                    <Grid item >\n                        <Switch\n                            checked={amtView}\n                            onChange={e => showRaw(e.target.checked)}\n                            name=\"checkedA\"\n                            inputProps={{ 'aria-label': 'secondary checkbox' }} />\n                    </Grid>\n                    <Grid item>\n                      <Typography variant = \"body2\" align='center'> Encrypted </Typography>\n                    </Grid>\n                    </Grid>\n                </div>\n                {amtView ?\n                    (<Typography variant = \"caption\" style={{height:'32px'}}> ({deal.price[0]} {deal.price[1]})</Typography>):\n                    (<Typography variant = \"h6\" align='center'> {amt} </Typography>)}\n                {/* <Typography fullWidth margin=\"dense\" style={{ alignSelf: 'flex-start'}} variant=\"subtitle1\">Price: {(deal != null)? deal.price : \" \"}</Typography> */}\n                \n                {/* <Typography fullWidth margin=\"dense\" style={{ alignSelf: 'flex-start'}} variant=\"subtitle1\">{bidder}</Typography> */}\n              </DialogContentText>\n          </DialogContent>)}\n          <DialogActions>\n            <Button variant=\"contained\"  color='primary' size=\"small\" onClick={handleClose}> Close </Button>\n            {deal && <Button variant=\"contained\"  color='secondary' size=\"small\" onClick={payTheDeal}> Pay </Button>}\n          </DialogActions>\n  \n      </Dialog>\n    );\n}\n    \nDealTransfer.propTypes = {\n    onClose: PropTypes.func.isRequired,\n    open: PropTypes.bool.isRequired,\n    deal : PropTypes.shape({\n        id: PropTypes.number,\n        description: PropTypes.string,\n        recipient: PropTypes.string\n      })\n};\n\nexport default (DealTransfer);"]},"metadata":{},"sourceType":"module"}