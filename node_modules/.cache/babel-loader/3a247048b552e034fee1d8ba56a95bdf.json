{"ast":null,"code":"var _jsxFileName = \"/Users/kzjouf/Desktop/project/scdapp/src/pages/Deal.js\",\n    _s = $RefreshSig$();\n\nimport { bindActionCreators } from 'redux';\nimport AddPost from '../components/AddPost';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport Dialog from '@material-ui/core/Dialog';\nimport { Typography, Button, TextField, Grid } from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport { DataGrid } from '@material-ui/data-grid';\nimport XContract from './../artifacts/contracts/XContract.sol/XContract.json';\nimport text from './../contract_address.json';\nimport { ethers } from 'ethers';\nimport { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport SendIcon from '@material-ui/icons/Send';\nimport Avatar from '@material-ui/core/Avatar'; // import EditPost from '../../pages2/EditPost/EditPost';\n\nimport PropTypes from 'prop-types';\nimport { useAuth } from \"../helper/AuthContext\"; // import SinglePost from '../../pages2/SinglePost/SinglePost';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DealDialog(props) {\n  _s();\n\n  const classes = useStyles();\n  const {\n    currentBCAccount\n  } = useAuth();\n  const [price, setPrice] = useState();\n  const [offer, setOffer] = useState();\n  const {\n    onCloseOffer,\n    selectedItem,\n    openOffer\n  } = props;\n  useEffect(() => {\n    console.log(selectedItem);\n    loadMinOffer();\n  }, []);\n\n  const handleClose = () => {\n    onClose(selectedItem);\n  };\n\n  async function loadMinOffer() {\n    const response = await fetch(\"/loadMinOffer\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        'user_key': currentBCAccount.privateKey,\n        'id': selectedItem.id\n      })\n    });\n    console.log(selectedItem);\n    let result;\n    let newPosts = [];\n    await response.json().then(message => {// result = message[\"data\"]\n    });\n  }\n\n  async function sendPrice() {\n    const response = await fetch(\"/sendPrice\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        'user_key': currentBCAccount.privateKey,\n        'pubkeyOfRequest': selectedItem.pubkey,\n        'price': price,\n        'id': selectedItem.id\n      })\n    });\n    console.log(selectedItem);\n    let result;\n    let newPosts = [];\n    await response.json().then(message => {// result = message[\"data\"]\n    });\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    \"aria-labelledby\": \"alert-dialog-title\",\n    fullWidth: true,\n    maxWidth: \"xs\",\n    onClose: handleClose,\n    open: open,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      style: {\n        backgroundColor: 'pink',\n        color: 'white'\n      },\n      id: \"alert-dialog-title\",\n      children: \"Current min offer price\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          fullWidth: true,\n          margin: \"dense\",\n          style: {\n            alignSelf: 'flex-start'\n          },\n          variant: \"subtitle1\",\n          children: selectedItem.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          fullWidth: true,\n          margin: \"dense\",\n          style: {\n            alignSelf: 'flex-start'\n          },\n          variant: \"subtitle1\",\n          children: price\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: /*#__PURE__*/_jsxDEV(IconButton, {\n        color: \"primary\",\n        component: \"span\",\n        onClick: sendPrice,\n        children: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 7\n  }, this);\n}\n\n_s(DealDialog, \"XK4VNXYOFuIwR1wqJce/LxNmt80=\", false, function () {\n  return [useStyles, useAuth];\n});\n\n_c = DealDialog;\nconst useStyles = makeStyles({\n  root: {\n    '& .super-app-theme--header': {\n      backgroundColor: 'rgba(255, 7, 0, 0.55)'\n    },\n    '& .super-app-theme--Filled': {\n      backgroundColor: 'rgba(114, 209, 18, 1)'\n    }\n  }\n});\nDealDialog.propTypes = {\n  onCloseOffer: PropTypes.func.isRequired,\n  openOffer: PropTypes.bool.isRequired,\n  selectedItem: PropTypes.shape({\n    id: PropTypes.number,\n    description: PropTypes.string.isRequired,\n    pubkey: PropTypes.string.isRequired\n  })\n};\nexport default DealDialog;\n\nvar _c;\n\n$RefreshReg$(_c, \"DealDialog\");","map":{"version":3,"sources":["/Users/kzjouf/Desktop/project/scdapp/src/pages/Deal.js"],"names":["bindActionCreators","AddPost","DialogTitle","DialogActions","DialogContent","DialogContentText","Dialog","Typography","Button","TextField","Grid","IconButton","DataGrid","XContract","text","ethers","useState","useEffect","makeStyles","SendIcon","Avatar","PropTypes","useAuth","DealDialog","props","classes","useStyles","currentBCAccount","price","setPrice","offer","setOffer","onCloseOffer","selectedItem","openOffer","console","log","loadMinOffer","handleClose","onClose","response","fetch","method","headers","body","JSON","stringify","privateKey","id","result","newPosts","json","then","message","sendPrice","pubkey","open","backgroundColor","color","alignSelf","description","root","propTypes","func","isRequired","bool","shape","number","string"],"mappings":"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","sourcesContent":["import { bindActionCreators } from 'redux';\nimport AddPost from '../components/AddPost';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport Dialog from '@material-ui/core/Dialog';\nimport {Typography, Button, TextField, Grid} from '@material-ui/core'\nimport IconButton from '@material-ui/core/IconButton';\nimport { DataGrid } from '@material-ui/data-grid';\nimport XContract from './../artifacts/contracts/XContract.sol/XContract.json'\nimport text  from './../contract_address.json';\nimport {ethers} from 'ethers'\nimport {useState, useEffect} from 'react'\nimport { makeStyles } from '@material-ui/styles';\nimport SendIcon from '@material-ui/icons/Send';\nimport Avatar from '@material-ui/core/Avatar';\n// import EditPost from '../../pages2/EditPost/EditPost';\nimport PropTypes from 'prop-types';\nimport { useAuth } from \"../helper/AuthContext\"\n// import SinglePost from '../../pages2/SinglePost/SinglePost';\n\nfunction DealDialog(props) {\n    const classes = useStyles();\n    const { currentBCAccount} = useAuth()\n    const [price, setPrice] = useState()\n    const [offer, setOffer] = useState()\n    const { onCloseOffer, selectedItem, openOffer} = props;\n    \n    useEffect(() => {\n        console.log(selectedItem);\n        loadMinOffer();\n        }, [])\n\n    const handleClose = () => {\n      onClose(selectedItem);\n    };\n    async function loadMinOffer(){\n        const response = await fetch(\"/loadMinOffer\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({\n              'user_key': currentBCAccount.privateKey,\n              'id': selectedItem.id\n            }),\n          })\n          console.log(selectedItem)\n          let result\n          let newPosts = []\n          await response.json().then((message) => {\n            // result = message[\"data\"]\n            \n          });\n    }\n\n    async function sendPrice (){\n      const response = await fetch(\"/sendPrice\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          'user_key': currentBCAccount.privateKey,\n          'pubkeyOfRequest': selectedItem.pubkey,\n          'price': price,\n          'id': selectedItem.id\n        }),\n      })\n      console.log(selectedItem)\n      let result\n      let newPosts = []\n      await response.json().then((message) => {\n        // result = message[\"data\"]\n        \n      });\n    };\n  \n    return (\n      <Dialog aria-labelledby=\"alert-dialog-title\" fullWidth maxWidth='xs' onClose={handleClose} open={open}>\n          <DialogTitle  style={{ backgroundColor: 'pink', color: 'white' }} id=\"alert-dialog-title\">\n            Current min offer price\n          </DialogTitle>\n          <DialogContent>\n              <DialogContentText>\n                <Typography fullWidth margin=\"dense\" style={{ alignSelf: 'flex-start'}} variant=\"subtitle1\">{selectedItem.description}</Typography>\n                <Typography fullWidth margin=\"dense\" style={{ alignSelf: 'flex-start'}} variant=\"subtitle1\">{price}</Typography>\n                {/* <Typography fullWidth margin=\"dense\" style={{ alignSelf: 'flex-start'}} variant=\"subtitle1\">{bidder}</Typography> */}\n              </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <IconButton color=\"primary\" component=\"span\" onClick={sendPrice}>\n                  <SendIcon />\n            </IconButton>\n          </DialogActions>\n  \n      </Dialog>\n    );\n  }\n  \n  const useStyles = makeStyles({\n    root: {\n      '& .super-app-theme--header': {\n        backgroundColor: 'rgba(255, 7, 0, 0.55)',\n      },\n      '& .super-app-theme--Filled': {\n        backgroundColor: 'rgba(114, 209, 18, 1)',\n      }\n    }\n  });\n\nDealDialog.propTypes = {\n    onCloseOffer: PropTypes.func.isRequired,\n    openOffer: PropTypes.bool.isRequired,\n    selectedItem: PropTypes.shape({\n      id: PropTypes.number,\n      description: PropTypes.string.isRequired,\n      pubkey: PropTypes.string.isRequired\n    })\n};\nexport default (DealDialog);"]},"metadata":{},"sourceType":"module"}