{"ast":null,"code":"var _jsxFileName = \"/Users/kzjouf/Desktop/project/scdapp/src/pages/Posts.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { bindActionCreators } from 'redux';\nimport AddPost from '../components/AddPost';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport Dialog from '@material-ui/core/Dialog';\nimport { Typography, Button, TextField, Grid } from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport { DataGrid } from '@material-ui/data-grid';\nimport XContract from './../artifacts/contracts/XContract.sol/XContract.json';\nimport text from './../contract_address.json';\nimport { ethers } from 'ethers';\nimport { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport SendIcon from '@material-ui/icons/Send';\nimport Avatar from '@material-ui/core/Avatar'; // import EditPost from '../../pages2/EditPost/EditPost';\n\nimport PropTypes from 'prop-types';\nimport { useAuth } from \"../helper/AuthContext\"; // import SinglePost from '../../pages2/SinglePost/SinglePost';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst contractAddress = text['contract_address'];\n\nfunction Posts(props) {\n  _s();\n\n  const {\n    currentBCAccount,\n    keypair,\n    loading,\n    balance\n  } = useAuth();\n  const [postList, setPostList] = useState([]);\n  const [yourPostList, setYourPostList] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [selectedItem, setSelectedItem] = useState({\n    id: '',\n    description: '',\n    pubkey: '',\n    state: ''\n  });\n  const [content, setContent] = useState();\n  const classes = useStyles();\n  const State = ['Processing', 'Assigned', 'WaitingPaid', 'Closed', 'Cancel'];\n  const columns = [{\n    field: 'id',\n    headerName: 'ID',\n    width: 68,\n    headerClassName: 'super-app-theme--header'\n  }, {\n    field: 'description',\n    headerName: 'Description',\n    headerClassName: 'super-app-theme--header',\n    flex: 1\n  }, // {\n  //     field: 'id',\n  //     headerName: 'id',\n  //     type: 'number',\n  //     width: 50,\n  //     editable: true,\n  //   }\n  {\n    field: 'action',\n    headerName: 'Action',\n    headerClassName: 'super-app-theme--header',\n    width: 150,\n    renderCell: params => /*#__PURE__*/_jsxDEV(\"strong\", {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"small\",\n        onClick: () => handleClickOpen(params),\n        children: \"Offer a price\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }, this),\n    disableClickEventBubbling: true\n  }];\n  const columns2 = [{\n    field: 'id',\n    headerName: 'ID',\n    width: 68,\n    headerClassName: 'super-app-theme--Filled'\n  }, {\n    field: 'description',\n    headerName: 'Description',\n    headerClassName: 'super-app-theme--Filled',\n    flex: 1\n  }, {\n    field: 'state',\n    headerName: 'State',\n    headerClassName: 'super-app-theme--Filled',\n    flex: 1\n  }, {\n    field: 'minprice',\n    headerName: 'Min Price',\n    headerClassName: 'super-app-theme--Filled',\n    flex: 1\n  }, {\n    field: 'action',\n    headerName: 'Action',\n    headerClassName: 'super-app-theme--Filled',\n    width: 150,\n    renderCell: params => /*#__PURE__*/_jsxDEV(\"strong\", {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"small\",\n        onClick: () => handleClickOpen(params),\n        children: \"Ok\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }, this),\n    disableClickEventBubbling: true\n  }];\n  setTimeout(() => {\n    listenEvents();\n  }, 5000);\n\n  const handleClickOpen = params => {\n    console.log(params.row);\n    setSelectedItem(params.row);\n    setOpen(true);\n  };\n\n  const handleClose = value => {\n    setOpen(false);\n    setSelectedItem(value);\n  };\n\n  async function loadTasks() {\n    console.log(\"key \", currentBCAccount.privateKey);\n    const response = await fetch(\"/loadTasks\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        'user_key': currentBCAccount.privateKey\n      })\n    });\n    let result;\n    let newPosts = [];\n    await response.json().then(message => {\n      result = message[\"data\"];\n      console.log(result);\n      result.map(task => {\n        newPosts.push({\n          id: task[0],\n          description: task[1],\n          pubkey: task[2]\n        });\n      });\n      setPostList(newPosts);\n    });\n    await listenEvents();\n    return result;\n  }\n\n  async function loadYourTasks() {\n    const response = await fetch(\"/loadYourTasks\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        'user_key': currentBCAccount.privateKey\n      })\n    });\n    let result;\n    let newYourPosts = [];\n    await response.json().then(message => {\n      result = message[\"data\"];\n      console.log(result);\n      result.map(task => {\n        newYourPosts.push({\n          id: task[0],\n          description: task[1],\n          pubkey: task[2],\n          state: State[task[3]]\n        });\n      });\n      setYourPostList(newYourPosts);\n    });\n    await listenEvents();\n    return result;\n  }\n\n  async function listenEvents() {\n    if (typeof window.ethereum !== 'undefined') {\n      console.log('listenEvents');\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const contract = new ethers.Contract(contractAddress, XContract.abi, provider);\n      contract.on(\"NewPrice\", (id, CL_price, CR_price) => {\n        console.log(\"event \", id, CL_price, CR_price);\n      }); // console.log(contract.events)\n      // await contract.events.NewPrice({}).on(\"data\", (e) => console.log(e));\n    }\n  }\n\n  useEffect(() => {\n    loadTasks();\n    loadYourTasks();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '800px',\n      marginLeft: 100,\n      marginRight: 20\n    },\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      \"align-items\": \"center\",\n      spacing: 2,\n      style: {\n        width: '100%',\n        height: \"100%\",\n        flex: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: [/*#__PURE__*/_jsxDEV(DataGrid, {\n          rows: postList,\n          columns: columns,\n          pageSize: 8 //   checkboxSelection\n          ,\n          disableSelectionOnClick: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(SimpleDialog, {\n          selectedItem: selectedItem,\n          open: open,\n          onClose: handleClose,\n          content: content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            height: '800px',\n            marginLeft: 100,\n            marginRight: 20\n          },\n          size: \"small\",\n          color: \"primary\",\n          onClick: loadTasks,\n          children: \" Load Tasks \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: [/*#__PURE__*/_jsxDEV(DataGrid, {\n          rows: yourPostList,\n          columns: columns2,\n          pageSize: 8 //   checkboxSelection\n          ,\n          disableSelectionOnClick: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(SimpleDialog, {\n          selectedItem: selectedItem,\n          open: open,\n          onClose: handleClose,\n          content: content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          size: \"small\",\n          color: \"primary\",\n          onClick: loadYourTasks,\n          children: \" Load Your Tasks \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 198,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Posts, \"u4t0kCVLQxgenfo3usrTxdZIs0A=\", false, function () {\n  return [useAuth, useStyles];\n});\n\n_c = Posts;\nconst useStyles = makeStyles({\n  root: {\n    '& .super-app-theme--header': {\n      backgroundColor: 'rgba(255, 7, 0, 0.55)'\n    },\n    '& .super-app-theme--Filled': {\n      backgroundColor: 'rgba(114, 209, 18, 1)'\n    }\n  }\n});\nexport default Posts;\n\nfunction SimpleDialog(props) {\n  _s2();\n\n  const classes = useStyles();\n  const {\n    currentBCAccount,\n    keypair,\n    loading,\n    balance\n  } = useAuth();\n  const [price, setPrice] = useState();\n  const {\n    onClose,\n    selectedItem,\n    open\n  } = props;\n\n  const handleClose = () => {\n    onClose(selectedItem);\n  };\n\n  async function sendPrice() {\n    const response = await fetch(\"/sendPrice\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        'user_key': currentBCAccount.privateKey,\n        'pubkeyOfRequest': selectedItem.pubkey,\n        'price': price,\n        'id': selectedItem.id\n      })\n    });\n    console.log(selectedItem);\n    let result;\n    let newPosts = [];\n    await response.json().then(message => {// result = message[\"data\"]\n    });\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    \"aria-labelledby\": \"alert-dialog-title\",\n    fullWidth: true,\n    maxWidth: \"xs\",\n    onClose: handleClose,\n    open: open,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      style: {\n        backgroundColor: 'navy',\n        color: 'white'\n      },\n      id: \"alert-dialog-title\",\n      children: \"Offer a price\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          fullWidth: true,\n          margin: \"dense\",\n          style: {\n            alignSelf: 'flex-start'\n          },\n          variant: \"subtitle1\",\n          children: selectedItem.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        onChange: e => setPrice(e.target.value),\n        autoFocus: true,\n        margin: \"dense\",\n        id: \"name\",\n        label: \"Price\",\n        type: \"number\",\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: /*#__PURE__*/_jsxDEV(IconButton, {\n        color: \"primary\",\n        component: \"span\",\n        onClick: sendPrice,\n        children: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 274,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(SimpleDialog, \"rUyO3z+gWjwowiubThoYEfCDzwo=\", false, function () {\n  return [useStyles, useAuth];\n});\n\n_c2 = SimpleDialog;\nSimpleDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  selectedItem: PropTypes.shape({\n    id: PropTypes.number,\n    description: PropTypes.string.isRequired,\n    pubkey: PropTypes.string.isRequired\n  })\n};\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Posts\");\n$RefreshReg$(_c2, \"SimpleDialog\");","map":{"version":3,"sources":["/Users/kzjouf/Desktop/project/scdapp/src/pages/Posts.js"],"names":["bindActionCreators","AddPost","DialogTitle","DialogActions","DialogContent","DialogContentText","Dialog","Typography","Button","TextField","Grid","IconButton","DataGrid","XContract","text","ethers","useState","useEffect","makeStyles","SendIcon","Avatar","PropTypes","useAuth","contractAddress","Posts","props","currentBCAccount","keypair","loading","balance","postList","setPostList","yourPostList","setYourPostList","open","setOpen","selectedItem","setSelectedItem","id","description","pubkey","state","content","setContent","classes","useStyles","State","columns","field","headerName","width","headerClassName","flex","renderCell","params","handleClickOpen","disableClickEventBubbling","columns2","setTimeout","listenEvents","console","log","row","handleClose","value","loadTasks","privateKey","response","fetch","method","headers","body","JSON","stringify","result","newPosts","json","then","message","map","task","push","loadYourTasks","newYourPosts","window","ethereum","provider","providers","Web3Provider","contract","Contract","abi","on","CL_price","CR_price","height","marginLeft","marginRight","root","backgroundColor","SimpleDialog","price","setPrice","onClose","sendPrice","color","alignSelf","e","target","propTypes","func","isRequired","bool","shape","number","string"],"mappings":"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","sourcesContent":["import { bindActionCreators } from 'redux';\nimport AddPost from '../components/AddPost';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport Dialog from '@material-ui/core/Dialog';\nimport {Typography, Button, TextField, Grid} from '@material-ui/core'\nimport IconButton from '@material-ui/core/IconButton';\nimport { DataGrid } from '@material-ui/data-grid';\nimport XContract from './../artifacts/contracts/XContract.sol/XContract.json'\nimport text  from './../contract_address.json';\nimport {ethers} from 'ethers'\nimport {useState, useEffect} from 'react'\nimport { makeStyles } from '@material-ui/styles';\nimport SendIcon from '@material-ui/icons/Send';\nimport Avatar from '@material-ui/core/Avatar';\n// import EditPost from '../../pages2/EditPost/EditPost';\nimport PropTypes from 'prop-types';\nimport { useAuth } from \"../helper/AuthContext\"\n// import SinglePost from '../../pages2/SinglePost/SinglePost';\nconst contractAddress = text['contract_address']\n\nfunction Posts (props) {\n    const { currentBCAccount, keypair, loading, balance} = useAuth()\n    const [postList, setPostList] = useState([])\n    const [yourPostList, setYourPostList] = useState([])\n    const [open, setOpen] = useState(false);\n    const [selectedItem, setSelectedItem] = useState({id:'', description: '', pubkey:'', state:''});\n    const [content, setContent] = useState();\n    const classes = useStyles();\n    const State = ['Processing', 'Assigned', 'WaitingPaid', 'Closed', 'Cancel'] ;\n    const columns = [\n      { field: 'id', headerName: 'ID', width: 68, headerClassName: 'super-app-theme--header'},\n      {\n        field: 'description',\n        headerName: 'Description',\n        headerClassName: 'super-app-theme--header',\n        flex: 1\n      },\n      // {\n      //     field: 'id',\n      //     headerName: 'id',\n      //     type: 'number',\n      //     width: 50,\n      //     editable: true,\n      //   }\n      {\n        field: 'action',\n        headerName: 'Action', headerClassName: 'super-app-theme--header',\n        width: 150,\n        renderCell: (params) => (\n          <strong>\n\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              size=\"small\"\n              onClick={() => handleClickOpen(params)}>\n              Offer a price\n            </Button>\n          </strong>\n        ),\n        disableClickEventBubbling: true,\n      }\n    ];\n\n    const columns2 = [\n      { field: 'id', headerName: 'ID', width: 68, headerClassName: 'super-app-theme--Filled'},\n      {\n        field: 'description',\n        headerName: 'Description',\n        headerClassName: 'super-app-theme--Filled',\n        flex: 1\n      },\n      {\n        field: 'state',\n        headerName: 'State',\n        headerClassName: 'super-app-theme--Filled',\n        flex: 1\n      },\n      {\n        field: 'minprice',\n        headerName: 'Min Price',\n        headerClassName: 'super-app-theme--Filled',\n        flex: 1\n      },\n      {\n        field: 'action',\n        headerName: 'Action', headerClassName: 'super-app-theme--Filled',\n        width: 150,\n        renderCell: (params) => (\n          <strong>\n\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              size=\"small\"\n              onClick={() => handleClickOpen(params)}>\n              Ok\n            </Button>\n          </strong>\n        ),\n        disableClickEventBubbling: true,\n      }\n    ];\n\n      setTimeout(()=>{\n        listenEvents()\n      }, 5000);\n    \n      const handleClickOpen = (params) => {\n        console.log(params.row);\n        setSelectedItem(params.row)\n        setOpen(true);\n      };\n    \n      const handleClose = (value) => {\n        setOpen(false);\n        setSelectedItem(value);\n      };\n\n    async function loadTasks(){\n      console.log(\"key \", currentBCAccount.privateKey)\n      const response = await fetch(\"/loadTasks\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          'user_key': currentBCAccount.privateKey\n        })\n      })\n      let result\n      let newPosts = []\n      await response.json().then((message) => {\n        result = message[\"data\"]\n        console.log(result)\n        result.map((task) => {\n          newPosts.push({id : task[0],\n            description : task[1],\n            pubkey: task[2]\n          })\n        })\n        setPostList(newPosts)\n      });\n      await listenEvents()\n      return result      \n    }\n\n    async function loadYourTasks(){\n      const response = await fetch(\"/loadYourTasks\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          'user_key': currentBCAccount.privateKey\n        })\n      })\n      let result\n      let newYourPosts = []\n      await response.json().then((message) => {\n        result = message[\"data\"]\n        console.log(result)\n        result.map((task) => {\n          newYourPosts.push({id : task[0],\n            description : task[1],\n            pubkey: task[2],\n            state: State[task[3]]\n          })\n        })\n        setYourPostList(newYourPosts)\n      });\n      await listenEvents()\n      return result      \n    }\n\n    async function listenEvents(){\n      \n      if (typeof window.ethereum !== 'undefined'){\n        console.log('listenEvents')\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const contract = new ethers.Contract(contractAddress, XContract.abi, provider);\n        contract.on(\"NewPrice\", (id, CL_price, CR_price) => {\n          console.log(\"event \", id, CL_price, CR_price);\n        })\n        // console.log(contract.events)\n        // await contract.events.NewPrice({}).on(\"data\", (e) => console.log(e));\n      }\n    }\n\n    useEffect(() => {\n      loadTasks();\n      loadYourTasks();\n      }, [])\n\n      \n        \n    \n    return (\n        <div style={{ height: '800px',  marginLeft: 100, marginRight: 20}} className={classes.root}>\n          <Grid container align-items=\"center\" spacing={2} style={{width: '100%',height: \"100%\", flex: 1 }}>\n              <Grid item xs={12}>\n                <DataGrid\n                  rows={postList}\n                  columns={columns}\n                  pageSize={8}\n                //   checkboxSelection\n                  disableSelectionOnClick\n                />\n                <SimpleDialog selectedItem={selectedItem} open={open} onClose={handleClose} content={content}/>\n                <Button style={{ height: '800px',  marginLeft: 100, marginRight: 20}} size =\"small\" color=\"primary\" onClick={loadTasks} > Load Tasks </Button>\n              </Grid>\n              <Grid item xs={12} >\n                <DataGrid\n                  rows={yourPostList}\n                  columns={columns2}\n                  pageSize={8}\n                //   checkboxSelection\n                  disableSelectionOnClick\n                />\n                <SimpleDialog selectedItem={selectedItem} open={open} onClose={handleClose} content={content}/>\n                <Button size =\"small\" color=\"primary\" onClick={loadYourTasks} > Load Your Tasks </Button>\n              </Grid>\n          </Grid>\n      </div>\n  \n    );\n    \n}\n\nconst useStyles = makeStyles({\n  root: {\n    '& .super-app-theme--header': {\n      backgroundColor: 'rgba(255, 7, 0, 0.55)',\n    },\n    '& .super-app-theme--Filled': {\n      backgroundColor: 'rgba(114, 209, 18, 1)',\n    }\n  }\n});\nexport default (Posts);\n\nfunction SimpleDialog(props) {\n  const classes = useStyles();\n  const { currentBCAccount, keypair, loading, balance} = useAuth()\n  const [price, setPrice] = useState()\n  const { onClose, selectedItem, open} = props;\n\n  const handleClose = () => {\n    onClose(selectedItem);\n  };\n\n  async function sendPrice (){\n    const response = await fetch(\"/sendPrice\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        'user_key': currentBCAccount.privateKey,\n        'pubkeyOfRequest': selectedItem.pubkey,\n        'price': price,\n        'id': selectedItem.id\n      }),\n    })\n    console.log(selectedItem)\n    let result\n    let newPosts = []\n    await response.json().then((message) => {\n      // result = message[\"data\"]\n      \n    });\n  };\n\n\n\n  return (\n    <Dialog aria-labelledby=\"alert-dialog-title\" fullWidth maxWidth='xs' onClose={handleClose} open={open}>\n        <DialogTitle  style={{ backgroundColor: 'navy', color: 'white' }} id=\"alert-dialog-title\">\n          Offer a price\n        </DialogTitle>\n        <DialogContent>\n            <DialogContentText>\n              <Typography fullWidth margin=\"dense\" style={{ alignSelf: 'flex-start'}} variant=\"subtitle1\">{selectedItem.description}</Typography>\n            </DialogContentText>\n              <TextField onChange={e => setPrice(e.target.value)} autoFocus\n                        margin=\"dense\"\n                        id=\"name\"\n                        label=\"Price\"\n                        type=\"number\"\n                        fullWidth          />\n        </DialogContent>\n        <DialogActions>\n          <IconButton color=\"primary\" component=\"span\" onClick={sendPrice}>\n                <SendIcon />\n          </IconButton>\n        </DialogActions>\n\n    </Dialog>\n  );\n}\n\nSimpleDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  selectedItem: PropTypes.shape({\n    id: PropTypes.number,\n    description: PropTypes.string.isRequired,\n    pubkey: PropTypes.string.isRequired\n  })\n};\n\n"]},"metadata":{},"sourceType":"module"}