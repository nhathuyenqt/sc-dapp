{"ast":null,"code":"var _jsxFileName = \"/Users/kzjouf/Desktop/project/scdapp/src/pages/Posts.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { bindActionCreators } from 'redux';\nimport AddPost from '../components/AddPost';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport Dialog from '@material-ui/core/Dialog';\nimport { Typography, Button, TextField, Grid } from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport { DataGrid } from '@material-ui/data-grid';\nimport XContract from './../artifacts/contracts/XContract.sol/XContract.json';\nimport text from './../contract_address.json';\nimport { ethers } from 'ethers';\nimport { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport SendIcon from '@material-ui/icons/Send';\nimport Avatar from '@material-ui/core/Avatar'; // import EditPost from '../../pages2/EditPost/EditPost';\n\nimport PropTypes from 'prop-types';\nimport { useAuth } from \"../helper/AuthContext\"; // import SinglePost from '../../pages2/SinglePost/SinglePost';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst contractAddress = text['contract_address'];\n\nfunction Posts(props) {\n  _s();\n\n  const [postList, setPostList] = useState([]);\n  const [yourPostList, setYourPostList] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [selectedItem, setSelectedItem] = useState({\n    id: '',\n    description: '',\n    pubkey: ''\n  });\n  const [content, setContent] = useState();\n  const classes = useStyles();\n  const columns = [{\n    field: 'id',\n    headerName: 'ID',\n    width: 68,\n    headerClassName: 'super-app-theme--header'\n  }, {\n    field: 'title',\n    headerName: 'Title',\n    width: 150,\n    headerClassName: 'super-app-theme--header'\n  }, {\n    field: 'description',\n    headerName: 'Description',\n    headerClassName: 'super-app-theme--header',\n    flex: 1\n  }, // {\n  //     field: 'id',\n  //     headerName: 'id',\n  //     type: 'number',\n  //     width: 50,\n  //     editable: true,\n  //   }\n  {\n    field: 'action',\n    headerName: 'Action',\n    headerClassName: 'super-app-theme--header',\n    width: 150,\n    renderCell: params => /*#__PURE__*/_jsxDEV(\"strong\", {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"small\",\n        onClick: () => handleClickOpen(params),\n        children: \"Offer a price\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }, this),\n    disableClickEventBubbling: true\n  }];\n  setTimeout(() => {\n    listenEvents();\n  }, 5000);\n\n  const handleClickOpen = params => {\n    console.log(params.row);\n    setSelectedItem(params.row);\n    setOpen(true);\n  };\n\n  const handleClose = value => {\n    setOpen(false);\n    setSelectedItem(value);\n  };\n\n  async function loadTasks() {\n    const response = await fetch(\"/loadTasks\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    let result;\n    let newPosts = [];\n    await response.json().then(message => {\n      result = message[\"data\"];\n      console.log(result);\n      result.map(task => {\n        newPosts.push({\n          id: task[0],\n          description: task[1],\n          pubkey: task[2]\n        });\n      });\n      setPostList(newPosts);\n    });\n    await listenEvents();\n    return result;\n  }\n\n  async function loadYourTasks() {\n    const response = await fetch(\"/loadYourTasks\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    let result;\n    let newPosts = [];\n    await response.json().then(message => {\n      result = message[\"data\"];\n      console.log(result);\n      result.map(task => {\n        newPosts.push({\n          id: task[0],\n          description: task[1],\n          pubkey: task[2]\n        });\n      });\n      setYourPostList(newYourPosts);\n    });\n    await listenEvents();\n    return result;\n  }\n\n  async function listenEvents() {\n    if (typeof window.ethereum !== 'undefined') {\n      console.log('listenEvents');\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const contract = new ethers.Contract(contractAddress, XContract.abi, provider);\n      contract.on(\"NewPrice\", (id, CL_price, CR_price) => {\n        console.log(\"event \", id, CL_price, CR_price);\n      }); // console.log(contract.events)\n      // await contract.events.NewPrice({}).on(\"data\", (e) => console.log(e));\n    }\n  }\n\n  useEffect(() => {}, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '800px',\n      marginLeft: 100,\n      marginRight: '100px',\n      alignSelf: 'flex-start'\n    },\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      \"align-items\": \"center\",\n      spacing: 2,\n      style: {\n        height: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: [/*#__PURE__*/_jsxDEV(DataGrid, {\n          rows: postList,\n          columns: columns,\n          pageSize: 4 //   checkboxSelection\n          ,\n          disableSelectionOnClick: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(SimpleDialog, {\n          selectedItem: selectedItem,\n          open: open,\n          onClose: handleClose,\n          content: content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          size: \"small\",\n          color: \"primary\",\n          onClick: loadTasks,\n          children: \" Load Tasks \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: [/*#__PURE__*/_jsxDEV(DataGrid, {\n          rows: postList,\n          columns: columns,\n          pageSize: 4 //   checkboxSelection\n          ,\n          disableSelectionOnClick: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(SimpleDialog, {\n          selectedItem: selectedItem,\n          open: open,\n          onClose: handleClose,\n          content: content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          size: \"small\",\n          color: \"primary\",\n          onClick: loadYourTasks,\n          children: \" Load Your Tasks \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Posts, \"MMeQiqz8M6yl6LtZKjiGjRSHJu0=\", false, function () {\n  return [useStyles];\n});\n\n_c = Posts;\nconst useStyles = makeStyles({\n  root: {\n    '& .super-app-theme--header': {\n      backgroundColor: 'rgba(255, 7, 0, 0.55)'\n    }\n  }\n});\nexport default Posts;\n\nfunction SimpleDialog(props) {\n  _s2();\n\n  const classes = useStyles();\n  const {\n    currentBCAccount,\n    keypair,\n    loading,\n    balance\n  } = useAuth();\n  const [price, setPrice] = useState();\n  const {\n    onClose,\n    selectedItem,\n    open\n  } = props;\n\n  const handleClose = () => {\n    onClose(selectedItem);\n  };\n\n  async function sendPrice() {\n    const response = await fetch(\"/sendPrice\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        'user_key': currentBCAccount.privateKey,\n        'pubkeyOfRequest': selectedItem.pubkey,\n        'price': price,\n        'id': selectedItem.id\n      })\n    });\n    console.log(selectedItem);\n    let result;\n    let newPosts = [];\n    await response.json().then(message => {// result = message[\"data\"]\n    });\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    \"aria-labelledby\": \"alert-dialog-title\",\n    fullWidth: true,\n    maxWidth: \"xs\",\n    onClose: handleClose,\n    open: open,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      style: {\n        backgroundColor: 'navy',\n        color: 'white'\n      },\n      id: \"alert-dialog-title\",\n      children: \"Offer a price\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          fullWidth: true,\n          margin: \"dense\",\n          style: {\n            alignSelf: 'flex-start'\n          },\n          variant: \"subtitle1\",\n          children: selectedItem.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        onChange: e => setPrice(e.target.value),\n        autoFocus: true,\n        margin: \"dense\",\n        id: \"name\",\n        label: \"Price\",\n        type: \"number\",\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: /*#__PURE__*/_jsxDEV(IconButton, {\n        color: \"primary\",\n        component: \"span\",\n        onClick: sendPrice,\n        children: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 227,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(SimpleDialog, \"rUyO3z+gWjwowiubThoYEfCDzwo=\", false, function () {\n  return [useStyles, useAuth];\n});\n\n_c2 = SimpleDialog;\nSimpleDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  selectedItem: PropTypes.shape({\n    id: PropTypes.number,\n    description: PropTypes.string.isRequired,\n    pubkey: PropTypes.string.isRequired\n  })\n};\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Posts\");\n$RefreshReg$(_c2, \"SimpleDialog\");","map":{"version":3,"sources":["/Users/kzjouf/Desktop/project/scdapp/src/pages/Posts.js"],"names":["bindActionCreators","AddPost","DialogTitle","DialogActions","DialogContent","DialogContentText","Dialog","Typography","Button","TextField","Grid","IconButton","DataGrid","XContract","text","ethers","useState","useEffect","makeStyles","SendIcon","Avatar","PropTypes","useAuth","contractAddress","Posts","props","postList","setPostList","yourPostList","setYourPostList","open","setOpen","selectedItem","setSelectedItem","id","description","pubkey","content","setContent","classes","useStyles","columns","field","headerName","width","headerClassName","flex","renderCell","params","handleClickOpen","disableClickEventBubbling","setTimeout","listenEvents","console","log","row","handleClose","value","loadTasks","response","fetch","method","headers","result","newPosts","json","then","message","map","task","push","loadYourTasks","newYourPosts","window","ethereum","provider","providers","Web3Provider","contract","Contract","abi","on","CL_price","CR_price","height","marginLeft","marginRight","alignSelf","root","backgroundColor","SimpleDialog","currentBCAccount","keypair","loading","balance","price","setPrice","onClose","sendPrice","body","JSON","stringify","privateKey","color","e","target","propTypes","func","isRequired","bool","shape","number","string"],"mappings":"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","sourcesContent":["import { bindActionCreators } from 'redux';\nimport AddPost from '../components/AddPost';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport Dialog from '@material-ui/core/Dialog';\nimport {Typography, Button, TextField, Grid} from '@material-ui/core'\nimport IconButton from '@material-ui/core/IconButton';\nimport { DataGrid } from '@material-ui/data-grid';\nimport XContract from './../artifacts/contracts/XContract.sol/XContract.json'\nimport text  from './../contract_address.json';\nimport {ethers} from 'ethers'\nimport {useState, useEffect} from 'react'\nimport { makeStyles } from '@material-ui/styles';\nimport SendIcon from '@material-ui/icons/Send';\nimport Avatar from '@material-ui/core/Avatar';\n// import EditPost from '../../pages2/EditPost/EditPost';\nimport PropTypes from 'prop-types';\nimport { useAuth } from \"../helper/AuthContext\"\n// import SinglePost from '../../pages2/SinglePost/SinglePost';\nconst contractAddress = text['contract_address']\n\nfunction Posts (props) {\n    \n    const [postList, setPostList] = useState([])\n    const [yourPostList, setYourPostList] = useState([])\n    const [open, setOpen] = useState(false);\n    const [selectedItem, setSelectedItem] = useState({id:'', description: '', pubkey:''});\n    const [content, setContent] = useState();\n    const classes = useStyles();\n    const columns = [\n      { field: 'id', headerName: 'ID', width: 68, headerClassName: 'super-app-theme--header'},\n      {\n        field: 'title',\n        headerName: 'Title',\n        width: 150,\n        headerClassName: 'super-app-theme--header'\n      },\n      {\n        field: 'description',\n        headerName: 'Description',\n        headerClassName: 'super-app-theme--header',\n        flex: 1\n      },\n      // {\n      //     field: 'id',\n      //     headerName: 'id',\n      //     type: 'number',\n      //     width: 50,\n      //     editable: true,\n      //   }\n      {\n        field: 'action',\n        headerName: 'Action', headerClassName: 'super-app-theme--header',\n        width: 150,\n        renderCell: (params) => (\n          <strong>\n\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              size=\"small\"\n              onClick={() => handleClickOpen(params)}>\n              Offer a price\n            </Button>\n          </strong>\n        ),\n        disableClickEventBubbling: true,\n      }\n    ];\n\n      setTimeout(()=>{\n        listenEvents()\n      }, 5000);\n    \n      const handleClickOpen = (params) => {\n        console.log(params.row);\n        setSelectedItem(params.row)\n        setOpen(true);\n      };\n    \n      const handleClose = (value) => {\n        setOpen(false);\n        setSelectedItem(value);\n      };\n\n    async function loadTasks(){\n      const response = await fetch(\"/loadTasks\", {\n        method: \"GET\",\n        headers: { \"Content-Type\": \"application/json\" }\n      })\n      let result\n      let newPosts = []\n      await response.json().then((message) => {\n        result = message[\"data\"]\n        console.log(result)\n        result.map((task) => {\n          newPosts.push({id : task[0],\n            description : task[1],\n            pubkey: task[2]\n          })\n        })\n        setPostList(newPosts)\n      });\n      await listenEvents()\n      return result      \n    }\n\n    async function loadYourTasks(){\n      const response = await fetch(\"/loadYourTasks\", {\n        method: \"GET\",\n        headers: { \"Content-Type\": \"application/json\" }\n      })\n      let result\n      let newPosts = []\n      await response.json().then((message) => {\n        result = message[\"data\"]\n        console.log(result)\n        result.map((task) => {\n          newPosts.push({id : task[0],\n            description : task[1],\n            pubkey: task[2]\n          })\n        })\n        setYourPostList(newYourPosts)\n      });\n      await listenEvents()\n      return result      \n    }\n\n    async function listenEvents(){\n      \n      if (typeof window.ethereum !== 'undefined'){\n        console.log('listenEvents')\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const contract = new ethers.Contract(contractAddress, XContract.abi, provider);\n        contract.on(\"NewPrice\", (id, CL_price, CR_price) => {\n          console.log(\"event \", id, CL_price, CR_price);\n        })\n        // console.log(contract.events)\n        // await contract.events.NewPrice({}).on(\"data\", (e) => console.log(e));\n      }\n    }\n\n    useEffect(() => {\n      \n      }, [])\n\n      \n        \n    \n    return (\n        <div style={{ height: '800px',  marginLeft: 100, marginRight: '100px', alignSelf: 'flex-start'}} className={classes.root}>\n          <Grid container align-items=\"center\" spacing={2} style={{height: '100%'}}>\n              <Grid item xs={6}>\n                <DataGrid\n                  rows={postList}\n                  columns={columns}\n                  pageSize={4}\n                //   checkboxSelection\n                  disableSelectionOnClick\n                />\n                <SimpleDialog selectedItem={selectedItem} open={open} onClose={handleClose} content={content}/>\n                <Button size =\"small\" color=\"primary\" onClick={loadTasks} > Load Tasks </Button>\n              </Grid>\n              <Grid item xs={6} >\n                <DataGrid\n                  rows={postList}\n                  columns={columns}\n                  pageSize={4}\n                //   checkboxSelection\n                  disableSelectionOnClick\n                />\n                <SimpleDialog selectedItem={selectedItem} open={open} onClose={handleClose} content={content}/>\n                <Button size =\"small\" color=\"primary\" onClick={loadYourTasks} > Load Your Tasks </Button>\n              </Grid>\n          </Grid>\n      </div>\n  \n    );\n    \n}\n\nconst useStyles = makeStyles({\n  root: {\n    '& .super-app-theme--header': {\n      backgroundColor: 'rgba(255, 7, 0, 0.55)',\n    },\n  },\n});\nexport default (Posts);\n\nfunction SimpleDialog(props) {\n  const classes = useStyles();\n  const { currentBCAccount, keypair, loading, balance} = useAuth()\n  const [price, setPrice] = useState()\n  const { onClose, selectedItem, open} = props;\n\n  const handleClose = () => {\n    onClose(selectedItem);\n  };\n\n  async function sendPrice (){\n    const response = await fetch(\"/sendPrice\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        'user_key': currentBCAccount.privateKey,\n        'pubkeyOfRequest': selectedItem.pubkey,\n        'price': price,\n        'id': selectedItem.id\n      }),\n    })\n    console.log(selectedItem)\n    let result\n    let newPosts = []\n    await response.json().then((message) => {\n      // result = message[\"data\"]\n      \n    });\n  };\n\n\n\n  return (\n    <Dialog aria-labelledby=\"alert-dialog-title\" fullWidth maxWidth='xs' onClose={handleClose} open={open}>\n        <DialogTitle  style={{ backgroundColor: 'navy', color: 'white' }} id=\"alert-dialog-title\">\n          Offer a price\n        </DialogTitle>\n        <DialogContent>\n            <DialogContentText>\n              <Typography fullWidth margin=\"dense\" style={{ alignSelf: 'flex-start'}} variant=\"subtitle1\">{selectedItem.description}</Typography>\n            </DialogContentText>\n              <TextField onChange={e => setPrice(e.target.value)} autoFocus\n                        margin=\"dense\"\n                        id=\"name\"\n                        label=\"Price\"\n                        type=\"number\"\n                        fullWidth          />\n        </DialogContent>\n        <DialogActions>\n          <IconButton color=\"primary\" component=\"span\" onClick={sendPrice}>\n                <SendIcon />\n          </IconButton>\n        </DialogActions>\n\n    </Dialog>\n  );\n}\n\nSimpleDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  selectedItem: PropTypes.shape({\n    id: PropTypes.number,\n    description: PropTypes.string.isRequired,\n    pubkey: PropTypes.string.isRequired\n  })\n};"]},"metadata":{},"sourceType":"module"}