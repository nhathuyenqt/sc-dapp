{"ast":null,"code":"var _jsxFileName = \"/Users/kzjouf/Desktop/project/scdapp/src/App.js\",\n    _s = $RefreshSig$();\n\n// import logo from './logo.svg';\nimport './App.css';\nimport Header from './pages/Header';\nimport Navbar from './components/Navbar';\nimport { BrowserRouter as Router, Switch, Route, Redirect, withRouter } from 'react-router-dom';\nimport Home from './pages/Home';\nimport History from './pages/History';\nimport Reports from './pages/Reports';\nimport Posts from './pages/Posts';\nimport GroupList from './pages/AdminPage';\nimport { AuthProvider, useAuth } from \"./helper/AuthContext\";\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport Login from './pages/Login';\nimport { checkAutoLogin } from './AuthFunction';\nimport Main from './pages/Main';\nimport { connect, useDispatch } from 'react-redux';\nimport { FirebaseDatabaseProvider } from \"@react-firebase/database\";\nimport { useState, useEffect, Suspense } from 'react';\nimport './pages/Login.css';\nimport { useHistory } from \"react-router-dom\";\nimport { isAuthenticated } from './pages/AuthSelector'; // function App() {\n//   let history = useHistory()\n//   const [authorized, setAuthorized] = useState(false);\n//   const [user, setUser] = useState({name:\"\", address:\"\"});\n//   const [error, setError] = useState(\"\");\n//   const Login = details =>{\n//     console.log(details);\n//     console.log((details.name == 'admin' ));\n//     if (details.name == 'admin'){\n//       setAuthorized(true);\n//       history.push(\"/dashboard\");\n//     }else{\n//       setError(\"Details do not match!\");\n//       setAuthorized(false);\n//     }\n//   }\n//   const Logout = () =>{\n//     userHasAuthenticated(false);\n//     history.push(\"/login\");\n//   }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App(props) {\n  _s();\n\n  // const dispatch = useDispatch();\n  // const { currentUser } = useAuth()\n  useEffect(() => {\n    console.log(props); // checkAutoLogin(dispatch, props.history);\n  }, []);\n\n  let routes = /*#__PURE__*/_jsxDEV(Switch, {\n    children: /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/login\",\n      component: Login\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 7\n  }, this); // if (props.isAuthenticated) {\n  // if (currentUser){\n  //     routes = (\n  //         <Switch>\n  //             {/* <Route exact path=\"/dashboard\" component={() => <Dashboard  authorized={authorized}/>} /> */}\n  //             <Route path='/dashboard' component={Dashboard} />\n  //             {/* <Redirect to='/' /> */}\n  //         </Switch>\n  //     );\n  // }\n\n\n  return (\n    /*#__PURE__*/\n    // <div>\n    //     {/* <Header /> */}\n    //     <div className='container px-3 mx-auto'>\n    //         <Suspense fallback={<div>Loading...</div>}>\n    //             {routes}\n    //         </Suspense>\n    //     </div>\n    // </div>\n    _jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(AuthProvider, {\n        children: /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/login\",\n            exact: true,\n            component: Login\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n            exact: true,\n            path: \"/\",\n            component: Main\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }, this)\n  );\n} // const mapStateToProps = (state) => {\n//   return {\n//       isAuthenticated: isAuthenticated(state),\n//   };\n// };\n// function App(){\n//     return (\n//         // <header className=\"App-header\">\n//         //       <button onClick={fetchGreeting}> Fetch Greeting </button> \n//         //       <button onClick={setGreeting}> Set Greeting </button>\n//         //       <input \n//         //         onChange={e => setGreetingValue(e.target.value)} \n//         //         placeholder=\"Set greeting\"\n//         //         value={greeting}\n//         //       /> \n//         //     </header> \n//          <Router>\n//             {/* <Navbar /> */}\n//               <Switch>\n//                 <Route path='/login' exact component={Login} /> \n//                 <Route path='/' component={Dashboard} />  \n//                 {/*<Route path='/home' exact component={Home} />\n//                 <Route path='/posts' component={Posts} />\n//                 <Route path='/history' component={History} />\n//                 <Route path='/reports' component={Reports} />\n//                 <Route path='/admin' component={GroupList} />  */}\n//                 {/* <Redirect to='/login' from='*' /> */}\n//                 {/* <Route path='/products' component={Products} /> */}\n//               </Switch> \n//            </Router>\n//       );\n// }\n// export default Dashboard;\n\n\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/kzjouf/Desktop/project/scdapp/src/App.js"],"names":["Header","Navbar","BrowserRouter","Router","Switch","Route","Redirect","withRouter","Home","History","Reports","Posts","GroupList","AuthProvider","useAuth","PrivateRoute","Login","checkAutoLogin","Main","connect","useDispatch","FirebaseDatabaseProvider","useState","useEffect","Suspense","useHistory","isAuthenticated","App","props","console","log","routes"],"mappings":";;;AAAA;AACA,OAAO,WAAP;AACA,OAAOA,MAAP,MAAmB,gBAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,EAAiDC,QAAjD,EAA2DC,UAA3D,QAA6E,kBAA7E;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,SAASC,YAAT,EAAuBC,OAAvB,QAAsC,sBAAtC;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,SAASC,cAAT,QAA+B,gBAA/B;AAEA,OAAOC,IAAP,MAAiB,cAAjB;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,aAArC;AACA,SAASC,wBAAT,QAAyC,0BAAzC;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,QAA9B,QAA6C,OAA7C;AACA,OAAO,mBAAP;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,SAASC,eAAT,QAAgC,sBAAhC,C,CAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;;;;AAKA,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAAA;;AAClB;AACA;AACAL,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,EADY,CAEZ;AACH,GAHQ,EAGN,EAHM,CAAT;;AAOA,MAAIG,MAAM,gBACN,QAAC,MAAD;AAAA,2BAEI,QAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAc,MAAA,IAAI,EAAC,QAAnB;AAA4B,MAAA,SAAS,EAAEf;AAAvC;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADJ,CAVkB,CAiBlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEI,YAAC,MAAD;AAAA,6BAEE,QAAC,YAAD;AAAA,+BACE,QAAC,MAAD;AAAA,kCACE,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,QAAZ;AAAqB,YAAA,KAAK,MAA1B;AAA2B,YAAA,SAAS,EAAEA;AAAtC;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,YAAD;AAAc,YAAA,KAAK,MAAnB;AAAoB,YAAA,IAAI,EAAC,GAAzB;AAA6B,YAAA,SAAS,EAAEE;AAAxC;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA;AAVR;AA6BD,C,CAED;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AAEA;;;GApGSS,G;;KAAAA,G;AAsGT,eAAeA,GAAf","sourcesContent":["// import logo from './logo.svg';\nimport './App.css';\nimport Header from './pages/Header';\nimport Navbar from './components/Navbar';\nimport { BrowserRouter as Router, Switch, Route, Redirect, withRouter } from 'react-router-dom';\nimport Home from './pages/Home';\nimport History from './pages/History';\nimport Reports from './pages/Reports';\nimport Posts from './pages/Posts';\nimport GroupList from './pages/AdminPage';\nimport { AuthProvider, useAuth } from \"./helper/AuthContext\"\nimport PrivateRoute from \"./components/PrivateRoute\"\nimport Login from './pages/Login';\nimport { checkAutoLogin } from './AuthFunction';\n\nimport Main from './pages/Main';\nimport { connect, useDispatch } from 'react-redux';\nimport { FirebaseDatabaseProvider } from \"@react-firebase/database\";\nimport { useState, useEffect, Suspense} from 'react';\nimport './pages/Login.css';\nimport {useHistory} from \"react-router-dom\"\nimport { isAuthenticated } from './pages/AuthSelector';\n\n// function App() {\n//   let history = useHistory()\n\n//   const [authorized, setAuthorized] = useState(false);\n//   const [user, setUser] = useState({name:\"\", address:\"\"});\n//   const [error, setError] = useState(\"\");\n\n//   const Login = details =>{\n//     console.log(details);\n//     console.log((details.name == 'admin' ));\n//     if (details.name == 'admin'){\n//       setAuthorized(true);\n//       history.push(\"/dashboard\");\n//     }else{\n      \n//       setError(\"Details do not match!\");\n//       setAuthorized(false);\n      \n//     }\n//   }\n\n\n//   const Logout = () =>{\n//     userHasAuthenticated(false);\n//     history.push(\"/login\");\n//   }\n\n\n\n\nfunction App(props) {\n  // const dispatch = useDispatch();\n  // const { currentUser } = useAuth()\n  useEffect(() => {\n      console.log(props);\n      // checkAutoLogin(dispatch, props.history);\n  }, []);\n\n  \n\n  let routes = (\n      <Switch>\n          {/* <Route exact path=\"/\" component={() => <LoginForm  Login ={Login} error={error}/>} /> */}\n          <Route exact  path='/login' component={Login} />\n      </Switch>\n  );\n\n  // if (props.isAuthenticated) {\n  // if (currentUser){\n  //     routes = (\n  //         <Switch>\n  //             {/* <Route exact path=\"/dashboard\" component={() => <Dashboard  authorized={authorized}/>} /> */}\n  //             <Route path='/dashboard' component={Dashboard} />\n  //             {/* <Redirect to='/' /> */}\n  //         </Switch>\n  //     );\n  // }\n\n  return (\n      // <div>\n      //     {/* <Header /> */}\n      //     <div className='container px-3 mx-auto'>\n      //         <Suspense fallback={<div>Loading...</div>}>\n      //             {routes}\n      //         </Suspense>\n      //     </div>\n      // </div>\n\n          <Router>\n            {/* <Navbar /> */}\n            <AuthProvider>\n              <Switch>\n                <Route path='/login' exact component={Login} /> \n                <PrivateRoute exact path=\"/\" component={Main} />\n                {/*<Route path='/home' exact component={Home} />\n                <Route path='/posts' component={Posts} />\n                <Route path='/history' component={History} />\n                <Route path='/reports' component={Reports} />\n                <Route path='/admin' component={GroupList} />  */}\n                \n\n                {/* <Redirect to='/login' from='*' /> */}\n                {/* <Route path='/products' component={Products} /> */}\n              </Switch> \n            </AuthProvider>\n          </Router>\n  );\n}\n\n// const mapStateToProps = (state) => {\n//   return {\n//       isAuthenticated: isAuthenticated(state),\n//   };\n// };\n\n\n// function App(){\n//     return (\n        \n//         // <header className=\"App-header\">\n//         //       <button onClick={fetchGreeting}> Fetch Greeting </button> \n//         //       <button onClick={setGreeting}> Set Greeting </button>\n    \n//         //       <input \n//         //         onChange={e => setGreetingValue(e.target.value)} \n//         //         placeholder=\"Set greeting\"\n//         //         value={greeting}\n//         //       /> \n              \n//         //     </header> \n//          <Router>\n//             {/* <Navbar /> */}\n//               <Switch>\n//                 <Route path='/login' exact component={Login} /> \n//                 <Route path='/' component={Dashboard} />  \n//                 {/*<Route path='/home' exact component={Home} />\n//                 <Route path='/posts' component={Posts} />\n//                 <Route path='/history' component={History} />\n//                 <Route path='/reports' component={Reports} />\n//                 <Route path='/admin' component={GroupList} />  */}\n                \n\n//                 {/* <Redirect to='/login' from='*' /> */}\n//                 {/* <Route path='/products' component={Products} /> */}\n//               </Switch> \n//            </Router>\n\n//       );\n// }\n\n// export default Dashboard;\n\nexport default App"]},"metadata":{},"sourceType":"module"}