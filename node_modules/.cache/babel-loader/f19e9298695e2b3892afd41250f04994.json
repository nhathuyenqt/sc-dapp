{"ast":null,"code":"var _jsxFileName = \"/Users/kzjouf/Desktop/project/sc-dapp/src/pages/Home.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Typography, Button, AppBar, Spinner, Card, CircularProgress, Container, CardActions, Grid, CardContent, CardMedia, TextField } from '@material-ui/core';\nimport useStyles from './Styles.js';\nimport { useState } from 'react';\nimport { ethers } from 'ethers';\nimport { Dimmer, Loader, Image, Segment } from 'semantic-ui-react';\nimport XContract from './../artifacts/contracts/XContract.sol/XContract.json'; // const contractAddress = '0x3a709513c233b2EFeCF984847Daa676291f8Bc1E'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst contractAddress = '0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512';\n\nfunction Home() {\n  _s();\n\n  const classes = useStyles();\n  const [greeting, setGreetingValue] = useState('');\n  const [userAccount, setUserAccount] = useState('');\n  const [amount, setAmount] = useState(0);\n\n  async function updateStateEventListener(callback) {\n    await requestAccount();\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const signer = provider.getSigner();\n    const contract = new ethers.Contract(contractAddress, XContract.abi, signer);\n    const updateStateEvent = contract.UpdateState();\n    return updateStateEvent.watch(callback);\n  }\n\n  async function requestAccount() {\n    await window.ethereum.request({\n      method: 'eth_requestAccounts'\n    });\n  }\n\n  async function setGreeting() {\n    if (!greeting) return;\n\n    if (typeof window.ethereum !== 'undefined') {\n      await requestAccount();\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(contractAddress, XContract.abi, signer);\n      const transaction = await contract.setGreeting(greeting);\n      setGreetingValue('');\n      await transaction.wait();\n      fetchGreeting();\n    }\n  }\n\n  async function fetchGreeting() {\n    if (typeof window.ethereum !== 'undefined') {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const contract = new ethers.Contract(contractAddress, XContract.abi, provider);\n\n      try {\n        const data = await contract.greet();\n        setGreetingValue(data);\n        console.log('data: ', data);\n      } catch (err) {\n        console.log(\"Error: \", err);\n      }\n    }\n  }\n\n  async function getBalance() {\n    if (typeof window.ethereum !== 'undefined') {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const contract = new ethers.Contract(contractAddress, XContract.abi, provider);\n      const signer = provider.getSigner();\n      const [account] = await window.ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n      const acc = signer.getAddress();\n      const balance = await contract.balanceOf(account);\n      console.log('provider: ', provider);\n      console.log('signer: ', signer);\n      console.log('address: ', acc);\n      console.log('balance: ', balance.toString());\n    }\n  }\n\n  async function register() {\n    if (typeof window.ethereum !== 'undefined') {\n      await requestAccount();\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(contractAddress, XContract.abi, signer);\n      const transaction = await contract.register();\n      await transaction.wait(); // fetchBalance()\n    }\n  }\n\n  async function sendCoins() {\n    if (typeof window.ethereum !== 'undefined') {\n      await requestAccount();\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(contractAddress, XContract.abi, signer);\n      const transaction = await contract.transfer(userAccount, amount);\n      await transaction.wait();\n      var eventt = contract.UpdateState();\n      eventt.watch(function (error, result) {\n        if (!error) {// $(\"#loader\").hide();\n          // $(\"#instructor\").html(result.args.name + ' (' + result.args.age + ' years old)');\n        } else {\n          // $(\"#loader\").hide();\n          console.log(error);\n        }\n      }); // fetchBalance()\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      children: \" Nhat Huyen's Internship \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"sm\",\n      className: classes.cardGrid,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 4,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: classes.card,\n            maxWidth: \"md\",\n            children: [/*#__PURE__*/_jsxDEV(CardContent, {\n              className: classes.cardContent,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                gutterBottom: true,\n                variant: \"h5\",\n                children: \" Say Greet \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(CircularProgress, {\n                size: 18,\n                loading: false\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                textAlign: \"left\",\n                children: [\" \", greeting]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                onChange: e => setGreetingValue(e.target.value),\n                placeholder: \"Set greeting\",\n                value: greeting,\n                variant: \"outlined\",\n                fullWidth: true,\n                color: \"secondary\",\n                className: classes.field\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                size: \"small\",\n                color: \"primary\",\n                onClick: register,\n                children: \"Register\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                size: \"small\",\n                color: \"primary\",\n                onClick: setGreeting,\n                children: \"Set\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                size: \"small\",\n                color: \"primary\",\n                onClick: getBalance,\n                children: \"Update\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: classes.card,\n            maxWidth: \"md\",\n            children: [/*#__PURE__*/_jsxDEV(CardContent, {\n              className: classes.cardContent,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                gutterBottom: true,\n                variant: \"h5\",\n                children: \" Balance \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                onChange: e => setUserAccount(e.target.value),\n                placeholder: \"Account ID\",\n                variant: \"outlined\",\n                fullWidth: true,\n                color: \"secondary\",\n                className: classes.field\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                onChange: e => setAmount(e.target.value),\n                placeholder: \"Amount\",\n                variant: \"outlined\",\n                fullWidth: true,\n                color: \"secondary\",\n                className: classes.field\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                size: \"small\",\n                color: \"primary\",\n                onClick: getBalance,\n                children: \" Get Balance \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                size: \"small\",\n                color: \"primary\",\n                onClick: sendCoins,\n                children: \"Send\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Home, \"6kjeJFLQnYmnqmziB1zV/6j6r38=\", false, function () {\n  return [useStyles];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/kzjouf/Desktop/project/sc-dapp/src/pages/Home.js"],"names":["React","Typography","Button","AppBar","Spinner","Card","CircularProgress","Container","CardActions","Grid","CardContent","CardMedia","TextField","useStyles","useState","ethers","Dimmer","Loader","Image","Segment","XContract","contractAddress","Home","classes","greeting","setGreetingValue","userAccount","setUserAccount","amount","setAmount","updateStateEventListener","callback","requestAccount","provider","providers","Web3Provider","window","ethereum","signer","getSigner","contract","Contract","abi","updateStateEvent","UpdateState","watch","request","method","setGreeting","transaction","wait","fetchGreeting","data","greet","console","log","err","getBalance","account","acc","getAddress","balance","balanceOf","toString","register","sendCoins","transfer","eventt","error","result","cardGrid","card","cardContent","e","target","value","field"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport {Typography, Button, AppBar, Spinner, Card,  CircularProgress, Container, CardActions, Grid, CardContent, CardMedia, TextField} from '@material-ui/core'\nimport  useStyles  from './Styles.js';\nimport {useState} from 'react'\nimport {ethers} from 'ethers'\nimport { Dimmer, Loader, Image, Segment, } from 'semantic-ui-react'\n\nimport XContract from './../artifacts/contracts/XContract.sol/XContract.json'\n\n\n// const contractAddress = '0x3a709513c233b2EFeCF984847Daa676291f8Bc1E'\nconst contractAddress = '0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512'\n\nfunction Home() {\n  const classes = useStyles()\n\n  const [greeting, setGreetingValue] = useState('')\n  const [userAccount, setUserAccount] = useState('')\n  const [amount, setAmount] = useState(0)  \n\n  async function updateStateEventListener(callback) {\n    await requestAccount()\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const signer = provider.getSigner();\n    const contract = new ethers.Contract(contractAddress, XContract.abi, signer)\n    const updateStateEvent = contract.UpdateState()\n    return updateStateEvent.watch(callback)\n  }\n\n  async function requestAccount(){\n    await window.ethereum.request({method : 'eth_requestAccounts'})\n    \n  }\n\n  async function setGreeting(){\n    if (!greeting) return\n    if (typeof window.ethereum !== 'undefined'){\n      await requestAccount()\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(contractAddress, XContract.abi, signer)\n      const transaction = await contract.setGreeting(greeting)\n      setGreetingValue('')\n      await transaction.wait()\n      fetchGreeting()\n    }\n  }\n  async function fetchGreeting(){\n    if (typeof window.ethereum !== 'undefined'){\n      const provider = new ethers.providers.Web3Provider(window.ethereum)\n      const contract = new ethers.Contract(contractAddress, XContract.abi, provider)\n      try{\n        const data = await contract.greet()\n        setGreetingValue(data)\n        console.log('data: ', data)\n      } catch(err){\n        console.log(\"Error: \", err)\n      }\n    }\n  }\n\n  async function getBalance(){\n    if (typeof window.ethereum !== 'undefined'){\n      const provider = new ethers.providers.Web3Provider(window.ethereum)\n      const contract = new ethers.Contract(contractAddress, XContract.abi, provider)\n      const signer =  provider.getSigner()\n      const [account] = await window.ethereum.request({method: 'eth_requestAccounts'})\n      const acc = signer.getAddress()\n      const balance = await contract.balanceOf(account)\n      console.log('provider: ', provider)\n      console.log('signer: ', signer)\n      console.log('address: ', acc)\n      console.log('balance: ', balance.toString())\n    \n    }\n  }\n\n  async function register(){\n    if (typeof window.ethereum !== 'undefined'){\n      await requestAccount()\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(contractAddress, XContract.abi, signer)\n      const transaction = await contract.register()\n      await transaction.wait()\n      // fetchBalance()\n    }\n  }\n\n  async function sendCoins(){\n    if (typeof window.ethereum !== 'undefined'){\n      await requestAccount()\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(contractAddress, XContract.abi, signer)\n      const transaction = await contract.transfer(userAccount, amount)\n      await transaction.wait()\n\n      var eventt = contract.UpdateState();\n      eventt.watch(function(error, result){\n        if (!error)\n            {\n                // $(\"#loader\").hide();\n                // $(\"#instructor\").html(result.args.name + ' (' + result.args.age + ' years old)');\n            } else {\n                // $(\"#loader\").hide();\n                console.log(error);\n            }\n    });\n      // fetchBalance()\n    }\n  }\n\n  return (\n    <div className='home'>\n      <h1>Home</h1>\n      <Typography variant = \"h4\"> Nhat Huyen's Internship </Typography>\n      <Container maxWidth = \"sm\" className = {classes.cardGrid}> \n        <Grid container spacing ={4}>\n          <Grid item> \n            <Card className ={classes.card} maxWidth = \"md\">\n              {/* <CardMedia \n                className ={classes.cardMedia}\n                  image =\"https://source.unsplash.com/random\"\n                  title=\"Image title\" /> */}\n\n              <CardContent className = {classes.cardContent}>\n                <Typography gutterBottom variant = \"h5\"> Say Greet </Typography>\n       \n                {/* <Dimmer active inverted>\n                  <Loader>Loading</Loader>\n                </Dimmer> */}\n                <CircularProgress  size={18} loading = {false}/>\n              \n            \n                {/* <Typography textAlign='left'> {balance} wei</Typography> */}\n                <Typography textAlign='left'> {greeting}</Typography>\n                {/* <input \n                  onChange={e => setGreetingValue(e.target.value)} \n                  placeholder=\"Set greeting\"\n                  value = {greeting}\n                /> */}\n                <TextField\n                  onChange={e => setGreetingValue(e.target.value)} \n                  placeholder=\"Set greeting\"\n                  value = {greeting}\n                  variant='outlined'\n                  fullWidth\n                  color =\"secondary\"\n                  className={classes.field}\n                />\n              </CardContent>\n              <CardActions>\n                <Button size =\"small\" color=\"primary\" onClick={register} >Register</Button>\n                <Button size =\"small\" color=\"primary\" onClick={setGreeting} >Set</Button>\n                <Button size =\"small\" color=\"primary\" onClick={getBalance} >Update</Button>\n                \n              </CardActions>\n            </Card>\n          </Grid>\n          <Grid item>\n              <Card className ={classes.card} maxWidth = \"md\">\n            {/* <CardMedia \n              className ={classes.cardMedia}\n                image =\"https://source.unsplash.com/random\"\n                title=\"Image title\" /> */}\n\n            <CardContent className = {classes.cardContent}>\n              <Typography gutterBottom variant = \"h5\"> Balance </Typography>\n              <TextField onChange={e => setUserAccount(e.target.value)} placeholder=\"Account ID\" \n                    variant='outlined'\n                    fullWidth\n                    color =\"secondary\"\n                    className={classes.field}/>\n              <TextField onChange={e => setAmount(e.target.value)} placeholder=\"Amount\" variant='outlined'\n                  fullWidth\n                  color =\"secondary\"\n                  className={classes.field}\n                /> \n            </CardContent>\n            <CardActions>\n              <Button size =\"small\" color=\"primary\" onClick={getBalance} > Get Balance </Button>\n              <Button size =\"small\" color=\"primary\" onClick={sendCoins} >Send</Button>\n    \n              \n            </CardActions>\n          </Card>\n          </Grid>\n        </Grid>\n      </Container>\n      \n    </div>\n  );\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}