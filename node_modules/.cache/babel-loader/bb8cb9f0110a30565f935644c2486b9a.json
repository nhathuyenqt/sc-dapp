{"ast":null,"code":"var _jsxFileName = \"/Users/kzjouf/Desktop/project/scdapp/src/pages/Posts.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { bindActionCreators } from 'redux';\nimport AddPost from '../components/AddPost';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport { Typography, Button, TextField } from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport { DataGrid } from '@material-ui/data-grid';\nimport XContract from './../artifacts/contracts/XContract.sol/XContract.json';\nimport text from './../contract_address.json';\nimport { ethers } from 'ethers';\nimport { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport SendIcon from '@material-ui/icons/Send';\nimport Avatar from '@material-ui/core/Avatar'; // import EditPost from '../../pages2/EditPost/EditPost';\n\nimport PropTypes from 'prop-types'; // import SinglePost from '../../pages2/SinglePost/SinglePost';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst contractAddress = text['contract_address'];\n\nfunction Posts() {\n  _s();\n\n  const [postList, setPostList] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [selectedValue, setSelectedValue] = useState();\n  const [content, setContent] = useState();\n  const classes = useStyles();\n  const columns = [{\n    field: 'id',\n    headerName: 'ID',\n    width: 68,\n    headerClassName: 'super-app-theme--header'\n  }, {\n    field: 'title',\n    headerName: 'Title',\n    width: 200,\n    headerClassName: 'super-app-theme--header'\n  }, {\n    field: 'description',\n    headerName: 'Description',\n    width: 450,\n    headerClassName: 'super-app-theme--header'\n  }, // {\n  //     field: 'id',\n  //     headerName: 'id',\n  //     type: 'number',\n  //     width: 50,\n  //     editable: true,\n  //   }\n  {\n    field: 'action',\n    headerName: 'Action',\n    headerClassName: 'super-app-theme--header',\n    width: 150,\n    renderCell: params => /*#__PURE__*/_jsxDEV(\"strong\", {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"small\",\n        onClick: handleClickOpen(),\n        children: \"Offer a price\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }, this),\n    disableClickEventBubbling: true\n  }];\n  setTimeout(() => {\n    listenEvents();\n  }, 30000);\n\n  const handleClickOpen = () => {\n    console.log();\n    setOpen(true);\n  };\n\n  const handleClose = value => {\n    setOpen(false);\n    setSelectedValue(value);\n  };\n\n  async function loadTasks() {\n    const response = await fetch(\"/loadTasks\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    let result;\n    let newPosts = [];\n    await response.json().then(message => {\n      result = message[\"data\"];\n      console.log(result);\n      result.map(task => {\n        newPosts.push({\n          id: task[0],\n          description: task[1]\n        });\n      });\n      setPostList(newPosts);\n    });\n    return result; // setLoading(false)\n    // const provider = new ethers.providers.Web3Provider(window.ethereum)\n    // const contract = new ethers.Contract(contractAddress, XContract.abi, provider)\n    // const signer =  provider.getSigner()\n    // const [account] = await window.ethereum.request({method: 'eth_requestAccounts'})\n    // const acc = signer.getAddress()\n    // const b = await contract.ElBalanceOf(y)\n    // console.log('address: ', acc)\n    // console.log('balance: ', b.toString())\n    // setBalance(b.toString())\n    // setLoading(false)\n  }\n\n  async function listenEvents() {\n    if (typeof window.ethereum !== 'undefined') {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const contract = new ethers.Contract(contractAddress, XContract.abi, provider);\n      contract.on(\"aNewPrice\", msg => {\n        console.log(\"event \", msg);\n      });\n    }\n  }\n\n  useEffect(() => {\n    const tasks = loadTasks();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: 400,\n      marginLeft: 100,\n      marginRight: '100px',\n      alignSelf: 'flex-start'\n    },\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(DataGrid, {\n      rows: postList,\n      columns: columns,\n      pageSize: 4 //   checkboxSelection\n      ,\n      disableSelectionOnClick: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(SimpleDialog, {\n      selectedValue: selectedValue,\n      open: open,\n      onClose: handleClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      size: \"small\",\n      color: \"primary\",\n      onClick: loadTasks,\n      children: \" Load Tasks \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Posts, \"1JG5VWiNwq+aerMslX0IYqJJDNM=\", false, function () {\n  return [useStyles];\n});\n\n_c = Posts;\nconst useStyles = makeStyles({\n  root: {\n    '& .super-app-theme--header': {\n      backgroundColor: 'rgba(255, 7, 0, 0.55)'\n    }\n  }\n});\nexport default Posts;\n\nfunction SimpleDialog(props) {\n  _s2();\n\n  const classes = useStyles();\n  const [price, setPrice] = useState();\n  const {\n    onClose,\n    selectedValue,\n    content,\n    open\n  } = props;\n\n  const handleClose = () => {\n    onClose(selectedValue);\n  };\n\n  const handleListItemClick = value => {\n    onClose(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    onClose: handleClose,\n    \"aria-labelledby\": \"simple-dialog-title\",\n    open: open,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      id: \"simple-dialog-title\",\n      children: \"Offer a price\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      children: \" \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      onChange: e => setPrice(e.target.value),\n      placeholder: \"Price\",\n      variant: \"outlined\",\n      color: \"secondary\",\n      className: classes.field,\n      defaultValue: price\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      color: \"secondary\",\n      \"aria-label\": \"upload picture\",\n      component: \"span\",\n      children: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(SimpleDialog, \"63+cyhoRrqjd+yhpfe6cvkbpaFM=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = SimpleDialog;\nSimpleDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  content: PropTypes.string.isRequired,\n  selectedValue: PropTypes.string.isRequired\n};\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Posts\");\n$RefreshReg$(_c2, \"SimpleDialog\");","map":{"version":3,"sources":["/Users/kzjouf/Desktop/project/scdapp/src/pages/Posts.js"],"names":["bindActionCreators","AddPost","DialogTitle","Dialog","Typography","Button","TextField","IconButton","DataGrid","XContract","text","ethers","useState","useEffect","makeStyles","SendIcon","Avatar","PropTypes","contractAddress","Posts","postList","setPostList","open","setOpen","selectedValue","setSelectedValue","content","setContent","classes","useStyles","columns","field","headerName","width","headerClassName","renderCell","params","handleClickOpen","disableClickEventBubbling","setTimeout","listenEvents","console","log","handleClose","value","loadTasks","response","fetch","method","headers","result","newPosts","json","then","message","map","task","push","id","description","window","ethereum","provider","providers","Web3Provider","contract","Contract","abi","on","msg","tasks","height","marginLeft","marginRight","alignSelf","root","backgroundColor","SimpleDialog","props","price","setPrice","onClose","handleListItemClick","e","target","propTypes","func","isRequired","bool","string"],"mappings":"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","sourcesContent":["import { bindActionCreators } from 'redux';\nimport AddPost from '../components/AddPost';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport {Typography, Button, TextField} from '@material-ui/core'\nimport IconButton from '@material-ui/core/IconButton';\nimport { DataGrid } from '@material-ui/data-grid';\nimport XContract from './../artifacts/contracts/XContract.sol/XContract.json'\nimport text  from './../contract_address.json';\nimport {ethers} from 'ethers'\nimport {useState, useEffect} from 'react'\nimport { makeStyles } from '@material-ui/styles';\nimport SendIcon from '@material-ui/icons/Send';\nimport Avatar from '@material-ui/core/Avatar';\n// import EditPost from '../../pages2/EditPost/EditPost';\nimport PropTypes from 'prop-types';\n// import SinglePost from '../../pages2/SinglePost/SinglePost';\nconst contractAddress = text['contract_address']\n\nfunction Posts () {\n    const [postList, setPostList] = useState([])\n    \n    const [open, setOpen] = useState(false);\n    const [selectedValue, setSelectedValue] = useState();\n    const [content, setContent] = useState();\n    const classes = useStyles();\n    const columns = [\n      { field: 'id', headerName: 'ID', width: 68, headerClassName: 'super-app-theme--header' },\n      {\n        field: 'title',\n        headerName: 'Title',\n        width: 200,\n        headerClassName: 'super-app-theme--header'\n      },\n      {\n        field: 'description',\n        headerName: 'Description',\n        width: 450,\n        headerClassName: 'super-app-theme--header'\n      },\n      // {\n      //     field: 'id',\n      //     headerName: 'id',\n      //     type: 'number',\n      //     width: 50,\n      //     editable: true,\n      //   }\n      {\n        field: 'action',\n        headerName: 'Action', headerClassName: 'super-app-theme--header',\n        width: 150,\n        renderCell: (params) => (\n          <strong>\n\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              size=\"small\"\n              onClick={handleClickOpen()}\n            >\n              Offer a price\n            </Button>\n          </strong>\n        ),\n        disableClickEventBubbling: true,\n      }\n    ];\n      setTimeout(()=>{\n        listenEvents()\n      }, 30000);\n    \n      const handleClickOpen = () => {\n        console.log()\n        setOpen(true);\n      };\n    \n      const handleClose = (value) => {\n        setOpen(false);\n        setSelectedValue(value);\n      };\n\n    async function loadTasks(){\n      const response = await fetch(\"/loadTasks\", {\n        method: \"GET\",\n        headers: { \"Content-Type\": \"application/json\" }\n      })\n      let result\n      let newPosts = []\n      await response.json().then((message) => {\n        result = message[\"data\"]\n        console.log(result)\n        result.map((task) => {\n          newPosts.push({id : task[0],\n            description : task[1]\n          })\n        })\n        setPostList(newPosts)\n      });\n      \n      return result\n      \n      // setLoading(false)\n    // const provider = new ethers.providers.Web3Provider(window.ethereum)\n    // const contract = new ethers.Contract(contractAddress, XContract.abi, provider)\n    // const signer =  provider.getSigner()\n    // const [account] = await window.ethereum.request({method: 'eth_requestAccounts'})\n    // const acc = signer.getAddress()\n    // const b = await contract.ElBalanceOf(y)\n    // console.log('address: ', acc)\n    // console.log('balance: ', b.toString())\n    // setBalance(b.toString())\n    // setLoading(false)\n    }\n\n\n    async function listenEvents(){\n\n      if (typeof window.ethereum !== 'undefined'){\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const contract = new ethers.Contract(contractAddress, XContract.abi, provider);\n        contract.on(\"aNewPrice\", (msg) => {\n          console.log(\"event \", msg);\n        })\n      }\n    }\n\n    useEffect(() => {\n      const tasks = loadTasks()\n      \n      }, [])\n\n      \n        \n    \n    return (\n        <div style={{ height: 400,  marginLeft: 100, marginRight: '100px', alignSelf: 'flex-start'}} className={classes.root}>\n        <DataGrid\n          rows={postList}\n          columns={columns}\n          pageSize={4}\n        //   checkboxSelection\n          disableSelectionOnClick\n        />\n        <SimpleDialog selectedValue={selectedValue} open={open} onClose={handleClose} />\n        <Button size =\"small\" color=\"primary\" onClick={loadTasks} > Load Tasks </Button>\n      </div>\n  \n    );\n    \n}\n\nconst useStyles = makeStyles({\n  root: {\n    '& .super-app-theme--header': {\n      backgroundColor: 'rgba(255, 7, 0, 0.55)',\n    },\n  },\n});\nexport default (Posts);\n\nfunction SimpleDialog(props) {\n  const classes = useStyles();\n  const [price, setPrice] = useState()\n  const { onClose, selectedValue, content, open} = props;\n\n  const handleClose = () => {\n    onClose(selectedValue);\n  };\n\n  const handleListItemClick = (value) => {\n    onClose(value);\n  };\n\n  return (\n    <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\n      <DialogTitle id=\"simple-dialog-title\">Offer a price</DialogTitle>\n        <Typography> </Typography>\n         <TextField onChange={e => setPrice(e.target.value)} placeholder=\"Price\" variant='outlined'\n                  color =\"secondary\"\n                  className={classes.field}\n                  defaultValue = {price}\n                />\n \n        <IconButton color=\"secondary\" aria-label=\"upload picture\" component=\"span\">\n              <SendIcon />\n        </IconButton>\n\n    </Dialog>\n  );\n}\n\nSimpleDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  content: PropTypes.string.isRequired,\n  selectedValue: PropTypes.string.isRequired,\n};"]},"metadata":{},"sourceType":"module"}