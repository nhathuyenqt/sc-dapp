[{"/Users/kzjouf/Desktop/project/scdapp/src/index.js":"1","/Users/kzjouf/Desktop/project/scdapp/src/App.js":"2","/Users/kzjouf/Desktop/project/scdapp/src/reportWebVitals.js":"3","/Users/kzjouf/Desktop/project/scdapp/src/store/store.js":"4","/Users/kzjouf/Desktop/project/scdapp/src/pages/Header.js":"5","/Users/kzjouf/Desktop/project/scdapp/src/pages/Login.js":"6","/Users/kzjouf/Desktop/project/scdapp/src/pages/Main.js":"7","/Users/kzjouf/Desktop/project/scdapp/src/helper/AuthContext.js":"8","/Users/kzjouf/Desktop/project/scdapp/src/components/PrivateRoute.js":"9","/Users/kzjouf/Desktop/project/scdapp/src/components/Navbar.js":"10","/Users/kzjouf/Desktop/project/scdapp/src/pages/components/QRscanner.js":"11","/Users/kzjouf/Desktop/project/scdapp/src/store/reducers/AuthReducer.js":"12","/Users/kzjouf/Desktop/project/scdapp/src/store/reducers/PostsReducer.js":"13","/Users/kzjouf/Desktop/project/scdapp/src/pages/components/DealTransfer.js":"14","/Users/kzjouf/Desktop/project/scdapp/src/pages/Home.js":"15","/Users/kzjouf/Desktop/project/scdapp/src/pages/Posts.js":"16","/Users/kzjouf/Desktop/project/scdapp/src/pages/Reports.js":"17","/Users/kzjouf/Desktop/project/scdapp/src/pages/Messages.js":"18","/Users/kzjouf/Desktop/project/scdapp/src/pages/History.js":"19","/Users/kzjouf/Desktop/project/scdapp/src/helper/Firebase.js":"20","/Users/kzjouf/Desktop/project/scdapp/src/components/SidebarData.js":"21","/Users/kzjouf/Desktop/project/scdapp/src/store/actions/AuthActions.js":"22","/Users/kzjouf/Desktop/project/scdapp/src/store/actions/PostTypes.js":"23","/Users/kzjouf/Desktop/project/scdapp/src/pages/Styles.js":"24","/Users/kzjouf/Desktop/project/scdapp/src/components/AddPost.js":"25","/Users/kzjouf/Desktop/project/scdapp/src/pages/components/Deal.js":"26","/Users/kzjouf/Desktop/project/scdapp/src/pages/components/NewPost.js":"27","/Users/kzjouf/Desktop/project/scdapp/src/pages/components/DealViewQR.js":"28","/Users/kzjouf/Desktop/project/scdapp/src/services/AuthService.js":"29"},{"size":722,"mtime":1628014916000,"results":"30","hashOfConfig":"31"},{"size":1131,"mtime":1629211834799,"results":"32","hashOfConfig":"31"},{"size":362,"mtime":1628014916000,"results":"33","hashOfConfig":"31"},{"size":1055,"mtime":1628014917000,"results":"34","hashOfConfig":"31"},{"size":1885,"mtime":1628014917000,"results":"35","hashOfConfig":"31"},{"size":3359,"mtime":1629830021331,"results":"36","hashOfConfig":"31"},{"size":1030,"mtime":1629206269141,"results":"37","hashOfConfig":"31"},{"size":3601,"mtime":1629829367078,"results":"38","hashOfConfig":"31"},{"size":413,"mtime":1628614537169,"results":"39","hashOfConfig":"31"},{"size":2628,"mtime":1629829948125,"results":"40","hashOfConfig":"31"},{"size":4677,"mtime":1630162120334,"results":"41","hashOfConfig":"31"},{"size":1793,"mtime":1628014918000,"results":"42","hashOfConfig":"31"},{"size":1666,"mtime":1628014918000,"results":"43","hashOfConfig":"31"},{"size":5380,"mtime":1630175118119,"results":"44","hashOfConfig":"31"},{"size":14092,"mtime":1629842755650,"results":"45","hashOfConfig":"31"},{"size":13215,"mtime":1630174410758,"results":"46","hashOfConfig":"31"},{"size":995,"mtime":1628014917000,"results":"47","hashOfConfig":"31"},{"size":6208,"mtime":1629884973738,"results":"48","hashOfConfig":"31"},{"size":176,"mtime":1628014917000,"results":"49","hashOfConfig":"31"},{"size":563,"mtime":1628014917000,"results":"50","hashOfConfig":"31"},{"size":849,"mtime":1629209083511,"results":"51","hashOfConfig":"31"},{"size":2744,"mtime":1628014918000,"results":"52","hashOfConfig":"31"},{"size":503,"mtime":1628014918000,"results":"53","hashOfConfig":"31"},{"size":1412,"mtime":1628614537185,"results":"54","hashOfConfig":"31"},{"size":2182,"mtime":1628014917000,"results":"55","hashOfConfig":"31"},{"size":4231,"mtime":1629383677928,"results":"56","hashOfConfig":"31"},{"size":3931,"mtime":1629277258100,"results":"57","hashOfConfig":"31"},{"size":1435,"mtime":1630163333112,"results":"58","hashOfConfig":"31"},{"size":2173,"mtime":1628014917000,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"suua8u",{"filePath":"63","messages":"64","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"62"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"62"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"62"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"62"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"62"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"62"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"62"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"62"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"62"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"62"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"62"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"62"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"62"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"62"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"62"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"/Users/kzjouf/Desktop/project/scdapp/src/index.js",[],["135","136"],"/Users/kzjouf/Desktop/project/scdapp/src/App.js",["137","138","139","140","141","142","143"],"// import logo from './logo.svg';\nimport './App.css';\nimport Header from './pages/Header';\nimport Navbar from './components/Navbar';\nimport { BrowserRouter as Router, Switch, Route, Redirect, withRouter } from 'react-router-dom';\nimport { AuthProvider, useAuth } from \"./helper/AuthContext\"\nimport PrivateRoute from \"./components/PrivateRoute\"\nimport Login from './pages/Login';\nimport Main from './pages/Main';\nimport { useState, useEffect, Suspense} from 'react';\nimport QRscan from './pages/components/QRscanner'\nimport './pages/Login.css';\n\n\nfunction App(props) {\n  // const dispatch = useDispatch();\n  // const { currentUser } = useAuth()\n  useEffect(() => {\n\n      // checkAutoLogin(dispatch, props.history);\n  }, []);\n\n\n  return (\n          <Router>\n            <AuthProvider>\n              <Switch>\n                <Route path='/login' exact component={Login} /> \n                <PrivateRoute exact path=\"/\" component={Main} />\n                <Route path=\"/qr_scanner\">\n                  <QRscan/>\n                </Route>\n              </Switch> \n            </AuthProvider>\n          </Router>\n  );\n}\nexport default App","/Users/kzjouf/Desktop/project/scdapp/src/reportWebVitals.js",[],"/Users/kzjouf/Desktop/project/scdapp/src/store/store.js",["144"],"import {\n    applyMiddleware,\n    combineReducers,\n    compose,\n    createStore,\n} from 'redux';\nimport PostsReducer from './reducers/PostsReducer';\nimport thunk from 'redux-thunk';\nimport { AuthReducer } from './reducers/AuthReducer';\n\nconst loggerMiddleware = (store) => (next) => (action) => {\n    console.log('dispatching action', action);\n    console.log('before dispatching state', store.getState());\n    let result = next(action);\n    setTimeout(() => {\n        console.log('dispatch time out');\n    }, 5000);\n    console.log('next state', store.getState());\n    return result;\n};\n\n// const fetchDataMiddleware = (store) => (next) => (action) => {\n//     if (action.type === GET_POSTS) {\n//         //ajax call\n//     }\n\n//     return next(action);\n// };\n\nconst middleware = applyMiddleware(thunk);\n\nconst composeEnhancers =\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst reducers = combineReducers({\n    posts: PostsReducer,\n    auth: AuthReducer,\n});\n\nexport const store = createStore(reducers, composeEnhancers(middleware));\n","/Users/kzjouf/Desktop/project/scdapp/src/pages/Header.js",[],"/Users/kzjouf/Desktop/project/scdapp/src/pages/Login.js",["145","146","147","148","149","150"],"import React from 'react';\nimport logo from './logo.svg';\n// import {ReactComponet as Logo} \nimport { connect, useDispatch } from 'react-redux';\nimport Avatar from '@material-ui/core/Avatar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport PersonPinCircleRoundedIcon from '@material-ui/icons/PersonPinCircleRounded';\nimport { useAuth } from \"../helper/AuthContext\"\nimport { useState } from 'react';\nimport {useHistory} from 'react-router-dom';\nimport {Typography, Button} from '@material-ui/core'\nimport './Login.css';\n\nfunction Login(props) {\n    \n    const emails = [\"alex@rinkeby.com\", \"local3@test.com\", \"test2@gmail.com\", \"local1@gmail.com\", \"local2@test.com\", \"rinkeby1@test.com\"]\n    const [errorsObj, setErrorObj]= useState('');\n    const [errors, setErrors] = useState(errorsObj);\n    const [infoUser, setInfoUser] = useState({email:\"\", password:\"\"})\n    const dispatch = useDispatch();\n    \n    const {login, loading} = useAuth()\n    let history = useHistory()\n\n    async function handleLogin() {\n        if (infoUser.email === '') {\n            setErrorObj('Email is Required');\n        }else{\n            if (infoUser.password === '') {\n                setErrorObj('Password is Required');\n            }else{\n                try {\n                    await login(infoUser.email, infoUser.password)\n                    if (loading === false)\n                        history.push(\"/\")\n                } catch {\n                    setErrorObj(\"Failed to log out\");\n                }\n            }\n\n        }\n    }\n\n    async function handleListItemClick(value){\n        \n        setInfoUser({email: value, password:\"123456\"});\n        // console.log(\"1  \", infoUser, value);\n        // handleLogin();\n      };\n    \n    \n\n    return(\n        <div>   \n        <form >\n            <div className =\"form-inner\">\n                <h2> Login</h2>\n                {(errors === false) ? (<div className=\"error\">{errorsObj}</div>):\"\"}           \n                    <div className=\"form-group\">\n                        <label htmlFor=\"name\">Email:</label>\n                        <input type=\"text\" name=\"email\" id=\"email\" onChange={e => setInfoUser({...infoUser, email:e.target.value})} value = {infoUser.email}></input>\n\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"name\">Password:</label>\n                        <input type=\"password\" name=\"password\" id=\"password\" onChange={e => setInfoUser({...infoUser, password:e.target.value})} value = {infoUser.password}></input>\n                    </div>\n                    \n                    <Button variant=\"outlined\" size =\"small\" color=\"primary\" onClick={handleLogin} >LOGIN</Button>\n            </div>\n        </form>\n        <div>\n            {emails.map((ev) => (\n          <ListItem button onClick={() => handleListItemClick(ev)} key={ev}>\n            <ListItemAvatar>\n              <Avatar >\n                <PersonPinCircleRoundedIcon color=\"secondary\" />\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText primary={ev} />\n          </ListItem>\n        ))}\n        </div>\n        </div>\n\n    )\n    \n}\n\n\nexport default Login;\n","/Users/kzjouf/Desktop/project/scdapp/src/pages/Main.js",["151"],"import React from 'react';\nimport Navbar from '../components/Navbar';\nimport PrivateRoute from '../components/PrivateRoute';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport Home from './Home';\nimport Posts from './Posts';\nimport Messages from './Messages';\nimport History from './History';\nimport Reports from './Reports';\n\n\n\nfunction Main(){\n    // if ( !authorized){\n    //     return <Redirect to=\"/login\"/>;\n    // }\n    return (\n         <Router>\n            <Navbar />\n              <Switch>\n                <PrivateRoute path='/' exact component={Home} />\n                <PrivateRoute path='/posts' exact component={Posts} />\n                <PrivateRoute path='/messages' exact component={Messages} />\n                <Route path='/history' component={History} />\n                <Route path='/reports' component={Reports} />\n                {/* <Route path='/products' component={Products} /> */}\n              </Switch> \n           </Router>\n\n      );\n}\n\nexport default Main;","/Users/kzjouf/Desktop/project/scdapp/src/helper/AuthContext.js",["152","153","154","155","156","157"],"import React, { useContext, useState, useEffect } from \"react\"\nimport { auth, db } from \"./Firebase\"\nimport accounts from './accounts.json'\nimport xtype from 'xtypejs'\n\nconst AuthContext = React.createContext()\n\nexport function useAuth() {\n  return useContext(AuthContext)\n}\n\nexport function AuthProvider({ children }) {\n  const [currentUser, setCurrentUser] = useState()\n  const [currentBCAccount, setCurrentBCAccount] = useState({address:'', privateKey:''})\n  const [loading, setLoading] = useState(true)\n  const [currentPass, setCurrentPass] = useState('')\n  const [keypair, setKeypair] = useState({x:'', y:''})\n  const [uid, setUid] = useState('')\n  const [balance, setBalance] = useState({CL:'', CR:'', b:''})\n\n//   function signup(email, password) {\n//     return auth.createUserWithEmailAndPassword(email, password)\n//   }\n\n  function login(email, password) {\n    setLoading(true);\n    setCurrentPass(password)\n    auth.signInWithEmailAndPassword(email, password)\n\n  }\n\n  function logout() {\n    return auth.signOut()\n  }\n\n  async function getKey(uid, address){\n    const response = await fetch(\"/fetchKey\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        'uid' : uid,\n        'address' :address\n      }),\n    })\n\n    let result\n    await response.json().then((message) => {\n      result = message[\"data\"];\n      // const y_value = result.y;\n      // const x_value = result.x;\n      setKeypair(result);\n      setBalance(message['balance'])\n      // setSignKey(message['privateKey']);\n      setCurrentBCAccount({address: address, privateKey:message['privateKey']});\n    });\n  }\n\n  function writeUserData(userId, name, email, imageUrl) {\n    db.ref('users/' + userId).set({\n      username: name,\n      email: email,\n      profile_picture : imageUrl\n    });\n  }\n\n//   function resetPassword(email) {\n//     return auth.sendPasswordResetEmail(email)\n//   }\n\n//   function updateEmail(email) {\n//     return currentUser.updateEmail(email)\n//   }\n\n//   function updatePassword(password) {\n//     return currentUser.updatePassword(password)\n//   }\n\n\n  useEffect(() => {\n    \n    const unsubscribe = auth.onAuthStateChanged(user => {\n      setLoading(true);\n      setCurrentUser(user)\n      if (user){\n        const docRef = db.collection(\"users\").doc(user.uid);\n        docRef.get().then((doc) => {\n        if (doc.exists) {\n            const addr = doc.data().address;\n            setCurrentBCAccount({...currentBCAccount, address:addr});\n            // setSignKey()\n            getKey(user.uid, addr);\n        }else {\n            // doc.data() will be undefined in this case\n            console.log(\"No such document!\");\n            setCurrentBCAccount({address:'', privateKey:''})\n            setKeypair({x:'', y:''})\n            setCurrentPass('')\n            setBalance({CL:'', CR:'', b:''})\n            //getPubkey\n\n          }\n          }).catch((error) => {\n            console.log(\"Error getting document:\", error);\n            \n            });\n      }else{\n        setCurrentBCAccount({address:'', privateKey:''})\n        setKeypair({x:'', y:''})\n        setBalance({CL:'', CR:'', b:''})\n      }\n      setLoading(false)\n    })\n      \n      return unsubscribe\n    }, [])\n\n  const value = {\n    currentUser,\n    currentBCAccount,\n    currentPass,\n    keypair,\n    login,\n    loading,\n    balance,\n    // signup,\n    setBalance,\n\n    logout,\n    // resetPassword,\n    // updateEmail,\n    // updatePassword\n  }\n\n  return (\n    <AuthContext.Provider value={value}>\n      {!loading && children}\n    </AuthContext.Provider>\n  )\n}\n","/Users/kzjouf/Desktop/project/scdapp/src/components/PrivateRoute.js",[],"/Users/kzjouf/Desktop/project/scdapp/src/components/Navbar.js",["158","159"],"import React, { useState } from 'react';\nimport * as FaIcons from 'react-icons/fa';\nimport * as AiIcons from 'react-icons/ai';\nimport { Link } from 'react-router-dom';\nimport { SidebarData } from './SidebarData';\nimport './Navbar.css';\nimport { useHistory } from 'react-router-dom';\nimport { IconContext } from 'react-icons';\nimport {Typography, Button,  TextField} from '@material-ui/core'\nimport { makeStyles } from \"@material-ui/core\";\nimport { useAuth } from \"../helper/AuthContext\"\n\nconst style = makeStyles({\n  button: {\n    color: \"white\",\n    backgroundColor: '#060b26',\n    // top: \"50%\",\n    // height: 30,\n    // float: \"right\",\n    // position: \"relative\",\n    // transform: \"translateY(-50%)\"\n  }\n});\n\nfunction Navbar() {\n\n  const [sidebar, setSidebar] = useState(false);\n\n  const showSidebar = () => setSidebar(!sidebar);\n  const classes = style();\n  const [title, setTitle] = useState(\"Main\");\n\n  const {logout, currentUser} = useAuth()\n  let history = useHistory()\n  async function handleLogout() {\n    // setError(\"\")\n\n    try {\n      await logout()\n      history.push(\"/login\")\n    } catch {\n      // setError(\"Failed to log out\")\n    }\n  }\n  \n  return (\n    <>\n      <IconContext.Provider value={{ color: '#666' }}>\n        <div style={{display: 'flex', \"align-items\":'center', backgroundColor: '#060b26'}}>\n          <div className='navbar'>\n           \n            <Link to='#' className='menu-bars'>\n              <FaIcons.FaBars onClick={showSidebar}  />\n              \n            </Link>\n\n          </div>\n          <div>\n            <Typography style={{color:\"white\"}} gutterBottom variant = \"subtitle1\">{currentUser.email}</Typography>\n            <Button style={{width:'150px'}}  size =\"small\" color='primary' className={classes.button} onClick={handleLogout} >LOG OUT</Button>\n          </div>\n        </div>\n        <nav className={sidebar ? 'nav-menu active' : 'nav-menu'}>\n          <ul className='nav-menu-items' onClick={showSidebar}>\n            <li className='navbar-toggle'>\n              <Link to='#' className='menu-bars'>\n                <AiIcons.AiOutlineClose />\n              </Link>\n              <h1 style={{float: 'right'}} >{title}</h1> \n            </li>\n            {SidebarData.map((item, index) => {\n              return (\n                <li key={index} className={item.cName}>\n                  <Link to={item.path}>\n                    {item.icon}\n                    <span>{item.title}</span>\n                  </Link>\n                </li>\n              );\n            })}\n          </ul>\n        </nav>\n      </IconContext.Provider>\n    </>\n  );\n}\n\nexport default Navbar;","/Users/kzjouf/Desktop/project/scdapp/src/pages/components/QRscanner.js",["160","161","162","163","164","165","166","167","168","169","170","171","172","173","174"],"import React from 'react'\nimport QRCode from \"react-qr-code\";\nimport {useState, useRef} from 'react'\nimport QrReader from 'react-qr-reader';\nimport PropTypes from 'prop-types';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DealTransfer from './DealTransfer.js';\nimport {Typography, Button, Card,  CircularProgress, Container, CardActions, Grid, CardContent, TextField} from '@material-ui/core'\nimport Box from '@material-ui/core/Box';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nfunction QRscanner(props) {\n\n  const [text, setText] = useState('');\n  const [imageUrl, setImageUrl] = useState('');\n  const [scanResultFile, setScanResultFile] = useState('');\n  const [scanResultWebCam, setScanResultWebCam] =  useState('');\n  const [deal, setDeal]  = useState('');\n  const [openPay, setOpenPay]  = useState(false);\n  const qrRef = useRef();\n\n  const { onClose, open, setData } = props;\n\n  const handleClose = () => {\n    onClose();\n  };\n\n  const handleClosePay = () => {\n    setOpenPay(false);\n    // setDeal(\"\");\n    onClose();\n  };\n\n  const onScanFile = () => {\n    qrRef.current.openImageDialog();\n  }\n  const handleErrorWebCam = (error) => {\n    console.log(error);\n  }\n  const handleScanWebCam = (result) => {\n    \n    if (result){\n        try {\n          let deal = JSON.parse(result)\n          if (deal.code){\n            setDeal(deal);\n            setOpenPay(true);\n          }\n          console.log(\"DEAL\")\n        } catch (e) {\n          console.log(\"Recipent\")\n          setScanResultWebCam(result);\n          setData(result);\n          onClose();\n        }\n  \n    }\n  }\n\n  const handleErrorFile = (error) => {\n    console.log(error);\n  }\n  const handleScanFile = (result) => {\n       console.log(\"View\", result);\n      if (result) {\n          setScanResultFile(result);\n          handleScanWebCam(result);\n      }\n  }\n\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n  \n  return (\n    <Dialog aria-labelledby=\"alert-dialog-title\" fullWidth maxWidth='xs' onClose={handleClose} open={open}>\n          <AppBar position=\"static\">\n            <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\">\n              <Tab label=\"Open image\" {...a11yProps(0)} />\n              <Tab label=\"Scan by Camera\" {...a11yProps(1)} />\n            </Tabs>\n          </AppBar>\n          \n          <TabPanel value={value} index={0} style={{width: '100%', height: '100%'}}>\n            <div align='center' style={{width: '100%', height: '400px'}}>\n              <QrReader\n                ref={qrRef}\n                delay={300}\n                onError={handleErrorFile}\n                onScan={handleScanFile}\n                style={{width: '100%',  alignItems: 'center', justifyContent: 'center'}}\n                legacyMode/>\n              <Button variant=\"contained\" size='small' color=\"secondary\" onClick={onScanFile}\n                    style={{margin:'10px'}}>Open File</Button>\n            </div>\n          </TabPanel>\n          <TabPanel value={value} index={1}>\n            <div style={{width: '100%', height: '400px'}}>\n              <QrReader\n                  delay={300}\n                  style={{width: '100%',  alignItems: 'center', justifyContent: 'center'}}\n                  onError={handleErrorWebCam}\n                  onScan={handleScanWebCam}\n                />\n            </div>\n          </TabPanel>\n          <DealTransfer deal = {deal} open={openPay} onClose={handleClosePay}/>  \n\n          {/* \n          \n          <Typography style={{display: 'flex', margin: '5px'}} align='center' gutterBottom variant = \"subtitle2\"> {scanResultWebCam}</Typography> \n           */}\n    </Dialog>\n  );\n}\n  \nQRscanner.propTypes = {\n   onClose: PropTypes.func.isRequired,\n   open: PropTypes.bool.isRequired,\n   setData : PropTypes.func.isRequired,\n };\n\nexport default QRscanner;\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}","/Users/kzjouf/Desktop/project/scdapp/src/store/reducers/AuthReducer.js",[],"/Users/kzjouf/Desktop/project/scdapp/src/store/reducers/PostsReducer.js",[],"/Users/kzjouf/Desktop/project/scdapp/src/pages/components/DealTransfer.js",["175","176","177","178","179","180","181","182","183","184"],"import PropTypes from 'prop-types';\nimport { Link } from \"react-router-dom\";\nimport QRCode from \"react-qr-code\";\nimport Switch from '@material-ui/core/Switch';\nimport QRscanner from './QRscanner.js';\nimport {useState, useEffect, useRef} from 'react'\nimport Dialog from '@material-ui/core/Dialog';\nimport { useAuth } from \"../../helper/AuthContext\"\nimport {Typography, Button, TextField, Grid} from '@material-ui/core'\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\n\nfunction DealTransfer(props) {\n\n    const { currentBCAccount, keypair, balance} = useAuth()\n    const [text, setText] = useState();\n    const { onClose, open, deal } = props;\n    const [amtView, setAmtView] = useState(true);\n    const [amt, setAmt] = useState(true);\n\n    const handleClose = () => {\n        onClose();\n    };\n\n    const showRaw = (check) =>{\n      setAmtView(check);\n    }\n    \n    useEffect(() => {\n      encryptTransfer()\n    });\n\n    async function encryptTransfer(){\n        // setAmtView(check);\n        console.log(deal)\n        if (deal != null && open){\n            console.log(\"DEAL \", deal);\n            const response = await fetch(\"/encryptAmount\", {\n                method: \"POST\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify({\n                  'x' : keypair.x,\n                  'CL': deal.price[0],\n                  'CR': deal.price[1]\n                }),\n              })\n        \n              await response.json().then((message) => {\n                console.log(message)\n                setAmt(message['amt']);\n                \n              });\n        }\n\n\n        \n    };\n\n    async function payTheDeal (){\n\n      console.log()\n        const response = await fetch(\"/payTheDeal\", {\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify({\n            'privateKey': currentBCAccount.privateKey,\n            'user_address': currentBCAccount.address,\n            'y_sender': keypair.y,\n            'y_recipient': deal.recipient,\n            'amt':amt,\n            'x_sender': keypair.x,\n            'requestId': deal.requestId\n          }),\n        })\n          \n        let result\n        let newPosts = []\n        await response.json().then((message) => {\n          console.log(message);\n          onClose();\n        });\n\n    \n    };\n\n    \n\n    return (\n        <Dialog aria-labelledby=\"alert-dialog-title\" fullWidth maxWidth='xs' style={{height:'500px'}} onClose={handleClose} open={open}>\n          <DialogTitle  style={{ backgroundColor: 'rgba(220, 241, 229, 0.57)', color: 'rgba(9, 91, 11, 0.86)' }} id=\"alert-dialog-title\">\n            <Typography fullWidth margin=\"dense\" variant=\"h6\" >Pay for the task</Typography>\n          </DialogTitle>\n          {deal && (<DialogContent>\n              <DialogContentText>\n              <Typography fullWidth margin=\"dense\" style={{ alignSelf: 'flex-start'}} variant=\"button\" display=\"block\">Post: {deal.requestId}</Typography>\n                <Typography fullWidth margin=\"dense\" style={{ alignSelf: 'flex-start'}} variant=\"button\" display=\"block\">Price:</Typography>\n                <div style={{display: 'flex', margin:'10px'}}>\n                    <Grid container align-items=\"center\" spacing={2}>\n                    <Grid item>\n                      <Typography variant = \"body2\" align='center'> Raw </Typography>\n                    </Grid>\n                    <Grid item >\n                        <Switch\n                            checked={amtView}\n                            onChange={e => showRaw(e.target.checked)}\n                            name=\"checkedA\"\n                            inputProps={{ 'aria-label': 'secondary checkbox' }} />\n                    </Grid>\n                    <Grid item>\n                      <Typography variant = \"body2\" align='center'> Encrypted </Typography>\n                    </Grid>\n                    </Grid>\n                </div>\n                {amtView ?\n                    (<Typography variant = \"caption\" style={{height:'32px'}}> ({deal.price[0]} {deal.price[1]})</Typography>):\n                    (<Typography variant = \"h6\" align='center'> {amt} </Typography>)}\n                {/* <Typography fullWidth margin=\"dense\" style={{ alignSelf: 'flex-start'}} variant=\"subtitle1\">Price: {(deal != null)? deal.price : \" \"}</Typography> */}\n                \n                {/* <Typography fullWidth margin=\"dense\" style={{ alignSelf: 'flex-start'}} variant=\"subtitle1\">{bidder}</Typography> */}\n              </DialogContentText>\n          </DialogContent>)}\n          <DialogActions>\n            <Button variant=\"contained\"  color='primary' size=\"small\" onClick={handleClose}> Close </Button>\n            {deal && <Button variant=\"contained\"  color='secondary' size=\"small\" onClick={payTheDeal}> Pay </Button>}\n          </DialogActions>\n  \n      </Dialog>\n    );\n}\n    \nDealTransfer.propTypes = {\n    onClose: PropTypes.func.isRequired,\n    open: PropTypes.bool.isRequired,\n    deal : PropTypes.shape({\n        id: PropTypes.number,\n        description: PropTypes.string,\n        recipient: PropTypes.string\n      })\n};\n\nexport default (DealTransfer);","/Users/kzjouf/Desktop/project/scdapp/src/pages/Home.js",["185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202","203"],"import React from 'react';\n\nimport {Typography, Button, Card,  CircularProgress, Container, CardActions, Grid, CardContent, TextField} from '@material-ui/core'\nimport { Link } from \"react-router-dom\";\nimport QRCode from \"react-qr-code\";\nimport  useStyles  from './Styles.js';\nimport {useState, useEffect, useRef} from 'react'\nimport {ethers} from 'ethers'\nimport xtype from 'xtypejs'\nimport text  from './../contract_address.json';\nimport { useAuth } from \"../helper/AuthContext\"\nimport Switch from '@material-ui/core/Switch';\nimport XContract from './../artifacts/contracts/XContract.sol/XContract.json'\nimport { ScannerOutlined } from '@material-ui/icons';\nimport QRscanner from './components/QRscanner.js';\n\n\nconst contractAddress = text['contract_address']\n\nfunction Home(props) {\n  // const history = useHistory();\n  \n\n  const { currentBCAccount, keypair, loading, balance, setBalance} = useAuth()\n\n  const classes = useStyles()\n\n  const [greeting, setGreetingValue] = useState('')\n  const [amount, setAmount] = useState()\n  const [recipient, setRecipient] = useState()\n  const [post, setPost] = useState(\"\")\n  const [balanceView, setBalanceView] = useState(true);\n  const [scan, setScan] = useState(false);\n  const [scanDeal, setScanDeal] = useState(false);\n  const [deal, setDeal] = useState()\n  \n\n  useEffect(() => {\n\n  });\n \n  // async function updateStateEventListener(callback) {\n  //   await requestAccount()\n  //   const provider = new ethers.providers.Web3Provider(window.ethereum);\n  //   const signer = provider.getSigner();\n  //   const contract = new ethers.Contract(contractAddress, XContract.abi, signer)\n  //   const updateStateEvent = contract.UpdateState()\n  //   return updateStateEvent.watch(callback)\n  // }\n\n  async function requestAccount(){\n    const accounts = await window.ethereum.request({method : 'eth_requestAccounts'})\n  }\n\n\n\n  // const generateQrCode = async() => {\n  //   try{\n  //     const response = await QRCode.toDataURL('')\n  //   }catch(error){\n  //     console.log(error)\n  //   }\n  // }\n  \n  async function setGreeting(){\n    if (!greeting) return\n    if (typeof window.ethereum !== 'undefined'){\n      await requestAccount()\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(contractAddress, XContract.abi, signer)\n      const transaction = await contract.setGreeting(greeting)\n      await transaction.wait()\n\n      contract.on(\"TestMsg\", (msg) => {\n        console.log('Msg : ', msg);\n      });\n\n      fetchGreeting()\n    }\n  }\n\n  \n  async function fetchGreeting(){\n    if (typeof window.ethereum !== 'undefined'){\n      const provider = new ethers.providers.Web3Provider(window.ethereum)\n      const contract = new ethers.Contract(contractAddress, XContract.abi, provider)\n      try{\n        const data = await contract.greet()\n        setGreetingValue(data)\n        console.log('data: ', data)\n      } catch(err){\n        console.log(\"Error: \", err)\n      }\n    }\n  }\n\n \n\n  async function register(){\n    // setLoading(true)\n    if (typeof window.ethereum !== 'undefined'){\n      // await requestAccount()\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      console.log(\"signer \", signer)\n      // const contract = new ethers.Contract(contractAddress, XContract.abi, signer)\n      // const transaction = await contract.register()\n      // var accounts = await provider.getAccounts();\n      // console.log(accounts[0])\n      // await transaction.wait()\n      // let a = '0'\n      // signer.getAddress().then((address) => {\n      //   a = address\n      // });\n      // let b = provider.getBalance(a)\n      // setAddress(a)\n      \n      // getBalance()\n      // setLoading(false)\n      // \n    }\n  }\n\n  const handleClickScan = () => {\n    setScan(true);\n  };\n\n  const handleCloseScan = () => {\n    setScan(false);\n  };\n\n  const handleCloseDeal = () => {\n    setScanDeal(false);\n  };\n\n  // async function genProof() {\n  //   const response = await fetch(\"/genProof\", {\n  //     method: \"POST\",\n  //     headers: { \"Content-Type\": \"application/json\" },\n  //     body: JSON.stringify({\n  //       amt: amount,\n  //     }),\n  //   })\n  //   let result\n  //   await response.json().then((message) => {\n  //     result = JSON.stringify(message[\"data\"]);\n     \n  //     console.log(result) \n  //   });\n  //   return result\n  // }\n\n  async function getElBalance(){\n\n      const response = await fetch(\"/getElBalance\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          'x' : keypair.x,\n          'y' : keypair.y,\n          'user_key':currentBCAccount.privateKey\n        }),\n      })\n\n      await response.json().then((message) => {\n        message = message['balance']\n        console.log(message)\n        setBalance(message)\n      });\n      // setLoading(false)\n      // const provider = new ethers.providers.Web3Provider(window.ethereum)\n      // const contract = new ethers.Contract(contractAddress, XContract.abi, provider)\n      // const signer =  provider.getSigner()\n      // const [account] = await window.ethereum.request({method: 'eth_requestAccounts'})\n      // const acc = signer.getAddress()\n      // const b = await contract.ElBalanceOf(y)\n      // console.log('address: ', acc)\n      // console.log('balance: ', b.toString())\n      // setBalance(b.toString())\n      // setLoading(false)\n    \n  }\n\n  async function genConfProof() {\n\n      const response = await fetch(\"/genConfProof\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          'privateKey': currentBCAccount.privateKey,\n          'user_address': currentBCAccount.address,\n          'y_sender': keypair.y,\n          'y_recipient': recipient,\n          'amt':amount,\n          'b_after':197,\n          'x_sender': keypair.x\n        }),\n      })\n      // setLoading(false)\n      let result\n      await response.json().then((message) => {\n        result = message\n      });\n      return result\n  }\n  async function newPost() {\n\n      const response = await fetch(\"/newPost\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          'privateKey': currentBCAccount.privateKey,\n          'pubkey' : keypair.y,\n          'content':post\n        }),\n      })\n\n  }\n\n  async function confTransfer() {\n\n    let messageProof = await genConfProof();\n      console.log(messageProof);\n      if (messageProof['code'] !== 200){\n        const err = messageProof['err']\n        return 0\n\n    // if (typeof window.ethereum !== \"undefined\") {\n    //   await requestAccount();\n    //   const provider = new ethers.providers.Web3Provider(window.ethereum);\n    //   const signer = provider.getSigner();\n    //   const contract = new ethers.Contract(\n    //     contractAddress,\n    //     XContract.abi,\n    //     signer\n    //   );\n    //   // function sendPrivateToken(function() {\n    //   //   console.log('huzzah, I\\'m done!');\n    //   // });\n    //   let messageProof = await genConfProof();\n    //   console.log(messageProof);\n    //   if (messageProof['code'] != 200){\n    //     const err = messageProof['err']\n    //     setNoti(err);\n    //     return 0\n    //   }\n  \n      const pr1 = JSON.stringify(messageProof['rangeProofForAmt'])\n      const pr2 = JSON.stringify(messageProof['rangeProofForRemainBalance'])\n      const pr3 = JSON.stringify(messageProof['sigmaProtocol'])\n      const data = JSON.stringify(messageProof['input'])\n      // let msg2 = JSON.stringify(messageProof)\n      // console.log(msg2)\n      // // msg2 =  \"hello\"ßßßßßßßßß\n      // const transaction = await contract.confTransfer(pr1, pr2, pr3, data);\n      // \n\n      \n    }\n  }\n  \n\n  async function sendCoins(){\n    var messageProof\n    if (typeof window.ethereum !== 'undefined'){\n\n      fetch(\"/genProof\",\n        {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({\n                amt: amount\n            }),\n        }).then((response) => response.json())\n        .then((message) => {\n          messageProof = JSON.stringify(message['data'])\n          console.log(messageProof)\n          console.log(\"Check type of Proof: \", xtype(messageProof))\n        });\n     \n      await requestAccount()\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(contractAddress, XContract.abi, signer)\n      const transaction = await contract.transfer(recipient, amount)\n      // const transaction = await contract.privateTransfer(messageProof)\n      \n      // await transaction.wait()\n      \n      contract.on(\"UpdateState\", (add, newBal) => {\n   \n          console.log(\"sender \", add)\n          console.log(\"new Balance \", newBal.toString())\n          \n       \n      });\n    }\n  }\n\n\n\n  return (\n    loading == true ? (<CircularProgress size={24} className={classes.buttonProgress} />) : (\n    <div className='home'>\n      <Typography align='center' variant = \"h4\"> Master Internship </Typography>\n      <h1 align='center'>Home</h1>\n      <Container maxwidth = \"sm\" className = {classes.cardGrid}> \n        <Grid container spacing ={4}>\n          <Grid item> \n            <Card className ={classes.card} maxwidth = \"md\">\n              {/* <CardMedia \n                className ={classes.cardMedia}\n                  image =\"https://source.unsplash.com/random\"\n                  title=\"Image title\" /> */}\n\n              <CardContent className = {classes.cardContent}>\n                <Typography gutterBottom variant = \"h5\"> Account </Typography>\n                \n                {/* <Dimmer active inverted>\n                  <Loader>Loading</Loader>\n                </Dimmer> */}\n                \n                <div style={{display: 'flex'}}>\n                  <QRCode value={keypair.y} size={110}/>\n                  <div>\n                    <Typography style={{display: 'flex', marginLeft: '10px'}} gutterBottom variant = \"subtitle2\"> {currentBCAccount.address} </Typography>\n                    <Typography style={{display: 'flex', marginLeft: '10px'}} gutterBottom variant = \"subtitle2\"> {keypair.y} </Typography> \n                  </div>\n\n                </div>\n                {/* <input \n                  onChange={e => setGreetingValue(e.target.value)} \n                  placeholder=\"Set greeting\"\n                  value = {greeting}\n                /> */}\n    \n              </CardContent>\n              <CardActions>\n               \n\n                \n                \n              </CardActions>\n            </Card>\n          </Grid>\n          <Grid item>\n              <Card className ={classes.card} maxwidth = \"md\">\n            {/* <CardMedia \n              className ={classes.cardMedia}\n                image =\"https://source.unsplash.com/random\"\n                title=\"Image title\" /> */}\n\n            <CardContent className = {classes.cardContent}>\n              <Typography gutterBottom variant = \"h5\"> Balance </Typography>\n              <div style={{display: 'flex'}}>\n                <Grid container align-items=\"center\" spacing={2}>\n                  <Grid item>Raw</Grid>\n                  <Grid item >\n                    <Switch\n                   \n                          checked={balanceView}\n                          onChange={e => setBalanceView(e.target.checked)}\n                          name=\"checkedA\"\n                          inputProps={{ 'aria-label': 'secondary checkbox' }}           />\n                  </Grid>\n                  <Grid item>Encrypted</Grid>\n                </Grid>\n              </div>\n              {balanceView ?\n              (<Typography variant = \"subtitle2\" gutterBottom>({balance.CL} {balance.CR}) </Typography>):\n              (<Typography variant = \"subtitle2\" gutterBottom> {balance.b} </Typography>)}\n              <TextField onChange={e => setRecipient(e.target.value)} placeholder=\"Recipient Public Key\" \n                    variant='outlined'\n                    fullWidth\n                    color =\"secondary\"\n                    value = {recipient}\n                    className={classes.field}/>\n              \n              <TextField onChange={e => setAmount(e.target.value)} placeholder=\"Amount\" variant='outlined'\n                  fullWidth\n                  color =\"secondary\"\n                  className={classes.field}\n                  defaultValue = {1}\n                /> \n            </CardContent>\n            <CardActions>\n              <Button size =\"small\" color=\"primary\" onClick={handleClickScan} >Scan Deal</Button>\n              <Button size =\"small\" color=\"primary\" onClick={getElBalance} >Get El Balance</Button>\n              <Button size =\"small\" color=\"primary\" onClick={confTransfer} >Conf Transfer</Button>\n            </CardActions>\n          </Card>\n          </Grid>\n          <Grid item>\n              <Card className ={classes.card} maxwidth = \"md\">\n            {/* <CardMedia \n              className ={classes.cardMedia}\n                image =\"https://source.unsplash.com/random\"\n                title=\"Image title\" /> */}\n\n            <CardContent className = {classes.cardContent}>\n              <Typography gutterBottom variant = \"h5\"> New post </Typography>\n              <TextField onChange={e => setPost(e.target.value)} placeholder=\"Task\" variant='outlined'\n                  fullWidth\n                  color =\"secondary\"\n                  className={classes.field}\n                  defaultValue = {post}\n                /> \n            </CardContent>\n            <CardActions>\n              <Button size =\"small\" color=\"primary\" onClick={newPost} >Post new task</Button>\n            </CardActions>\n          </Card>\n          \n          </Grid>\n          \n        </Grid>\n        <QRscanner open={scan} onClose={handleCloseScan} setData = {deal} />\n      </Container>\n    </div>)\n  );\n}\n\nexport default Home;","/Users/kzjouf/Desktop/project/scdapp/src/pages/Posts.js",["204","205","206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227"],"/Users/kzjouf/Desktop/project/scdapp/src/pages/Reports.js",["228","229"],"import React from 'react';\nimport {useState} from 'react'\nimport '@react-pdf-viewer/core/lib/styles/index.css'\nimport '@react-pdf-viewer/default-layout/lib/styles/index.css'\nimport { defaultLayoutPlugin } from '@react-pdf-viewer/default-layout';\nimport pdfFile from \"./Research_Proposal.pdf\"\nimport {Worker, Viewer} from '@react-pdf-viewer/core'\n\nfunction Reports() {\n\n  const [defaultPdfFile] = useState(pdfFile)\n  const [numPages, setNumPages] = useState(null);\n\n\n  function onDocumentLoadSuccess({ numPages }) {\n    setNumPages(numPages);\n  }\n\n  const defaultLayoutPluginInstance = defaultLayoutPlugin();\n\n  return (\n    <div className='reports'>\n      <br></br>\n      <h1>Reports</h1>\n        <div>\n        {defaultPdfFile&&<><Worker workerUrl=\"https://unpkg.com/pdfjs-dist@2.6.347/build/pdf.worker.min.js\">\n            <Viewer fileUrl={defaultPdfFile}\n              plugins={[defaultLayoutPluginInstance]} />\n          </Worker></>}\n        </div>\n    </div>\n  );\n}\n\nexport default Reports;","/Users/kzjouf/Desktop/project/scdapp/src/pages/Messages.js",["230","231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247","248","249","250"],"import xtype from 'xtypejs'\nimport AddPost from '../components/AddPost';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport Dialog from '@material-ui/core/Dialog';\nimport {Typography, Button, TextField, Grid} from '@material-ui/core'\nimport IconButton from '@material-ui/core/IconButton';\nimport { DataGrid } from '@material-ui/data-grid';\nimport XContract from './../artifacts/contracts/XContract.sol/XContract.json'\nimport text  from './../contract_address.json';\nimport {ethers} from 'ethers'\nimport {useState, useEffect} from 'react'\nimport { makeStyles } from '@material-ui/styles';\nimport { green } from '@material-ui/core/colors';\nimport SendIcon from '@material-ui/icons/Send';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport DealDialog from './components/Deal';\nimport NewPostDialog from './components/NewPost';\nimport DealViewQR from './components/DealViewQR';\nimport Avatar from '@material-ui/core/Avatar';\n\n// import EditPost from '../../pages2/EditPost/EditPost';\nimport PropTypes from 'prop-types';\nimport { useAuth } from \"../helper/AuthContext\"\n// import SinglePost from '../../pages2/SinglePost/SinglePost';\nconst contractAddress = text['contract_address']\n\nfunction Messages (props) {\n    const { currentBCAccount, keypair, loading, balance} = useAuth()\n    const [msgList, setMsgList] = useState([]);\n    const classes = useStyles();\n    const State = ['Processing', 'Assigned', 'WaitingPaid', 'Closed', 'Cancel'] ;\n    const [QR, setQR] = useState();\n    const [showQR, setShowQR] = useState();\n    const columns = [\n      { field: 'id', headerName: 'ID', width: 68, headerClassName: 'super-app-theme--header'},\n      {\n        field: 'content',\n        headerName: 'Content',\n        headerClassName: 'super-app-theme--header',\n        flex: 1,\n        color: 'white',\n        renderCell: (params) => {\n          \n          let t = \"Your offer for request \" + params.row.requestId + \" is \" + (params.row.code ? \"Accepted\" : \"Rejected\");\n          return(<strong>\n            <Typography variant=\"subtitle1\">\n               {t}\n            </Typography>\n          </strong>)\n\n        }    \n        ,\n        disableClickEventBubbling: true,\n      },\n      {\n        field: 'detail',\n        headerName: 'Detail',\n        headerClassName: 'super-app-theme--header',\n        width: 150,\n        renderCell: (params) => (\n          <strong>\n            <Button\n                variant=\"contained\"\n                disabled = {params.row.code? false : true}\n                // style={{ color: green[500] }}\n                color = 'primary'\n                className={classes.button}\n                onClick={() => openQR(params.row)}\n                startIcon={ <VisibilityIcon/>}\n              >\n                Show\n              </Button>\n{/* \n            <IconButton\n              style={{ color: green[500] }}\n              size=\"small\"\n              onClick={() => openQR(params.row)}\n              disabled = {params.row.code? false : true}\n              >\n              \n              <VisibilityIcon/>\n            </IconButton> */}\n          </strong>\n        ),\n        disableClickEventBubbling: true,\n      },\n    ];\n\n    setTimeout(()=>{\n      listenEvents()\n    }, 5000);\n    \n    const openQR = (item) => {\n      console.log(item);\n      setQR(item);\n      setShowQR(true);\n    }\n\n    async function loadMessages(){\n      const response = await fetch(\"/getMessages\", {\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify({\n            'user_key': currentBCAccount.privateKey,\n          }),\n        })\n        \n        let result\n        let newMsgs = []\n        await response.json().then((message) => {\n            message = message['message']\n            console.log(message)\n            message.map((msg, i) => {\n              newMsgs.push({\n                id : i,\n                code: msg[0],\n                requestId: msg[1],\n                price: msg[2],\n                requestOwner : msg[3],\n                recipient : keypair.y\n            })\n          })\n          setMsgList(newMsgs)\n        });\n\n  }\n\n\n    async function listenEvents(){\n      \n      if (typeof window.ethereum !== 'undefined'){\n        console.log('listenEvents')\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const contract = new ethers.Contract(contractAddress, XContract.abi, provider);\n        contract.on(\"NewPrice\", (id, CL_price, CR_price) => {\n          console.log(\"event \", id, CL_price, CR_price);\n        })\n        // console.log(contract.events)\n        // await contract.events.NewPrice({}).on(\"data\", (e) => console.log(e));\n      }\n    }\n\n    useEffect(() => {\n      loadMessages();\n      }, [])\n  \n    async function reload(){\n      loadMessages();\n    }\n    \n    \n    return (\n        <div style={{ height: '800px',  marginLeft: 100, marginRight: 20}} className={classes.root}>\n          <Grid container align-items=\"center\" style={{width: '100%',height: \"100%\" }}>\n              <Grid item xs align-items=\"right\" style={{display: 'flex', alignItems: 'center', justifyContent: 'right'}}>\n                <Button size =\"small\" variant=\"outlined\" color=\"primary\" onClick={reload} > RELOAD </Button>\n              </Grid>\n              <Grid item xs={12} style={{width: '100%', height: \"90%\" }}>\n                  <DataGrid\n                  rows={msgList}\n                  columns={columns}\n                  sortModel={[{ field: 'id', sort: 'desc' }]}\n                  pageSize={8}\n                  //   checkboxSelection\n                  disableSelectionOnClick/>\n              </Grid>\n          </Grid>\n          <DealViewQR data={QR} open={showQR} onClose={setShowQR}/>\n      </div>\n    );\n    \n}\n\nconst useStyles = makeStyles({\n  root: {\n    '& .super-app-theme--header': {\n      backgroundColor: '#3b5998',\n      color:'white',\n      fontFamily: \"Comic Sans MS\",\n      textTransform: 'capitalize'\n    }\n  }\n});\nexport default (Messages);\n\n\n","/Users/kzjouf/Desktop/project/scdapp/src/pages/History.js",[],"/Users/kzjouf/Desktop/project/scdapp/src/helper/Firebase.js",[],"/Users/kzjouf/Desktop/project/scdapp/src/components/SidebarData.js",[],"/Users/kzjouf/Desktop/project/scdapp/src/store/actions/AuthActions.js",[],"/Users/kzjouf/Desktop/project/scdapp/src/store/actions/PostTypes.js",[],"/Users/kzjouf/Desktop/project/scdapp/src/pages/Styles.js",["251"],"import { makeStyles } from \"@material-ui/core\";\nimport { Block } from \"@material-ui/icons\";\n\nconst useStyles = makeStyles((theme) => ({\n    card :{\n        height : '100%',\n        display :'flex',\n        flexDirection: 'column',\n        width: '45rem',\n        marginLeft: '15rem', \n        // backgroundColor: '#3f4c6b'\n        backgroundColor: theme.palette.background.paper\n    },\n    cardMedia : {\n        paddingTop : '56.25%'\n    },\n\n    cardContent: {\n        flexGrow:1\n    },\n    cardGrid: {\n        padding: '20px 0'\n    },\n    icon: {\n        marginRight: '20px'\n    },\n\n    buttons : {\n        marginTop: '40px'\n    },\n    container: {\n        backgroundColor: '#FFFFFF',\n        border: '1px solid #DFE0EB',\n        borderRadius: 4,\n        cursor: 'pointer',\n        height: 70,\n        maxWidth: 350,\n        marginRight: 30,\n        padding: '24px 32px 24px 32px',\n        ':hover': {\n            borderColor: '#3751FF',\n            ':nth-child(n) > span': {\n                color: '#3751FF'\n            }\n        }\n    },\n    titleline : {\n        display :'flex',\n        flexDirection: 'row',\n        // justifycontent: space-between,\n        // align-items: center,\n        // marginbottom: 0.5rem,\n        fontSize: '20px',\n        color: '#FFFFFF',\n    },\n    field:{\n        marginTop: 20,\n        marginBottom: 10,\n        display: 'block'\n    },\n   \n\n\n}));\n\nexport default useStyles;\n\n","/Users/kzjouf/Desktop/project/scdapp/src/components/AddPost.js",["252","253","254","255","256","257","258","259","260","261","262","263","264","265"],"import { Component } from 'react';\nimport './Post.css';\nimport  useStyles  from '../pages/Styles.js';\nimport {Typography, Button, AppBar, Spinner, Card, Container, CardActions, Grid, CardContent, CardMedia, TextField} from '@material-ui/core'\nimport {useState, useEffect} from 'react'\n\nfunction AddPost() {\n\n    const [newPost, setNewPost] = useState({title: '',\n    description: '',\n    status: 'active'});\n\n\n    const addPostHandler = (e) => {\n        e.preventDefault();\n        console.log(newPost);\n    };\n    \n    // textChange = (title, e) => {\n    //     this.setState({\n    //         [title]: e.target.value,\n    //     });\n    // };\n\n    return(\n        <div>\n            <h2 className='text-2x1 font-bold'> Add Post </h2>\n        <form  onSubmit ={addPostHandler}>\n            <div className='form-inner'>\n            <div className=\"form-group\">\n                <label className='block'>Title</label>\n                <input\n                    type='text'\n                    className='block w-1/4 border border-gray-600 focus:outline-none'\n                    onChange={e => setNewPost({...newPost, title: e.target.value})}\n                />\n            </div>\n            <div className=\"form-group\">\n                <label className='block'>Description</label>\n                <textarea  onChange={e => setNewPost({...newPost, description: e.target.value})} value={newPost.description} className='px-3 py-1 block w-full border border-gray-600  focus:outline-none focus:border-red-600'></textarea>\n            </div>\n            <div className=\"form-group\">\n                <label className='block'>Status</label>\n                <input\n                    type='text'\n                    className='block w-1/4 border border-gray-600 focus:outline-none'\n                />\n            </div>\n            <div className='my-3'>\n                    <button\n                        type='submit'\n                        className='bg-indigo-900 text-white px-5 py-2'\n                    >\n                        Add Post\n                    </button>\n                </div>\n            </div>\n        </form>\n        </div>\n    \n    )\n    \n}\n\nexport default AddPost;","/Users/kzjouf/Desktop/project/scdapp/src/pages/components/Deal.js",["266","267","268","269","270","271","272","273","274","275","276","277","278","279","280","281"],"import { bindActionCreators } from 'redux';\nimport AddPost from '../../components/AddPost';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport Dialog from '@material-ui/core/Dialog';\nimport {Typography, Button, TextField, Grid} from '@material-ui/core'\nimport xtype from 'xtypejs'\nimport text  from '../../contract_address.json';\nimport {ethers} from 'ethers'\nimport {useState, useEffect} from 'react'\nimport { makeStyles } from '@material-ui/styles';\nimport SendIcon from '@material-ui/icons/Send';\nimport Avatar from '@material-ui/core/Avatar';\n// import EditPost from '../../pages2/EditPost/EditPost';\nimport PropTypes from 'prop-types';\nimport { useAuth } from \"../../helper/AuthContext\"\n// import SinglePost from '../../pages2/SinglePost/SinglePost';\n\nfunction DealDialog(props) {\n    const classes = useStyles();\n    const { currentBCAccount} = useAuth()\n    const [offer, setOffer] = useState()\n    const { onClose, selectedItem, open, deal, price} = props;\n    if (deal != null)\n        console.log(deal[2]);\n    useEffect(() => {\n      \n        }, [])\n\n    const handleClose = () => {\n      onClose(selectedItem);\n    };\n\n    \n\n    async function acceptDeal (){\n      if (deal != null && selectedItem.state == \"Processing\"){\n        const response = await fetch(\"/acceptDeal\", {\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify({\n            'user_key': currentBCAccount.privateKey,\n            'requestId': deal[2],\n            'dealId': deal[0]\n          }),\n        })\n        \n        let result\n        let newPosts = []\n        await response.json().then((message) => {\n          // result = message[\"data\"]\n          \n        });\n      }\n      \n      handleClose();\n    };\n  \n    return (\n      <Dialog aria-labelledby=\"alert-dialog-title\" fullWidth maxWidth='xs' onClose={handleClose} open={open}>\n          <DialogTitle  style={{ backgroundColor: 'rgba(220, 241, 229, 0.57)', color: 'rgba(9, 91, 11, 0.86)' }} id=\"alert-dialog-title\">\n            <Typography fullWidth margin=\"dense\" variant=\"h6\" >Current Min Offer</Typography>\n          </DialogTitle>\n          <DialogContent>\n              <DialogContentText>\n                <Typography fullWidth margin=\"dense\" style={{ alignSelf: 'flex-start'}} variant=\"subtitle1\">Description: \"{selectedItem.description}\"</Typography>\n                <Typography fullWidth margin=\"dense\" style={{ alignSelf: 'flex-start'}} variant=\"subtitle1\">State: {selectedItem.state}</Typography>\n                <Typography fullWidth margin=\"dense\" style={{ alignSelf: 'flex-start'}} variant=\"subtitle1\">Current min offered price: {(deal == null)? \"No offer\" : price}</Typography>\n                \n                {/* <Typography fullWidth margin=\"dense\" style={{ alignSelf: 'flex-start'}} variant=\"subtitle1\">{bidder}</Typography> */}\n              </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button variant=\"contained\"  color='rgba(9, 91, 11, 0.86)' size=\"small\" onClick={acceptDeal}> {(deal == null || selectedItem.state != \"Processing\") ? \"Close\" : \"Accept\"}  </Button>\n          </DialogActions>\n  \n      </Dialog>\n    );\n  }\n  \n  const useStyles = makeStyles({\n    root: {\n      '& .super-app-theme--header': {\n        backgroundColor: 'rgba(255, 7, 0, 0.55)',\n      },\n      '& .super-app-theme--Filled': {\n        backgroundColor: 'rgba(114, 209, 18, 1)',\n      }\n    }\n  });\n\nDealDialog.propTypes = {\n    onClose: PropTypes.func.isRequired,\n    open: PropTypes.bool.isRequired,\n    selectedItem: PropTypes.shape({\n      id: PropTypes.number,\n      description: PropTypes.string.isRequired,\n      pubkey: PropTypes.string.isRequired\n    }),\n    deal: PropTypes.shape({\n        dealId: PropTypes.number,\n        requestId: PropTypes.number,\n        price: PropTypes.shape({\n            CL: PropTypes.string,\n            CR: PropTypes.string\n        }),\n        state: PropTypes.number,\n        bidder: PropTypes.string   \n      })\n};\nexport default (DealDialog);","/Users/kzjouf/Desktop/project/scdapp/src/pages/components/NewPost.js",["282","283","284","285","286","287","288","289","290","291","292","293","294","295"],"import { bindActionCreators } from 'redux';\nimport AddPost from '../../components/AddPost';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport Dialog from '@material-ui/core/Dialog';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport {Typography, Button, TextField, Grid} from '@material-ui/core'\nimport xtype from 'xtypejs'\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport {useState, useEffect} from 'react'\nimport SendIcon from '@material-ui/icons/Send';\nimport Avatar from '@material-ui/core/Avatar';\n// import EditPost from '../../pages2/EditPost/EditPost';\nimport PropTypes from 'prop-types';\nimport { useAuth } from \"../../helper/AuthContext\"\n// import SinglePost from '../../pages2/SinglePost/SinglePost';\n\nfunction NewPostDialog(props) {\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n      maxWidth: 752,\n    },\n    demo: {\n      backgroundColor: theme.palette.background.paper,\n    },\n    title: {\n      margin: theme.spacing(4, 0, 2),\n    },\n  }));\n    const [dense, setDense] = useState(false);\n    const { currentBCAccount, keypair} = useAuth()\n    const [post, setPost] = useState()\n    const { onClose, open} = props;\n    const classes = useStyles();\n\n    const handleClose = () => {\n      onClose();\n    };\n\n    const test_cases = [\n      \"My bike is broken, I need someone to come and fix it. I am always available in the afternoon after 5pm.\",\n      \"I need someone to help me cleaning my room in this weekend\",\n      \" I cannot turn on my computer, I need someone come and help fix it asap\",\n      \"I need help with some difficult Maths exercises\"\n    ]\n    let tests = []\n    {test_cases.map( (test)=>{\n      tests.push(<Button variant=\"text\" color=\"primary\"\n          size = \"small\"\n          onClick={() => setPost(test)}\n          titleStyle={{\n            color: \"white\",\n            fontSize: 16,\n          }}\n          style={{textTransform: 'none', textAlign:'left'}}\n        >\n        {test}\n      </Button>)\n    }\n    )}\n    async function newPost() {\n        const response = await fetch(\"/newPost\", {\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify({\n            'privateKey': currentBCAccount.privateKey,\n            'pubkey' : keypair.y,\n            'content': post\n          }),\n        })\n        handleClose();\n    }\n       \n      \n    return (\n        <Dialog aria-labelledby=\"alert-dialog-title\" fullWidth maxWidth='xs' onClose={handleClose} open={open}>\n            <DialogTitle  style={{ backgroundColor: 'navy', color: 'white' }} id=\"alert-dialog-title\">\n                Create a new task\n            </DialogTitle>\n            <DialogContent>\n                <TextField onChange={e => setPost(e.target.value)} autoFocus\n                            margin=\"dense\"\n                            label=\"Description\"\n                            fullWidth \n                            value = {post}        \n                            multiline = {true} />\n                <div className={classes.demo}>\n                <List dense={dense}>\n                  {tests}\n                </List>\n              </div>\n            </DialogContent>\n            <DialogActions>\n            <IconButton color=\"primary\" component=\"span\" onClick={newPost}>\n                    <SendIcon />\n            </IconButton>\n            </DialogActions>\n    \n        </Dialog>\n    );\n    }\n      \n// NewPostDialog.propTypes = {\n//     onClose: PropTypes.func.isRequired,\n//     open: PropTypes.bool.isRequired,\n//     description: PropTypes.string.isRequired,\n// };\nexport default (NewPostDialog);","/Users/kzjouf/Desktop/project/scdapp/src/pages/components/DealViewQR.js",["296","297","298","299","300","301","302","303","304","305","306","307"],"import PropTypes from 'prop-types';\nimport QRCode from \"react-qr-code\";\nimport QRscanner from './QRscanner.js';\nimport {useState, useEffect, useRef} from 'react'\nimport Dialog from '@material-ui/core/Dialog';\nimport { useAuth } from \"../../helper/AuthContext\"\nimport {Typography, Button, TextField, Grid} from '@material-ui/core'\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nfunction DealViewQR(props) {\n\n  const { currentBCAccount, keypair} = useAuth()\n\n    const [text, setText] = useState('');\n\n    const { onClose, open, data } = props;\n\n    console.log(props);\n  \n    const handleClose = () => {\n      onClose();\n    };\n  \n\n  \n    return (\n      <Dialog aria-labelledby=\"alert-dialog-title\" maxWidth='xs' onClose={handleClose} open={open}>\n          {/* <DialogTitle  style={{ backgroundColor: 'rgba(220, 241, 229, 0.57)', color: 'rgba(9, 91, 11, 0.86)' }} id=\"alert-dialog-title\">\n              <Typography align = \"center\"  fullWidth margin=\"dense\" variant=\"subtitle1\" >Scan the deal</Typography>\n          </DialogTitle> */}\n           <DialogContent>\n            <QRCode delay={300} style={{width: '90%'}} value={JSON.stringify(data)}/>\n            </DialogContent>\n      </Dialog>\n    );\n  }\n  \nDealViewQR.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  data : PropTypes.string\n};\n\nexport default (DealViewQR);","/Users/kzjouf/Desktop/project/scdapp/src/services/AuthService.js",[],{"ruleId":"308","replacedBy":"309"},{"ruleId":"310","replacedBy":"311"},{"ruleId":"312","severity":1,"message":"313","line":3,"column":8,"nodeType":"314","messageId":"315","endLine":3,"endColumn":14},{"ruleId":"312","severity":1,"message":"316","line":4,"column":8,"nodeType":"314","messageId":"315","endLine":4,"endColumn":14},{"ruleId":"312","severity":1,"message":"317","line":5,"column":50,"nodeType":"314","messageId":"315","endLine":5,"endColumn":58},{"ruleId":"312","severity":1,"message":"318","line":5,"column":60,"nodeType":"314","messageId":"315","endLine":5,"endColumn":70},{"ruleId":"312","severity":1,"message":"319","line":6,"column":24,"nodeType":"314","messageId":"315","endLine":6,"endColumn":31},{"ruleId":"312","severity":1,"message":"320","line":10,"column":10,"nodeType":"314","messageId":"315","endLine":10,"endColumn":18},{"ruleId":"312","severity":1,"message":"321","line":10,"column":31,"nodeType":"314","messageId":"315","endLine":10,"endColumn":39},{"ruleId":"312","severity":1,"message":"322","line":11,"column":7,"nodeType":"314","messageId":"315","endLine":11,"endColumn":23},{"ruleId":"312","severity":1,"message":"323","line":2,"column":8,"nodeType":"314","messageId":"315","endLine":2,"endColumn":12},{"ruleId":"312","severity":1,"message":"324","line":4,"column":10,"nodeType":"314","messageId":"315","endLine":4,"endColumn":17},{"ruleId":"312","severity":1,"message":"325","line":6,"column":8,"nodeType":"314","messageId":"315","endLine":6,"endColumn":12},{"ruleId":"312","severity":1,"message":"326","line":14,"column":9,"nodeType":"314","messageId":"315","endLine":14,"endColumn":19},{"ruleId":"312","severity":1,"message":"327","line":21,"column":20,"nodeType":"314","messageId":"315","endLine":21,"endColumn":29},{"ruleId":"312","severity":1,"message":"328","line":23,"column":11,"nodeType":"314","messageId":"315","endLine":23,"endColumn":19},{"ruleId":"312","severity":1,"message":"317","line":4,"column":50,"nodeType":"314","messageId":"315","endLine":4,"endColumn":58},{"ruleId":"312","severity":1,"message":"329","line":3,"column":8,"nodeType":"314","messageId":"315","endLine":3,"endColumn":16},{"ruleId":"312","severity":1,"message":"330","line":4,"column":8,"nodeType":"314","messageId":"315","endLine":4,"endColumn":13},{"ruleId":"312","severity":1,"message":"331","line":18,"column":10,"nodeType":"314","messageId":"315","endLine":18,"endColumn":13},{"ruleId":"312","severity":1,"message":"332","line":18,"column":15,"nodeType":"314","messageId":"315","endLine":18,"endColumn":21},{"ruleId":"312","severity":1,"message":"333","line":58,"column":12,"nodeType":"314","messageId":"315","endLine":58,"endColumn":25},{"ruleId":"334","severity":1,"message":"335","line":115,"column":8,"nodeType":"336","endLine":115,"endColumn":10,"suggestions":"337"},{"ruleId":"312","severity":1,"message":"338","line":9,"column":30,"nodeType":"314","messageId":"315","endLine":9,"endColumn":39},{"ruleId":"312","severity":1,"message":"339","line":31,"column":17,"nodeType":"314","messageId":"315","endLine":31,"endColumn":25},{"ruleId":"312","severity":1,"message":"340","line":2,"column":8,"nodeType":"314","messageId":"315","endLine":2,"endColumn":14},{"ruleId":"312","severity":1,"message":"341","line":7,"column":8,"nodeType":"314","messageId":"315","endLine":7,"endColumn":19},{"ruleId":"312","severity":1,"message":"342","line":9,"column":29,"nodeType":"314","messageId":"315","endLine":9,"endColumn":33},{"ruleId":"312","severity":1,"message":"343","line":9,"column":36,"nodeType":"314","messageId":"315","endLine":9,"endColumn":52},{"ruleId":"312","severity":1,"message":"344","line":9,"column":54,"nodeType":"314","messageId":"315","endLine":9,"endColumn":63},{"ruleId":"312","severity":1,"message":"345","line":9,"column":65,"nodeType":"314","messageId":"315","endLine":9,"endColumn":76},{"ruleId":"312","severity":1,"message":"346","line":9,"column":78,"nodeType":"314","messageId":"315","endLine":9,"endColumn":82},{"ruleId":"312","severity":1,"message":"347","line":9,"column":84,"nodeType":"314","messageId":"315","endLine":9,"endColumn":95},{"ruleId":"312","severity":1,"message":"338","line":9,"column":97,"nodeType":"314","messageId":"315","endLine":9,"endColumn":106},{"ruleId":"312","severity":1,"message":"348","line":17,"column":10,"nodeType":"314","messageId":"315","endLine":17,"endColumn":14},{"ruleId":"312","severity":1,"message":"349","line":17,"column":16,"nodeType":"314","messageId":"315","endLine":17,"endColumn":23},{"ruleId":"312","severity":1,"message":"350","line":18,"column":10,"nodeType":"314","messageId":"315","endLine":18,"endColumn":18},{"ruleId":"312","severity":1,"message":"351","line":18,"column":20,"nodeType":"314","messageId":"315","endLine":18,"endColumn":31},{"ruleId":"312","severity":1,"message":"352","line":19,"column":10,"nodeType":"314","messageId":"315","endLine":19,"endColumn":24},{"ruleId":"312","severity":1,"message":"353","line":20,"column":10,"nodeType":"314","messageId":"315","endLine":20,"endColumn":26},{"ruleId":"312","severity":1,"message":"354","line":2,"column":10,"nodeType":"314","messageId":"315","endLine":2,"endColumn":14},{"ruleId":"312","severity":1,"message":"340","line":3,"column":8,"nodeType":"314","messageId":"315","endLine":3,"endColumn":14},{"ruleId":"312","severity":1,"message":"355","line":5,"column":8,"nodeType":"314","messageId":"315","endLine":5,"endColumn":17},{"ruleId":"312","severity":1,"message":"356","line":6,"column":30,"nodeType":"314","messageId":"315","endLine":6,"endColumn":36},{"ruleId":"312","severity":1,"message":"338","line":9,"column":29,"nodeType":"314","messageId":"315","endLine":9,"endColumn":38},{"ruleId":"312","severity":1,"message":"357","line":17,"column":40,"nodeType":"314","messageId":"315","endLine":17,"endColumn":47},{"ruleId":"312","severity":1,"message":"348","line":18,"column":12,"nodeType":"314","messageId":"315","endLine":18,"endColumn":16},{"ruleId":"312","severity":1,"message":"349","line":18,"column":18,"nodeType":"314","messageId":"315","endLine":18,"endColumn":25},{"ruleId":"312","severity":1,"message":"358","line":78,"column":13,"nodeType":"314","messageId":"315","endLine":78,"endColumn":19},{"ruleId":"312","severity":1,"message":"359","line":79,"column":13,"nodeType":"314","messageId":"315","endLine":79,"endColumn":21},{"ruleId":"312","severity":1,"message":"354","line":4,"column":10,"nodeType":"314","messageId":"315","endLine":4,"endColumn":14},{"ruleId":"312","severity":1,"message":"356","line":7,"column":30,"nodeType":"314","messageId":"315","endLine":7,"endColumn":36},{"ruleId":"312","severity":1,"message":"360","line":14,"column":10,"nodeType":"314","messageId":"315","endLine":14,"endColumn":25},{"ruleId":"312","severity":1,"message":"361","line":34,"column":10,"nodeType":"314","messageId":"315","endLine":34,"endColumn":18},{"ruleId":"312","severity":1,"message":"362","line":35,"column":16,"nodeType":"314","messageId":"315","endLine":35,"endColumn":23},{"ruleId":"312","severity":1,"message":"363","line":52,"column":11,"nodeType":"314","messageId":"315","endLine":52,"endColumn":19},{"ruleId":"312","severity":1,"message":"364","line":65,"column":18,"nodeType":"314","messageId":"315","endLine":65,"endColumn":29},{"ruleId":"312","severity":1,"message":"365","line":100,"column":18,"nodeType":"314","messageId":"315","endLine":100,"endColumn":26},{"ruleId":"312","severity":1,"message":"366","line":133,"column":9,"nodeType":"314","messageId":"315","endLine":133,"endColumn":24},{"ruleId":"312","severity":1,"message":"367","line":209,"column":13,"nodeType":"314","messageId":"315","endLine":209,"endColumn":21},{"ruleId":"312","severity":1,"message":"368","line":226,"column":15,"nodeType":"314","messageId":"315","endLine":226,"endColumn":18},{"ruleId":"369","severity":1,"message":"370","line":249,"column":7,"nodeType":"371","messageId":"372","endLine":252,"endColumn":57},{"ruleId":"312","severity":1,"message":"373","line":249,"column":13,"nodeType":"314","messageId":"315","endLine":249,"endColumn":16},{"ruleId":"312","severity":1,"message":"374","line":250,"column":13,"nodeType":"314","messageId":"315","endLine":250,"endColumn":16},{"ruleId":"312","severity":1,"message":"375","line":251,"column":13,"nodeType":"314","messageId":"315","endLine":251,"endColumn":16},{"ruleId":"312","severity":1,"message":"376","line":252,"column":13,"nodeType":"314","messageId":"315","endLine":252,"endColumn":17},{"ruleId":"312","severity":1,"message":"377","line":264,"column":18,"nodeType":"314","messageId":"315","endLine":264,"endColumn":27},{"ruleId":"312","severity":1,"message":"378","line":286,"column":13,"nodeType":"314","messageId":"315","endLine":286,"endColumn":24},{"ruleId":"379","severity":1,"message":"380","line":304,"column":13,"nodeType":"381","messageId":"382","endLine":304,"endColumn":15},{"ruleId":"312","severity":1,"message":"330","line":1,"column":8,"nodeType":"314","messageId":"315","endLine":1,"endColumn":13},{"ruleId":"312","severity":1,"message":"383","line":2,"column":8,"nodeType":"314","messageId":"315","endLine":2,"endColumn":15},{"ruleId":"312","severity":1,"message":"384","line":11,"column":8,"nodeType":"314","messageId":"315","endLine":11,"endColumn":17},{"ruleId":"312","severity":1,"message":"385","line":13,"column":9,"nodeType":"314","messageId":"315","endLine":13,"endColumn":15},{"ruleId":"312","severity":1,"message":"386","line":25,"column":7,"nodeType":"314","messageId":"315","endLine":25,"endColumn":22},{"ruleId":"312","severity":1,"message":"387","line":28,"column":40,"nodeType":"314","messageId":"315","endLine":28,"endColumn":47},{"ruleId":"312","severity":1,"message":"357","line":28,"column":49,"nodeType":"314","messageId":"315","endLine":28,"endColumn":56},{"ruleId":"379","severity":1,"message":"380","line":118,"column":45,"nodeType":"381","messageId":"382","endLine":118,"endColumn":47},{"ruleId":"379","severity":1,"message":"380","line":118,"column":80,"nodeType":"381","messageId":"382","endLine":118,"endColumn":82},{"ruleId":"379","severity":1,"message":"380","line":128,"column":45,"nodeType":"381","messageId":"382","endLine":128,"endColumn":47},{"ruleId":"379","severity":1,"message":"380","line":128,"column":81,"nodeType":"381","messageId":"382","endLine":128,"endColumn":83},{"ruleId":"312","severity":1,"message":"388","line":142,"column":11,"nodeType":"314","messageId":"315","endLine":142,"endColumn":26},{"ruleId":"312","severity":1,"message":"358","line":168,"column":13,"nodeType":"314","messageId":"315","endLine":168,"endColumn":19},{"ruleId":"312","severity":1,"message":"359","line":169,"column":13,"nodeType":"314","messageId":"315","endLine":169,"endColumn":21},{"ruleId":"389","severity":1,"message":"390","line":218,"column":27,"nodeType":"391","messageId":"392","endLine":218,"endColumn":29},{"ruleId":"389","severity":1,"message":"390","line":243,"column":27,"nodeType":"391","messageId":"392","endLine":243,"endColumn":29},{"ruleId":"312","severity":1,"message":"359","line":270,"column":13,"nodeType":"314","messageId":"315","endLine":270,"endColumn":21},{"ruleId":"334","severity":1,"message":"393","line":298,"column":10,"nodeType":"336","endLine":298,"endColumn":12,"suggestions":"394"},{"ruleId":"312","severity":1,"message":"395","line":366,"column":9,"nodeType":"314","messageId":"315","endLine":366,"endColumn":16},{"ruleId":"312","severity":1,"message":"396","line":367,"column":29,"nodeType":"314","messageId":"315","endLine":367,"endColumn":36},{"ruleId":"312","severity":1,"message":"387","line":367,"column":38,"nodeType":"314","messageId":"315","endLine":367,"endColumn":45},{"ruleId":"312","severity":1,"message":"357","line":367,"column":47,"nodeType":"314","messageId":"315","endLine":367,"endColumn":54},{"ruleId":"312","severity":1,"message":"358","line":387,"column":9,"nodeType":"314","messageId":"315","endLine":387,"endColumn":15},{"ruleId":"312","severity":1,"message":"359","line":388,"column":9,"nodeType":"314","messageId":"315","endLine":388,"endColumn":17},{"ruleId":"312","severity":1,"message":"397","line":12,"column":10,"nodeType":"314","messageId":"315","endLine":12,"endColumn":18},{"ruleId":"312","severity":1,"message":"398","line":15,"column":12,"nodeType":"314","messageId":"315","endLine":15,"endColumn":33},{"ruleId":"312","severity":1,"message":"330","line":1,"column":8,"nodeType":"314","messageId":"315","endLine":1,"endColumn":13},{"ruleId":"312","severity":1,"message":"383","line":2,"column":8,"nodeType":"314","messageId":"315","endLine":2,"endColumn":15},{"ruleId":"312","severity":1,"message":"341","line":3,"column":8,"nodeType":"314","messageId":"315","endLine":3,"endColumn":19},{"ruleId":"312","severity":1,"message":"399","line":4,"column":8,"nodeType":"314","messageId":"315","endLine":4,"endColumn":21},{"ruleId":"312","severity":1,"message":"400","line":5,"column":8,"nodeType":"314","messageId":"315","endLine":5,"endColumn":21},{"ruleId":"312","severity":1,"message":"401","line":6,"column":8,"nodeType":"314","messageId":"315","endLine":6,"endColumn":25},{"ruleId":"312","severity":1,"message":"402","line":7,"column":8,"nodeType":"314","messageId":"315","endLine":7,"endColumn":14},{"ruleId":"312","severity":1,"message":"338","line":8,"column":29,"nodeType":"314","messageId":"315","endLine":8,"endColumn":38},{"ruleId":"312","severity":1,"message":"403","line":9,"column":8,"nodeType":"314","messageId":"315","endLine":9,"endColumn":18},{"ruleId":"312","severity":1,"message":"404","line":16,"column":10,"nodeType":"314","messageId":"315","endLine":16,"endColumn":15},{"ruleId":"312","severity":1,"message":"405","line":17,"column":8,"nodeType":"314","messageId":"315","endLine":17,"endColumn":16},{"ruleId":"312","severity":1,"message":"406","line":19,"column":8,"nodeType":"314","messageId":"315","endLine":19,"endColumn":18},{"ruleId":"312","severity":1,"message":"407","line":20,"column":8,"nodeType":"314","messageId":"315","endLine":20,"endColumn":21},{"ruleId":"312","severity":1,"message":"408","line":22,"column":8,"nodeType":"314","messageId":"315","endLine":22,"endColumn":14},{"ruleId":"312","severity":1,"message":"409","line":25,"column":8,"nodeType":"314","messageId":"315","endLine":25,"endColumn":17},{"ruleId":"312","severity":1,"message":"387","line":31,"column":40,"nodeType":"314","messageId":"315","endLine":31,"endColumn":47},{"ruleId":"312","severity":1,"message":"357","line":31,"column":49,"nodeType":"314","messageId":"315","endLine":31,"endColumn":56},{"ruleId":"312","severity":1,"message":"410","line":34,"column":11,"nodeType":"314","messageId":"315","endLine":34,"endColumn":16},{"ruleId":"312","severity":1,"message":"358","line":111,"column":13,"nodeType":"314","messageId":"315","endLine":111,"endColumn":19},{"ruleId":"389","severity":1,"message":"390","line":116,"column":34,"nodeType":"391","messageId":"392","endLine":116,"endColumn":36},{"ruleId":"334","severity":1,"message":"411","line":148,"column":10,"nodeType":"336","endLine":148,"endColumn":12,"suggestions":"412"},{"ruleId":"312","severity":1,"message":"413","line":2,"column":10,"nodeType":"314","messageId":"315","endLine":2,"endColumn":15},{"ruleId":"312","severity":1,"message":"414","line":1,"column":10,"nodeType":"314","messageId":"315","endLine":1,"endColumn":19},{"ruleId":"312","severity":1,"message":"415","line":3,"column":9,"nodeType":"314","messageId":"315","endLine":3,"endColumn":18},{"ruleId":"312","severity":1,"message":"326","line":4,"column":9,"nodeType":"314","messageId":"315","endLine":4,"endColumn":19},{"ruleId":"312","severity":1,"message":"416","line":4,"column":21,"nodeType":"314","messageId":"315","endLine":4,"endColumn":27},{"ruleId":"312","severity":1,"message":"417","line":4,"column":29,"nodeType":"314","messageId":"315","endLine":4,"endColumn":35},{"ruleId":"312","severity":1,"message":"418","line":4,"column":37,"nodeType":"314","messageId":"315","endLine":4,"endColumn":44},{"ruleId":"312","severity":1,"message":"342","line":4,"column":46,"nodeType":"314","messageId":"315","endLine":4,"endColumn":50},{"ruleId":"312","severity":1,"message":"344","line":4,"column":52,"nodeType":"314","messageId":"315","endLine":4,"endColumn":61},{"ruleId":"312","severity":1,"message":"345","line":4,"column":63,"nodeType":"314","messageId":"315","endLine":4,"endColumn":74},{"ruleId":"312","severity":1,"message":"346","line":4,"column":76,"nodeType":"314","messageId":"315","endLine":4,"endColumn":80},{"ruleId":"312","severity":1,"message":"347","line":4,"column":82,"nodeType":"314","messageId":"315","endLine":4,"endColumn":93},{"ruleId":"312","severity":1,"message":"419","line":4,"column":95,"nodeType":"314","messageId":"315","endLine":4,"endColumn":104},{"ruleId":"312","severity":1,"message":"338","line":4,"column":106,"nodeType":"314","messageId":"315","endLine":4,"endColumn":115},{"ruleId":"312","severity":1,"message":"420","line":5,"column":19,"nodeType":"314","messageId":"315","endLine":5,"endColumn":28},{"ruleId":"312","severity":1,"message":"421","line":1,"column":10,"nodeType":"314","messageId":"315","endLine":1,"endColumn":28},{"ruleId":"312","severity":1,"message":"383","line":2,"column":8,"nodeType":"314","messageId":"315","endLine":2,"endColumn":15},{"ruleId":"312","severity":1,"message":"338","line":8,"column":29,"nodeType":"314","messageId":"315","endLine":8,"endColumn":38},{"ruleId":"312","severity":1,"message":"346","line":8,"column":40,"nodeType":"314","messageId":"315","endLine":8,"endColumn":44},{"ruleId":"312","severity":1,"message":"330","line":9,"column":8,"nodeType":"314","messageId":"315","endLine":9,"endColumn":13},{"ruleId":"312","severity":1,"message":"422","line":10,"column":8,"nodeType":"314","messageId":"315","endLine":10,"endColumn":12},{"ruleId":"312","severity":1,"message":"385","line":11,"column":9,"nodeType":"314","messageId":"315","endLine":11,"endColumn":15},{"ruleId":"312","severity":1,"message":"405","line":14,"column":8,"nodeType":"314","messageId":"315","endLine":14,"endColumn":16},{"ruleId":"312","severity":1,"message":"408","line":15,"column":8,"nodeType":"314","messageId":"315","endLine":15,"endColumn":14},{"ruleId":"312","severity":1,"message":"395","line":22,"column":11,"nodeType":"314","messageId":"315","endLine":22,"endColumn":18},{"ruleId":"312","severity":1,"message":"423","line":24,"column":12,"nodeType":"314","messageId":"315","endLine":24,"endColumn":17},{"ruleId":"312","severity":1,"message":"424","line":24,"column":19,"nodeType":"314","messageId":"315","endLine":24,"endColumn":27},{"ruleId":"379","severity":1,"message":"380","line":39,"column":46,"nodeType":"381","messageId":"382","endLine":39,"endColumn":48},{"ruleId":"312","severity":1,"message":"358","line":50,"column":13,"nodeType":"314","messageId":"315","endLine":50,"endColumn":19},{"ruleId":"312","severity":1,"message":"359","line":51,"column":13,"nodeType":"314","messageId":"315","endLine":51,"endColumn":21},{"ruleId":"379","severity":1,"message":"425","line":76,"column":144,"nodeType":"381","messageId":"382","endLine":76,"endColumn":146},{"ruleId":"312","severity":1,"message":"421","line":1,"column":10,"nodeType":"314","messageId":"315","endLine":1,"endColumn":28},{"ruleId":"312","severity":1,"message":"383","line":2,"column":8,"nodeType":"314","messageId":"315","endLine":2,"endColumn":15},{"ruleId":"312","severity":1,"message":"401","line":6,"column":8,"nodeType":"314","messageId":"315","endLine":6,"endColumn":25},{"ruleId":"312","severity":1,"message":"426","line":9,"column":8,"nodeType":"314","messageId":"315","endLine":9,"endColumn":16},{"ruleId":"312","severity":1,"message":"326","line":10,"column":9,"nodeType":"314","messageId":"315","endLine":10,"endColumn":19},{"ruleId":"312","severity":1,"message":"346","line":10,"column":40,"nodeType":"314","messageId":"315","endLine":10,"endColumn":44},{"ruleId":"312","severity":1,"message":"330","line":11,"column":8,"nodeType":"314","messageId":"315","endLine":11,"endColumn":13},{"ruleId":"312","severity":1,"message":"420","line":14,"column":19,"nodeType":"314","messageId":"315","endLine":14,"endColumn":28},{"ruleId":"312","severity":1,"message":"408","line":16,"column":8,"nodeType":"314","messageId":"315","endLine":16,"endColumn":14},{"ruleId":"312","severity":1,"message":"409","line":18,"column":8,"nodeType":"314","messageId":"315","endLine":18,"endColumn":17},{"ruleId":"312","severity":1,"message":"427","line":35,"column":19,"nodeType":"314","messageId":"315","endLine":35,"endColumn":27},{"ruleId":"428","severity":1,"message":"429","line":52,"column":5,"nodeType":"430","messageId":"431","endLine":65,"endColumn":7},{"ruleId":"389","severity":1,"message":"390","line":52,"column":28,"nodeType":"391","messageId":"392","endLine":52,"endColumn":30},{"ruleId":"312","severity":1,"message":"367","line":67,"column":15,"nodeType":"314","messageId":"315","endLine":67,"endColumn":23},{"ruleId":"312","severity":1,"message":"355","line":3,"column":8,"nodeType":"314","messageId":"315","endLine":3,"endColumn":17},{"ruleId":"312","severity":1,"message":"420","line":4,"column":19,"nodeType":"314","messageId":"315","endLine":4,"endColumn":28},{"ruleId":"312","severity":1,"message":"356","line":4,"column":30,"nodeType":"314","messageId":"315","endLine":4,"endColumn":36},{"ruleId":"312","severity":1,"message":"326","line":7,"column":9,"nodeType":"314","messageId":"315","endLine":7,"endColumn":19},{"ruleId":"312","severity":1,"message":"416","line":7,"column":21,"nodeType":"314","messageId":"315","endLine":7,"endColumn":27},{"ruleId":"312","severity":1,"message":"338","line":7,"column":29,"nodeType":"314","messageId":"315","endLine":7,"endColumn":38},{"ruleId":"312","severity":1,"message":"346","line":7,"column":40,"nodeType":"314","messageId":"315","endLine":7,"endColumn":44},{"ruleId":"312","severity":1,"message":"341","line":8,"column":8,"nodeType":"314","messageId":"315","endLine":8,"endColumn":19},{"ruleId":"312","severity":1,"message":"432","line":13,"column":11,"nodeType":"314","messageId":"315","endLine":13,"endColumn":27},{"ruleId":"312","severity":1,"message":"396","line":13,"column":29,"nodeType":"314","messageId":"315","endLine":13,"endColumn":36},{"ruleId":"312","severity":1,"message":"348","line":15,"column":12,"nodeType":"314","messageId":"315","endLine":15,"endColumn":16},{"ruleId":"312","severity":1,"message":"349","line":15,"column":18,"nodeType":"314","messageId":"315","endLine":15,"endColumn":25},"no-native-reassign",["433"],"no-negated-in-lhs",["434"],"no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar","'Navbar' is defined but never used.","'Redirect' is defined but never used.","'withRouter' is defined but never used.","'useAuth' is defined but never used.","'useState' is defined but never used.","'Suspense' is defined but never used.","'loggerMiddleware' is assigned a value but never used.","'logo' is defined but never used.","'connect' is defined but never used.","'List' is defined but never used.","'Typography' is defined but never used.","'setErrors' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'accounts' is defined but never used.","'xtype' is defined but never used.","'uid' is assigned a value but never used.","'setUid' is assigned a value but never used.","'writeUserData' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'currentBCAccount'. Either include it or remove the dependency array. You can also do a functional update 'setCurrentBCAccount(c => ...)' if you only need 'currentBCAccount' in the 'setCurrentBCAccount' call.","ArrayExpression",["435"],"'TextField' is defined but never used.","'setTitle' is assigned a value but never used.","'QRCode' is defined but never used.","'DialogTitle' is defined but never used.","'Card' is defined but never used.","'CircularProgress' is defined but never used.","'Container' is defined but never used.","'CardActions' is defined but never used.","'Grid' is defined but never used.","'CardContent' is defined but never used.","'text' is assigned a value but never used.","'setText' is assigned a value but never used.","'imageUrl' is assigned a value but never used.","'setImageUrl' is assigned a value but never used.","'scanResultFile' is assigned a value but never used.","'scanResultWebCam' is assigned a value but never used.","'Link' is defined but never used.","'QRscanner' is defined but never used.","'useRef' is defined but never used.","'balance' is assigned a value but never used.","'result' is defined but never used.","'newPosts' is assigned a value but never used.","'ScannerOutlined' is defined but never used.","'scanDeal' is assigned a value but never used.","'setDeal' is assigned a value but never used.","'accounts' is assigned a value but never used.","'setGreeting' is defined but never used.","'register' is defined but never used.","'handleCloseDeal' is assigned a value but never used.","'response' is assigned a value but never used.","'err' is assigned a value but never used.","no-unreachable","Unreachable code.","VariableDeclaration","unreachableCode","'pr1' is assigned a value but never used.","'pr2' is assigned a value but never used.","'pr3' is assigned a value but never used.","'data' is assigned a value but never used.","'sendCoins' is defined but never used.","'transaction' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'AddPost' is defined but never used.","'XContract' is defined but never used.","'ethers' is defined but never used.","'contractAddress' is assigned a value but never used.","'loading' is assigned a value but never used.","'handleClickLoad' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'reload'. Either include it or remove the dependency array.",["436"],"'classes' is assigned a value but never used.","'keypair' is assigned a value but never used.","'numPages' is assigned a value but never used.","'onDocumentLoadSuccess' is defined but never used.","'DialogActions' is defined but never used.","'DialogContent' is defined but never used.","'DialogContentText' is defined but never used.","'Dialog' is defined but never used.","'IconButton' is defined but never used.","'green' is defined but never used.","'SendIcon' is defined but never used.","'DealDialog' is defined but never used.","'NewPostDialog' is defined but never used.","'Avatar' is defined but never used.","'PropTypes' is defined but never used.","'State' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadMessages'. Either include it or remove the dependency array.",["437"],"'Block' is defined but never used.","'Component' is defined but never used.","'useStyles' is defined but never used.","'Button' is defined but never used.","'AppBar' is defined but never used.","'Spinner' is defined but never used.","'CardMedia' is defined but never used.","'useEffect' is defined but never used.","'bindActionCreators' is defined but never used.","'text' is defined but never used.","'offer' is assigned a value but never used.","'setOffer' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'ListItem' is defined but never used.","'setDense' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'currentBCAccount' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"438","fix":"439"},{"desc":"440","fix":"441"},{"desc":"442","fix":"443"},"Update the dependencies array to be: [currentBCAccount]",{"range":"444","text":"445"},"Update the dependencies array to be: [reload]",{"range":"446","text":"447"},"Update the dependencies array to be: [loadMessages]",{"range":"448","text":"449"},[3244,3246],"[currentBCAccount]",[8817,8819],"[reload]",[4950,4952],"[loadMessages]"]