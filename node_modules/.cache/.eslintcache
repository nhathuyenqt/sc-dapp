[{"/Users/kzjouf/Desktop/project/scdapp/src/index.js":"1","/Users/kzjouf/Desktop/project/scdapp/src/App.js":"2","/Users/kzjouf/Desktop/project/scdapp/src/reportWebVitals.js":"3","/Users/kzjouf/Desktop/project/scdapp/src/store/store.js":"4","/Users/kzjouf/Desktop/project/scdapp/src/pages/Header.js":"5","/Users/kzjouf/Desktop/project/scdapp/src/pages/Main.js":"6","/Users/kzjouf/Desktop/project/scdapp/src/pages/Login.js":"7","/Users/kzjouf/Desktop/project/scdapp/src/components/Navbar.js":"8","/Users/kzjouf/Desktop/project/scdapp/src/components/PrivateRoute.js":"9","/Users/kzjouf/Desktop/project/scdapp/src/helper/AuthContext.js":"10","/Users/kzjouf/Desktop/project/scdapp/src/store/reducers/AuthReducer.js":"11","/Users/kzjouf/Desktop/project/scdapp/src/store/reducers/PostsReducer.js":"12","/Users/kzjouf/Desktop/project/scdapp/src/pages/Home.js":"13","/Users/kzjouf/Desktop/project/scdapp/src/pages/Posts.js":"14","/Users/kzjouf/Desktop/project/scdapp/src/pages/Reports.js":"15","/Users/kzjouf/Desktop/project/scdapp/src/pages/AdminPage.js":"16","/Users/kzjouf/Desktop/project/scdapp/src/pages/History.js":"17","/Users/kzjouf/Desktop/project/scdapp/src/components/SidebarData.js":"18","/Users/kzjouf/Desktop/project/scdapp/src/helper/Firebase.js":"19","/Users/kzjouf/Desktop/project/scdapp/src/store/actions/PostTypes.js":"20","/Users/kzjouf/Desktop/project/scdapp/src/store/actions/AuthActions.js":"21","/Users/kzjouf/Desktop/project/scdapp/src/pages/Styles.js":"22","/Users/kzjouf/Desktop/project/scdapp/src/components/AddPost.js":"23","/Users/kzjouf/Desktop/project/scdapp/src/firebase.js":"24","/Users/kzjouf/Desktop/project/scdapp/src/services/AuthService.js":"25"},{"size":722,"mtime":1628014916000,"results":"26","hashOfConfig":"27"},{"size":985,"mtime":1628590370331,"results":"28","hashOfConfig":"27"},{"size":362,"mtime":1628014916000,"results":"29","hashOfConfig":"27"},{"size":1055,"mtime":1628014917000,"results":"30","hashOfConfig":"27"},{"size":1885,"mtime":1628014917000,"results":"31","hashOfConfig":"27"},{"size":1458,"mtime":1628608973123,"results":"32","hashOfConfig":"27"},{"size":2292,"mtime":1628508742005,"results":"33","hashOfConfig":"27"},{"size":2466,"mtime":1628014917000,"results":"34","hashOfConfig":"27"},{"size":413,"mtime":1628374928250,"results":"35","hashOfConfig":"27"},{"size":3638,"mtime":1628541207107,"results":"36","hashOfConfig":"27"},{"size":1793,"mtime":1628014918000,"results":"37","hashOfConfig":"27"},{"size":1666,"mtime":1628014918000,"results":"38","hashOfConfig":"27"},{"size":13340,"mtime":1628540992888,"results":"39","hashOfConfig":"27"},{"size":6712,"mtime":1628613999933,"results":"40","hashOfConfig":"27"},{"size":995,"mtime":1628014917000,"results":"41","hashOfConfig":"27"},{"size":7942,"mtime":1628014917000,"results":"42","hashOfConfig":"27"},{"size":176,"mtime":1628014917000,"results":"43","hashOfConfig":"27"},{"size":958,"mtime":1628014917000,"results":"44","hashOfConfig":"27"},{"size":563,"mtime":1628014917000,"results":"45","hashOfConfig":"27"},{"size":503,"mtime":1628014918000,"results":"46","hashOfConfig":"27"},{"size":2744,"mtime":1628014918000,"results":"47","hashOfConfig":"27"},{"size":1412,"mtime":1628541049645,"results":"48","hashOfConfig":"27"},{"size":2182,"mtime":1628014917000,"results":"49","hashOfConfig":"27"},{"size":1,"mtime":1628014916000,"results":"50","hashOfConfig":"27"},{"size":2173,"mtime":1628014917000,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"suua8u",{"filePath":"55","messages":"56","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"54"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"54"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"54"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"/Users/kzjouf/Desktop/project/scdapp/src/index.js",[],["115","116"],"/Users/kzjouf/Desktop/project/scdapp/src/App.js",["117","118","119","120","121","122","123"],"// import logo from './logo.svg';\nimport './App.css';\nimport Header from './pages/Header';\nimport Navbar from './components/Navbar';\nimport { BrowserRouter as Router, Switch, Route, Redirect, withRouter } from 'react-router-dom';\nimport { AuthProvider, useAuth } from \"./helper/AuthContext\"\nimport PrivateRoute from \"./components/PrivateRoute\"\nimport Login from './pages/Login';\nimport Main from './pages/Main';\nimport { useState, useEffect, Suspense} from 'react';\nimport './pages/Login.css';\n\n\nfunction App(props) {\n  // const dispatch = useDispatch();\n  // const { currentUser } = useAuth()\n  useEffect(() => {\n\n      // checkAutoLogin(dispatch, props.history);\n  }, []);\n\n\n  return (\n          <Router>\n            <AuthProvider>\n              <Switch>\n                <Route path='/login' exact component={Login} /> \n                <PrivateRoute exact path=\"/\" component={Main} />\n              </Switch> \n            </AuthProvider>\n          </Router>\n  );\n}\nexport default App","/Users/kzjouf/Desktop/project/scdapp/src/reportWebVitals.js",[],"/Users/kzjouf/Desktop/project/scdapp/src/store/store.js",["124"],"import {\n    applyMiddleware,\n    combineReducers,\n    compose,\n    createStore,\n} from 'redux';\nimport PostsReducer from './reducers/PostsReducer';\nimport thunk from 'redux-thunk';\nimport { AuthReducer } from './reducers/AuthReducer';\n\nconst loggerMiddleware = (store) => (next) => (action) => {\n    console.log('dispatching action', action);\n    console.log('before dispatching state', store.getState());\n    let result = next(action);\n    setTimeout(() => {\n        console.log('dispatch time out');\n    }, 5000);\n    console.log('next state', store.getState());\n    return result;\n};\n\n// const fetchDataMiddleware = (store) => (next) => (action) => {\n//     if (action.type === GET_POSTS) {\n//         //ajax call\n//     }\n\n//     return next(action);\n// };\n\nconst middleware = applyMiddleware(thunk);\n\nconst composeEnhancers =\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst reducers = combineReducers({\n    posts: PostsReducer,\n    auth: AuthReducer,\n});\n\nexport const store = createStore(reducers, composeEnhancers(middleware));\n","/Users/kzjouf/Desktop/project/scdapp/src/pages/Header.js",[],"/Users/kzjouf/Desktop/project/scdapp/src/pages/Main.js",["125"],"import React from 'react';\nimport Navbar from '../components/Navbar';\nimport PrivateRoute from '../components/PrivateRoute';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport Home from './Home';\nimport Posts from './Posts';\nimport History from './History';\nimport Reports from './Reports';\nimport GroupList from './AdminPage';\n\n\nfunction Main(){\n    // if ( !authorized){\n    //     return <Redirect to=\"/login\"/>;\n    // }\n    return (\n        \n        // <header className=\"App-header\">\n        //       <button onClick={fetchGreeting}> Fetch Greeting </button> \n        //       <button onClick={setGreeting}> Set Greeting </button>\n    \n        //       <input \n        //         onChange={e => setGreetingValue(e.target.value)} \n        //         placeholder=\"Set greeting\"\n        //         value={greeting}\n        //       /> \n              \n        //     </header> \n         <Router>\n            <Navbar />\n              <Switch>\n                <PrivateRoute path='/' exact component={Home} />\n                <PrivateRoute path='/posts' exact component={Posts} />\n                <Route path='/history' component={History} />\n                <Route path='/reports' component={Reports} />\n                <Route path='/admin' component={GroupList} />\n                {/* <Route path='/products' component={Products} /> */}\n              </Switch> \n           </Router>\n\n      );\n}\n\nexport default Main;","/Users/kzjouf/Desktop/project/scdapp/src/pages/Login.js",["126","127","128","129","130"],"import React from 'react';\nimport logo from './logo.svg';\n// import {ReactComponet as Logo} \nimport { connect, useDispatch } from 'react-redux';\n\nimport { useAuth } from \"../helper/AuthContext\"\nimport { useState } from 'react';\nimport {useHistory} from 'react-router-dom';\nimport {Typography, Button} from '@material-ui/core'\nimport './Login.css';\n\nfunction Login(props) {\n    \n    const [errorsObj, setErrorObj]= useState('');\n    const [errors, setErrors] = useState(errorsObj);\n    const [infoUser, setInfoUser] = useState({email:\"test1@gmail.com\", address:\"\", password:\"123456\"})\n    const dispatch = useDispatch();\n    \n    const {login, loading} = useAuth()\n    let history = useHistory()\n\n    async function handleLogin() {\n        if (infoUser.email === '') {\n            setErrorObj('Email is Required');\n        }else{\n            if (infoUser.password === '') {\n                setErrorObj('Password is Required');\n            }else{\n                try {\n                    await login(infoUser.email, infoUser.password)\n                    if (loading === false)\n                        history.push(\"/\")\n                } catch {\n                    setErrorObj(\"Failed to log out\");\n                }\n            }\n\n        }\n    }\n    \n\n    return(\n        \n        <form >\n            <div className =\"form-inner\">\n                <h2> Login</h2>\n                {(errors === false) ? (<div className=\"error\">{errorsObj}</div>):\"\"}           \n                    <div className=\"form-group\">\n                        <label htmlFor=\"name\">Email:</label>\n                        <input type=\"text\" name=\"email\" id=\"email\" onChange={e => setInfoUser({...infoUser, email:e.target.value})} value = {infoUser.email}></input>\n\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"name\">Password:</label>\n                        <input type=\"text\" name=\"password\" id=\"password\" onChange={e => setInfoUser({...infoUser, password:e.target.value})} value = {infoUser.password}></input>\n                    </div>\n                    \n                    <Button variant=\"outlined\" size =\"small\" color=\"primary\" onClick={handleLogin} >LOGIN</Button>\n            </div>\n        </form>\n\n    )\n    \n}\n\n\nexport default Login;\n","/Users/kzjouf/Desktop/project/scdapp/src/components/Navbar.js",["131","132","133"],"import React, { useState } from 'react';\nimport * as FaIcons from 'react-icons/fa';\nimport * as AiIcons from 'react-icons/ai';\nimport { Link } from 'react-router-dom';\nimport { SidebarData } from './SidebarData';\nimport './Navbar.css';\nimport { useHistory } from 'react-router-dom';\nimport { IconContext } from 'react-icons';\nimport {Typography, Button,  TextField} from '@material-ui/core'\nimport { makeStyles } from \"@material-ui/core\";\nimport { useAuth } from \"../helper/AuthContext\"\n\nconst style = makeStyles({\n  button: {\n    color: \"white\",\n    backgroundColor: '#060b26',\n    // top: \"50%\",\n    // height: 30,\n    // float: \"right\",\n    // position: \"relative\",\n    // transform: \"translateY(-50%)\"\n  }\n});\n\nfunction Navbar() {\n\n  const [sidebar, setSidebar] = useState(false);\n\n  const showSidebar = () => setSidebar(!sidebar);\n  const classes = style();\n  const [title, setTitle] = useState(\"Main\");\n\n  const {logout} = useAuth()\n  let history = useHistory()\n  async function handleLogout() {\n    // setError(\"\")\n\n    try {\n      await logout()\n      history.push(\"/login\")\n    } catch {\n      // setError(\"Failed to log out\")\n    }\n  }\n  \n  return (\n    <>\n      <IconContext.Provider value={{ color: '#666' }}>\n        <div style={{display: 'flex', \"align-items\":'center', backgroundColor: '#060b26'}}>\n          <div className='navbar'>\n           \n            <Link to='#' className='menu-bars'>\n              <FaIcons.FaBars onClick={showSidebar}  />\n              \n            </Link>\n\n          </div>\n          \n          <Button width= '200px' size =\"small\" color='primary' className={classes.button} onClick={handleLogout} >LOG OUT</Button>\n\n        </div>\n        <nav className={sidebar ? 'nav-menu active' : 'nav-menu'}>\n          <ul className='nav-menu-items' onClick={showSidebar}>\n            <li className='navbar-toggle'>\n              <Link to='#' className='menu-bars'>\n                <AiIcons.AiOutlineClose />\n              </Link>\n              <h1 style={{float: 'right'}} >{title}</h1> \n            </li>\n            {SidebarData.map((item, index) => {\n              return (\n                <li key={index} className={item.cName}>\n                  <Link to={item.path}>\n                    {item.icon}\n                    <span>{item.title}</span>\n                  </Link>\n                </li>\n              );\n            })}\n          </ul>\n        </nav>\n      </IconContext.Provider>\n    </>\n  );\n}\n\nexport default Navbar;","/Users/kzjouf/Desktop/project/scdapp/src/components/PrivateRoute.js",[],"/Users/kzjouf/Desktop/project/scdapp/src/helper/AuthContext.js",["134","135","136","137","138","139"],"import React, { useContext, useState, useEffect } from \"react\"\nimport { auth, db } from \"./Firebase\"\nimport accounts from './accounts.json'\nimport xtype from 'xtypejs'\n\nconst AuthContext = React.createContext()\n\nexport function useAuth() {\n  return useContext(AuthContext)\n}\n\nexport function AuthProvider({ children }) {\n  const [currentUser, setCurrentUser] = useState()\n  const [currentBCAccount, setCurrentBCAccount] = useState({address:'', privateKey:''})\n  const [loading, setLoading] = useState(true)\n  const [currentPass, setCurrentPass] = useState('')\n  const [keypair, setKeypair] = useState({x:'', y:''})\n  const [uid, setUid] = useState('')\n  const [balance, setBalance] = useState({CL:'', CR:'', b:''})\n\n//   function signup(email, password) {\n//     return auth.createUserWithEmailAndPassword(email, password)\n//   }\n\n  function login(email, password) {\n    setLoading(true);\n    setCurrentPass(password)\n    // setCurrentAddress({...currentAddress, address: address});\n    auth.signInWithEmailAndPassword(email, password)\n\n  }\n\n  function logout() {\n    return auth.signOut()\n  }\n\n  async function getKey(uid, address){\n    const response = await fetch(\"/fetchKey\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        'uid' : uid,\n        'address' :address\n      }),\n    })\n\n    let result\n    await response.json().then((message) => {\n      result = message[\"data\"];\n      // const y_value = result.y;\n      // const x_value = result.x;\n      setKeypair(result);\n      setBalance(message['balance'])\n      // setSignKey(message['privateKey']);\n      setCurrentBCAccount({address: address, privateKey:message['privateKey']});\n    });\n  }\n\n  function writeUserData(userId, name, email, imageUrl) {\n    db.ref('users/' + userId).set({\n      username: name,\n      email: email,\n      profile_picture : imageUrl\n    });\n  }\n\n//   function resetPassword(email) {\n//     return auth.sendPasswordResetEmail(email)\n//   }\n\n//   function updateEmail(email) {\n//     return currentUser.updateEmail(email)\n//   }\n\n//   function updatePassword(password) {\n//     return currentUser.updatePassword(password)\n//   }\n\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(user => {\n      setLoading(true);\n      setCurrentUser(user)\n      if (user){\n        const docRef = db.collection(\"users\").doc(user.uid);\n        docRef.get().then((doc) => {\n        if (doc.exists) {\n            const addr = doc.data().address;\n            setCurrentBCAccount({...currentBCAccount, address:addr});\n            // setSignKey()\n            getKey(user.uid, addr);\n        }else {\n            // doc.data() will be undefined in this case\n            console.log(\"No such document!\");\n            setCurrentBCAccount({address:'', privateKey:''})\n            setKeypair({x:'', y:''})\n            setCurrentPass('')\n            setBalance({CL:'', CR:'', b:''})\n            //getPubkey\n\n          }\n          }).catch((error) => {\n            console.log(\"Error getting document:\", error);\n            \n            });\n      }else{\n        setCurrentBCAccount({address:'', privateKey:''})\n        setKeypair({x:'', y:''})\n        setBalance({CL:'', CR:'', b:''})\n      }\n      setLoading(false)\n    })\n\n      return unsubscribe\n    }, [])\n\n  const value = {\n    currentUser,\n    currentBCAccount,\n    currentPass,\n    keypair,\n    login,\n    loading,\n    balance,\n    // signup,\n    logout,\n    // resetPassword,\n    // updateEmail,\n    // updatePassword\n  }\n\n  return (\n    <AuthContext.Provider value={value}>\n      {!loading && children}\n    </AuthContext.Provider>\n  )\n}\n","/Users/kzjouf/Desktop/project/scdapp/src/store/reducers/AuthReducer.js",[],"/Users/kzjouf/Desktop/project/scdapp/src/store/reducers/PostsReducer.js",[],"/Users/kzjouf/Desktop/project/scdapp/src/pages/Home.js",["140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155"],"import React from 'react';\n\nimport {Typography, Button, Card,  CircularProgress, Container, CardActions, Grid, CardContent, TextField} from '@material-ui/core'\nimport QRCode from \"react-qr-code\";\nimport  useStyles  from './Styles.js';\n\nimport {useState, useEffect} from 'react'\nimport {ethers} from 'ethers'\nimport xtype from 'xtypejs'\nimport text  from './../contract_address.json';\nimport { useAuth } from \"../helper/AuthContext\"\n\nimport Switch from '@material-ui/core/Switch';\nimport XContract from './../artifacts/contracts/XContract.sol/XContract.json'\n\n\nconst contractAddress = text['contract_address']\n\nfunction Home(props) {\n  // const history = useHistory();\n\n\n  const { currentBCAccount, keypair, loading, balance} = useAuth()\n\n  const classes = useStyles()\n\n  const [greeting, setGreetingValue] = useState('')\n  const [amount, setAmount] = useState()\n  const [recipient, setTo] = useState()\n  const [post, setPost] = useState(\"\")\n  const [balanceView, setBalanceView] = useState(true);\n\n\n  // useEffect(() => {\n  //   requestAccount()\n  // });\n  if (window.ethereum){\n    window.ethereum.on('accountsChanged', function(accounts){\n \n\n    })\n  }\n\n  // async function updateStateEventListener(callback) {\n  //   await requestAccount()\n  //   const provider = new ethers.providers.Web3Provider(window.ethereum);\n  //   const signer = provider.getSigner();\n  //   const contract = new ethers.Contract(contractAddress, XContract.abi, signer)\n  //   const updateStateEvent = contract.UpdateState()\n  //   return updateStateEvent.watch(callback)\n  // }\n\n  async function requestAccount(){\n    const accounts = await window.ethereum.request({method : 'eth_requestAccounts'})\n  }\n\n\n\n  // const generateQrCode = async() => {\n  //   try{\n  //     const response = await QRCode.toDataURL('')\n  //   }catch(error){\n  //     console.log(error)\n  //   }\n  // }\n  \n  async function setGreeting(){\n    if (!greeting) return\n    if (typeof window.ethereum !== 'undefined'){\n      await requestAccount()\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(contractAddress, XContract.abi, signer)\n      const transaction = await contract.setGreeting(greeting)\n      await transaction.wait()\n\n      contract.on(\"TestMsg\", (msg) => {\n        console.log('Msg : ', msg);\n      });\n\n      fetchGreeting()\n    }\n  }\n\n  \n  async function fetchGreeting(){\n    if (typeof window.ethereum !== 'undefined'){\n      const provider = new ethers.providers.Web3Provider(window.ethereum)\n      const contract = new ethers.Contract(contractAddress, XContract.abi, provider)\n      try{\n        const data = await contract.greet()\n        setGreetingValue(data)\n        console.log('data: ', data)\n      } catch(err){\n        console.log(\"Error: \", err)\n      }\n    }\n  }\n\n \n\n  async function register(){\n    // setLoading(true)\n    if (typeof window.ethereum !== 'undefined'){\n      // await requestAccount()\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      console.log(\"signer \", signer)\n      // const contract = new ethers.Contract(contractAddress, XContract.abi, signer)\n      // const transaction = await contract.register()\n      // var accounts = await provider.getAccounts();\n      // console.log(accounts[0])\n      // await transaction.wait()\n      // let a = '0'\n      // signer.getAddress().then((address) => {\n      //   a = address\n      // });\n      // let b = provider.getBalance(a)\n      // setAddress(a)\n      \n      // getBalance()\n      // setLoading(false)\n      // \n    }\n  }\n\n  async function genProof() {\n    const response = await fetch(\"/genProof\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        amt: amount,\n      }),\n    })\n    let result\n    await response.json().then((message) => {\n      result = JSON.stringify(message[\"data\"]);\n     \n      console.log(result) \n    });\n    return result\n  }\n\n  async function getElBalance(){\n\n      const response = await fetch(\"/getElBalance\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          'x' : keypair.x,\n          'y' : keypair.y,\n          'user_key':currentBCAccount.privateKey\n        }),\n      })\n      // setLoading(false)\n      // const provider = new ethers.providers.Web3Provider(window.ethereum)\n      // const contract = new ethers.Contract(contractAddress, XContract.abi, provider)\n      // const signer =  provider.getSigner()\n      // const [account] = await window.ethereum.request({method: 'eth_requestAccounts'})\n      // const acc = signer.getAddress()\n      // const b = await contract.ElBalanceOf(y)\n      // console.log('address: ', acc)\n      // console.log('balance: ', b.toString())\n      // setBalance(b.toString())\n      // setLoading(false)\n    \n  }\n\n  async function genConfProof() {\n\n      const response = await fetch(\"/genConfProof\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          'privateKey': currentBCAccount.privateKey,\n          'user_address': currentBCAccount.address,\n          'y_sender': keypair.y,\n          'y_recipient': recipient,\n          'amt':amount,\n          'b_after':197,\n          'x_sender': keypair.x\n        }),\n      })\n      // setLoading(false)\n      let result\n      await response.json().then((message) => {\n        result = message\n      });\n      return result\n  }\n  async function newPost() {\n\n      const response = await fetch(\"/newPost\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          'privateKey': currentBCAccount.privateKey,\n          'pubkey' : keypair.y,\n          'content':post\n        }),\n      })\n\n  }\n\n  async function confTransfer() {\n\n    let messageProof = await genConfProof();\n      console.log(messageProof);\n      if (messageProof['code'] !== 200){\n        const err = messageProof['err']\n        return 0\n\n    // if (typeof window.ethereum !== \"undefined\") {\n    //   await requestAccount();\n    //   const provider = new ethers.providers.Web3Provider(window.ethereum);\n    //   const signer = provider.getSigner();\n    //   const contract = new ethers.Contract(\n    //     contractAddress,\n    //     XContract.abi,\n    //     signer\n    //   );\n    //   // function sendPrivateToken(function() {\n    //   //   console.log('huzzah, I\\'m done!');\n    //   // });\n    //   let messageProof = await genConfProof();\n    //   console.log(messageProof);\n    //   if (messageProof['code'] != 200){\n    //     const err = messageProof['err']\n    //     setNoti(err);\n    //     return 0\n    //   }\n  \n      const pr1 = JSON.stringify(messageProof['rangeProofForAmt'])\n      const pr2 = JSON.stringify(messageProof['rangeProofForRemainBalance'])\n      const pr3 = JSON.stringify(messageProof['sigmaProtocol'])\n      const data = JSON.stringify(messageProof['input'])\n      // let msg2 = JSON.stringify(messageProof)\n      // console.log(msg2)\n      // // msg2 =  \"hello\"ßßßßßßßßß\n      // const transaction = await contract.confTransfer(pr1, pr2, pr3, data);\n      // \n\n      \n    }\n  }\n  \n  async function sendCoins(){\n    var messageProof\n    if (typeof window.ethereum !== 'undefined'){\n\n      fetch(\"/genProof\",\n        {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({\n                amt: amount\n            }),\n        }).then((response) => response.json())\n        .then((message) => {\n          messageProof = JSON.stringify(message['data'])\n          console.log(messageProof)\n          console.log(\"Check type of Proof: \", xtype(messageProof))\n        });\n     \n      await requestAccount()\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(contractAddress, XContract.abi, signer)\n      const transaction = await contract.transfer(recipient, amount)\n      // const transaction = await contract.privateTransfer(messageProof)\n      \n      // await transaction.wait()\n      \n      contract.on(\"UpdateState\", (add, newBal) => {\n   \n          console.log(\"sender \", add)\n          console.log(\"new Balance \", newBal.toString())\n          \n       \n      });\n    }\n  }\n\n  return (\n    loading == true ? (<CircularProgress size={24} className={classes.buttonProgress} />) : (\n    <div className='home'>\n      <Typography align='center' variant = \"h4\"> Master Internship </Typography>\n      <h1 align='center'>Home</h1>\n      <Container maxwidth = \"sm\" className = {classes.cardGrid}> \n        <Grid container spacing ={4}>\n          <Grid item> \n            <Card className ={classes.card} maxwidth = \"md\">\n              {/* <CardMedia \n                className ={classes.cardMedia}\n                  image =\"https://source.unsplash.com/random\"\n                  title=\"Image title\" /> */}\n\n              <CardContent className = {classes.cardContent}>\n                <Typography gutterBottom variant = \"h5\"> Account </Typography>\n                \n                {/* <Dimmer active inverted>\n                  <Loader>Loading</Loader>\n                </Dimmer> */}\n                \n                <div style={{display: 'flex'}}>\n                  <QRCode value={keypair.y} size={110}/>\n                  <div>\n                    <Typography style={{display: 'flex', marginLeft: '10px'}} gutterBottom variant = \"subtitle2\"> {currentBCAccount.address} </Typography>\n                    <Typography style={{display: 'flex', marginLeft: '10px'}} gutterBottom variant = \"subtitle2\"> {keypair.y} </Typography> \n                  </div>\n\n                </div>\n                {/* <input \n                  onChange={e => setGreetingValue(e.target.value)} \n                  placeholder=\"Set greeting\"\n                  value = {greeting}\n                /> */}\n    \n              </CardContent>\n              <CardActions>\n               \n\n                \n                \n              </CardActions>\n            </Card>\n          </Grid>\n          <Grid item>\n              <Card className ={classes.card} maxwidth = \"md\">\n            {/* <CardMedia \n              className ={classes.cardMedia}\n                image =\"https://source.unsplash.com/random\"\n                title=\"Image title\" /> */}\n\n            <CardContent className = {classes.cardContent}>\n              <Typography gutterBottom variant = \"h5\"> Balance </Typography>\n              <div style={{display: 'flex'}}>\n                <Grid container align-items=\"center\" spacing={2}>\n                  <Grid item>Raw</Grid>\n                  <Grid item >\n                    <Switch\n                   \n                          checked={balanceView}\n                          onChange={e => setBalanceView(e.target.checked)}\n                          name=\"checkedA\"\n                          inputProps={{ 'aria-label': 'secondary checkbox' }}           />\n                  </Grid>\n                  <Grid item>Encrypted</Grid>\n                </Grid>\n              </div>\n              {balanceView ?\n              (<Typography variant = \"subtitle2\" gutterBottom>({balance.CL},{balance.CR}) </Typography>):\n              (<Typography variant = \"subtitle2\" gutterBottom> {balance.b} </Typography>)}\n              <TextField onChange={e => setTo(e.target.value)} placeholder=\"Recipient Public Key\" \n                    variant='outlined'\n                    fullWidth\n                    color =\"secondary\"\n                    // defaultValue = {recipient}\n                    className={classes.field}/>\n              <TextField onChange={e => setAmount(e.target.value)} placeholder=\"Amount\" variant='outlined'\n                  fullWidth\n                  color =\"secondary\"\n                  className={classes.field}\n                  defaultValue = {1}\n                /> \n            </CardContent>\n            <CardActions>\n              <Button size =\"small\" color=\"primary\" onClick={getElBalance} >Get El Balance</Button>\n              <Button size =\"small\" color=\"primary\" onClick={confTransfer} >Conf Transfer</Button>\n            </CardActions>\n          </Card>\n          </Grid>\n          <Grid item>\n              <Card className ={classes.card} maxwidth = \"md\">\n            {/* <CardMedia \n              className ={classes.cardMedia}\n                image =\"https://source.unsplash.com/random\"\n                title=\"Image title\" /> */}\n\n            <CardContent className = {classes.cardContent}>\n              <Typography gutterBottom variant = \"h5\"> New post </Typography>\n         \n        \n              <TextField onChange={e => setPost(e.target.value)} placeholder=\"Task\" variant='outlined'\n                  fullWidth\n                  color =\"secondary\"\n                  className={classes.field}\n                  defaultValue = {post}\n                /> \n            </CardContent>\n            <CardActions>\n              <Button size =\"small\" color=\"primary\" onClick={newPost} >Post new task</Button>\n            </CardActions>\n          </Card>\n          </Grid>\n        </Grid>\n      </Container>\n    </div>)\n  );\n}\n\nexport default Home;","/Users/kzjouf/Desktop/project/scdapp/src/pages/Posts.js",["156","157","158","159","160","161","162","163","164","165","166"],"import { bindActionCreators } from 'redux';\nimport AddPost from '../components/AddPost';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport Dialog from '@material-ui/core/Dialog';\nimport {Typography, Button, TextField} from '@material-ui/core'\nimport IconButton from '@material-ui/core/IconButton';\nimport { DataGrid } from '@material-ui/data-grid';\nimport XContract from './../artifacts/contracts/XContract.sol/XContract.json'\nimport text  from './../contract_address.json';\nimport {ethers} from 'ethers'\nimport {useState, useEffect} from 'react'\nimport { makeStyles } from '@material-ui/styles';\nimport SendIcon from '@material-ui/icons/Send';\nimport Avatar from '@material-ui/core/Avatar';\n// import EditPost from '../../pages2/EditPost/EditPost';\nimport PropTypes from 'prop-types';\nimport { useAuth } from \"../helper/AuthContext\"\n// import SinglePost from '../../pages2/SinglePost/SinglePost';\nconst contractAddress = text['contract_address']\n\nfunction Posts (props) {\n    \n    const [postList, setPostList] = useState([])\n    const [open, setOpen] = useState(false);\n    const [selectedItem, setSelectedItem] = useState({id:'', description: '', pubkey:''});\n    const [content, setContent] = useState();\n    const classes = useStyles();\n    const columns = [\n      { field: 'id', headerName: 'ID', width: 68, headerClassName: 'super-app-theme--header'},\n      {\n        field: 'title',\n        headerName: 'Title',\n        width: 150,\n        headerClassName: 'super-app-theme--header'\n      },\n      {\n        field: 'description',\n        headerName: 'Description',\n        headerClassName: 'super-app-theme--header',\n        flex: 1\n      },\n      // {\n      //     field: 'id',\n      //     headerName: 'id',\n      //     type: 'number',\n      //     width: 50,\n      //     editable: true,\n      //   }\n      {\n        field: 'action',\n        headerName: 'Action', headerClassName: 'super-app-theme--header',\n        width: 150,\n        renderCell: (params) => (\n          <strong>\n\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              size=\"small\"\n              onClick={() => handleClickOpen(params)}>\n              Offer a price\n            </Button>\n          </strong>\n        ),\n        disableClickEventBubbling: true,\n      }\n    ];\n\n      setTimeout(()=>{\n        listenEvents()\n      }, 5000);\n    \n      const handleClickOpen = (params) => {\n        console.log(params.row);\n        setSelectedItem(params.row)\n        setOpen(true);\n      };\n    \n      const handleClose = (value) => {\n        setOpen(false);\n        setSelectedItem(value);\n      };\n\n    async function loadTasks(){\n      const response = await fetch(\"/loadTasks\", {\n        method: \"GET\",\n        headers: { \"Content-Type\": \"application/json\" }\n      })\n      let result\n      let newPosts = []\n      await response.json().then((message) => {\n        result = message[\"data\"]\n        console.log(result)\n        result.map((task) => {\n          newPosts.push({id : task[0],\n            description : task[1],\n            pubkey: task[2]\n          })\n        })\n        setPostList(newPosts)\n      });\n      listenEvents()\n      return result      \n    }\n\n\n    async function listenEvents(){\n\n      if (typeof window.ethereum !== 'undefined'){\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const contract = new ethers.Contract(contractAddress, XContract.abi, provider);\n        contract.on(\"NewPrice\", (id, CL_price, CR_price) => {\n          console.log(\"event \", id, CL_price, CR_price);\n        })\n        // console.log(contract.events)\n        // await contract.events.NewPrice({}).on(\"data\", (e) => console.log(e));\n      }\n    }\n\n    useEffect(() => {\n      \n      }, [])\n\n      \n        \n    \n    return (\n        <div style={{ height: 400,  marginLeft: 100, marginRight: '100px', alignSelf: 'flex-start'}} className={classes.root}>\n        <DataGrid\n          rows={postList}\n          columns={columns}\n          pageSize={4}\n        //   checkboxSelection\n          disableSelectionOnClick\n        />\n        <SimpleDialog selectedItem={selectedItem} open={open} onClose={handleClose} content={content}/>\n        <Button size =\"small\" color=\"primary\" onClick={loadTasks} > Load Tasks </Button>\n      </div>\n  \n    );\n    \n}\n\nconst useStyles = makeStyles({\n  root: {\n    '& .super-app-theme--header': {\n      backgroundColor: 'rgba(255, 7, 0, 0.55)',\n    },\n  },\n});\nexport default (Posts);\n\nfunction SimpleDialog(props) {\n  const classes = useStyles();\n  const { currentBCAccount, keypair, loading, balance} = useAuth()\n  const [price, setPrice] = useState()\n  const { onClose, selectedItem, open} = props;\n\n  const handleClose = () => {\n    onClose(selectedItem);\n  };\n\n  async function sendPrice (){\n    const response = await fetch(\"/sendPrice\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        'user_key': currentBCAccount.privateKey,\n        'pubkeyOfRequest': selectedItem.pubkey,\n        'price': price,\n        'id': selectedItem.id\n      }),\n    })\n    console.log(selectedItem)\n    let result\n    let newPosts = []\n    await response.json().then((message) => {\n      // result = message[\"data\"]\n      \n    });\n  };\n\n\n\n  return (\n    <Dialog aria-labelledby=\"alert-dialog-title\"  onClose={handleClose} open={open}>\n        <DialogTitle  style={{ backgroundColor: 'navy', color: 'white' }} id=\"alert-dialog-title\">\n          Offer a price\n        </DialogTitle>\n        <DialogContent>\n            <DialogContentText>\n              <Typography fullWidth margin=\"dense\" style={{ alignSelf: 'flex-start'}} variant=\"subtitle1\">{selectedItem.description}</Typography>\n            </DialogContentText>\n              <TextField onChange={e => setPrice(e.target.value)} autoFocus\n                        margin=\"dense\"\n                        id=\"name\"\n                        label=\"Price\"\n                        type=\"number\"\n                        fullWidth          />\n        </DialogContent>\n        <DialogActions>\n          <IconButton color=\"primary\" component=\"span\" onClick={sendPrice}>\n                <SendIcon />\n          </IconButton>\n        </DialogActions>\n\n    </Dialog>\n  );\n}\n\nSimpleDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  selectedItem: PropTypes.shape({\n    id: PropTypes.number,\n    description: PropTypes.string.isRequired,\n    pubkey: PropTypes.string.isRequired\n  })\n};","/Users/kzjouf/Desktop/project/scdapp/src/pages/Reports.js",["167","168"],"import React from 'react';\nimport {useState} from 'react'\nimport '@react-pdf-viewer/core/lib/styles/index.css'\nimport '@react-pdf-viewer/default-layout/lib/styles/index.css'\nimport { defaultLayoutPlugin } from '@react-pdf-viewer/default-layout';\nimport pdfFile from \"./Research_Proposal.pdf\"\nimport {Worker, Viewer} from '@react-pdf-viewer/core'\n\nfunction Reports() {\n\n  const [defaultPdfFile] = useState(pdfFile)\n  const [numPages, setNumPages] = useState(null);\n\n\n  function onDocumentLoadSuccess({ numPages }) {\n    setNumPages(numPages);\n  }\n\n  const defaultLayoutPluginInstance = defaultLayoutPlugin();\n\n  return (\n    <div className='reports'>\n      <br></br>\n      <h1>Reports</h1>\n        <div>\n        {defaultPdfFile&&<><Worker workerUrl=\"https://unpkg.com/pdfjs-dist@2.6.347/build/pdf.worker.min.js\">\n            <Viewer fileUrl={defaultPdfFile}\n              plugins={[defaultLayoutPluginInstance]} />\n          </Worker></>}\n        </div>\n    </div>\n  );\n}\n\nexport default Reports;","/Users/kzjouf/Desktop/project/scdapp/src/pages/AdminPage.js",["169","170","171","172","173","174","175","176","177","178","179","180"],"import React, { Component } from 'react';\nimport { Button, ButtonGroup, Container} from 'reactstrap';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { TiTick } from \"react-icons/ti\";\n// import AppNavbar from './AppNavbar';\nimport {useState, useEffect} from 'react'\nimport database from './../firebase'\nimport { Link } from 'react-router-dom';\nimport { DataGrid } from '@material-ui/data-grid';\nimport {Typography, List, Grid, CardMedia, TextField} from '@material-ui/core'\n\nconst StyledTableCell = withStyles((theme) => ({\n    head: {\n      backgroundColor: theme.palette.common.black,\n      color: theme.palette.common.white,\n    },\n    body: {\n      fontSize: 14,\n    },\n  }))(TableCell);\n  \n  const StyledTableRow = withStyles((theme) => ({\n    root: {\n      '&:nth-of-type(odd)': {\n        backgroundColor: theme.palette.action.hover,\n      },\n    },\n  }))(TableRow);\n\nfunction GroupList(){\n    var groups = [];\n    const [users, setUsers] = useState([]);\n    const columns = [\n        { field: 'id', headerName: 'ID', width: 90 },\n        {\n          field: 'fullname',\n          headerName: 'Full name',\n          width: 150,\n          editable: true,\n        },\n        {\n          field: 'address',\n          headerName: 'address',\n          description: 'This column has a value getter and is not sortable.',\n          sortable: false,\n          width: 160,\n        },\n      ];\n      \n    useEffect(() => {\n        fetchUsers();\n      }, [])\n    // const groupList = groups.map(group => {\n    //     const address = `${group.address || ''} ${group.city || ''} ${group.stateOrProvince || ''}`;\n    //     return <tr key={group.id}>\n    //     <td style={{whiteSpace: 'nowrap'}}>{group.name}</td>\n    //     <td>{address}</td>\n    //     <td>{group.events.map(event => {\n    //         return <div key={event.id}>{new Intl.DateTimeFormat('en-US', {\n    //         year: 'numeric',\n    //         month: 'long',\n    //         day: '2-digit'\n    //         }).format(new Date(event.date))}: {event.title}</div>\n    //     })}</td>\n    //     <td>\n    //         <ButtonGroup>\n    //         <Button size=\"sm\" color=\"primary\" tag={Link} to={\"/groups/\" + group.id}>Edit</Button>\n    //         <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(group.id)}>Delete</Button>\n    //         </ButtonGroup>\n    //     </td>\n    //     </tr>\n    // });\n\n    const fetchUsers = async()=>{\n        const response = database.collection('users');\n        const newList = []\n        const data = await response.get();\n        data.docs.forEach(item=>{\n            newList.push(item.data())\n           })\n           setUsers(newList)\n    }\n\n\n        return (\n            <div>\n              {/* <AppNavbar/> */}\n              <Container fluid style={{ paddingLeft: 52, paddingRight: 32 }} >\n                <div className=\"float-right\">\n                  <Button color=\"success\" tag={Link} to=\"/users/new\">Add user</Button>\n                </div>\n                <h3>Account List</h3>\n                <Table className=\"mt-4\">\n                    <TableHead>\n                        <TableRow>\n                            <StyledTableCell width=\"20%\" align=\"center\">Name</StyledTableCell>\n                            <StyledTableCell width=\"40%\" align=\"center\">Address</StyledTableCell>\n                            <StyledTableCell width=\"20%\" align=\"center\">Register To SC</StyledTableCell>\n                            <StyledTableCell width=\"20%\" align=\"center\"></StyledTableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                            {users.map((user) => (\n                                <StyledTableRow align=\"right\" key={user.fullname}>\n                                <StyledTableCell component=\"th\" scope=\"row\">\n                                    {user.fullname}\n                                </StyledTableCell>\n                                <StyledTableCell align=\"center\">{user.address}</StyledTableCell>\n                                <StyledTableCell align=\"center\">\n                                {user.registerForContract && <TiTick />}\n                                \n                                </StyledTableCell>\n                                <StyledTableCell align=\"right\">{user.registerForContract}\n                                    \n                                    <ButtonGroup>\n                                        {/* <Button size=\"sm\" color=\"primary\" tag={Link} to={\"/groups/\" + group.id}>Edit</Button> */}\n                                        <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(user.fullname)}>Delete</Button>\n                                    </ButtonGroup>\n                                </StyledTableCell>\n                                </StyledTableRow>\n                            ))}\n                    </TableBody>\n      \n                </Table>\n              </Container>\n          \n            </div>\n          );\n}\n\n// class userList extends Component {\n\n//   constructor(props) {\n//     super(props);\n//     this.state = {users: [], isLoading: true};\n//     this.remove = this.remove.bind(this);\n//   }\n\n//   componentDidMount() {\n//     this.setState({isLoading: true});\n\n//     const snapshot = database.collection('users').get();\n//         snapshot.forEach((doc) => {\n//         console.log(doc.id, '=>', doc.data());\n//         });\n//   }\n\n//   async remove(id) {\n//     await fetch(`/api/user/${id}`, {\n//       method: 'DELETE',\n//       headers: {\n//         'Accept': 'application/json',\n//         'Content-Type': 'application/json'\n//       }\n//     }).then(() => {\n//       let updatedusers = [...this.state.users].filter(i => i.id !== id);\n//       this.setState({users: updatedusers});\n//     });\n//   }\n\n//   render() {\n//     const {users, isLoading} = this.state;\n\n//     if (isLoading) {\n//       return <p>Loading...</p>;\n//     }\n\n//     const userList = users.map(user => {\n//       const address = `${user.address || ''} ${user.city || ''} ${user.stateOrProvince || ''}`;\n//       return <tr key={user.id}>\n//         <td style={{whiteSpace: 'nowrap'}}>{user.name}</td>\n//         <td>{address}</td>\n//         <td>{user.events.map(event => {\n//           return <div key={event.id}>{new Intl.DateTimeFormat('en-US', {\n//             year: 'numeric',\n//             month: 'long',\n//             day: '2-digit'\n//           }).format(new Date(event.date))}: {event.title}</div>\n//         })}</td>\n//         <td>\n//           <Buttonuser>\n//             <Button size=\"sm\" color=\"primary\" tag={Link} to={\"/users/\" + user.id}>Edit</Button>\n//             <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(user.id)}>Delete</Button>\n//           </Buttonuser>\n//         </td>\n//       </tr>\n//     });\n\n//     return (\n//       <div>\n//         {/* <AppNavbar/> */}\n//         <Container fluid>\n//           <div className=\"float-right\">\n//             <Button color=\"success\" tag={Link} to=\"/users/new\">Add user</Button>\n//           </div>\n//           <h3>My JUG Tour</h3>\n//           <Table className=\"mt-4\">\n//             <thead>\n//             <tr>\n//               <th width=\"20%\">Name</th>\n//               <th width=\"20%\">Location</th>\n//               <th>Events</th>\n//               <th width=\"10%\">Actions</th>\n//             </tr>\n//             </thead>\n//             <tbody>\n//             {groupList}\n//             </tbody>\n//           </Table>\n//         </Container>\n//       </div>\n//     );\n//   }\n// }\n\nexport default GroupList;","/Users/kzjouf/Desktop/project/scdapp/src/pages/History.js",[],"/Users/kzjouf/Desktop/project/scdapp/src/components/SidebarData.js",[],"/Users/kzjouf/Desktop/project/scdapp/src/helper/Firebase.js",[],"/Users/kzjouf/Desktop/project/scdapp/src/store/actions/PostTypes.js",[],"/Users/kzjouf/Desktop/project/scdapp/src/store/actions/AuthActions.js",[],"/Users/kzjouf/Desktop/project/scdapp/src/pages/Styles.js",["181"],"import { makeStyles } from \"@material-ui/core\";\nimport { Block } from \"@material-ui/icons\";\n\nconst useStyles = makeStyles((theme) => ({\n    card :{\n        height : '100%',\n        display :'flex',\n        flexDirection: 'column',\n        width: '45rem',\n        marginLeft: '15rem', \n        // backgroundColor: '#3f4c6b'\n        backgroundColor: theme.palette.background.paper\n    },\n    cardMedia : {\n        paddingTop : '56.25%'\n    },\n\n    cardContent: {\n        flexGrow:1\n    },\n    cardGrid: {\n        padding: '20px 0'\n    },\n    icon: {\n        marginRight: '20px'\n    },\n\n    buttons : {\n        marginTop: '40px'\n    },\n    container: {\n        backgroundColor: '#FFFFFF',\n        border: '1px solid #DFE0EB',\n        borderRadius: 4,\n        cursor: 'pointer',\n        height: 70,\n        maxWidth: 350,\n        marginRight: 30,\n        padding: '24px 32px 24px 32px',\n        ':hover': {\n            borderColor: '#3751FF',\n            ':nth-child(n) > span': {\n                color: '#3751FF'\n            }\n        }\n    },\n    titleline : {\n        display :'flex',\n        flexDirection: 'row',\n        // justifycontent: space-between,\n        // align-items: center,\n        // marginbottom: 0.5rem,\n        fontSize: '20px',\n        color: '#FFFFFF',\n    },\n    field:{\n        marginTop: 20,\n        marginBottom: 10,\n        display: 'block'\n    },\n   \n\n\n}));\n\nexport default useStyles;\n\n","/Users/kzjouf/Desktop/project/scdapp/src/components/AddPost.js",["182","183","184","185","186","187","188","189","190","191","192","193","194","195"],"import { Component } from 'react';\nimport './Post.css';\nimport  useStyles  from '../pages/Styles.js';\nimport {Typography, Button, AppBar, Spinner, Card, Container, CardActions, Grid, CardContent, CardMedia, TextField} from '@material-ui/core'\nimport {useState, useEffect} from 'react'\n\nfunction AddPost() {\n\n    const [newPost, setNewPost] = useState({title: '',\n    description: '',\n    status: 'active'});\n\n\n    const addPostHandler = (e) => {\n        e.preventDefault();\n        console.log(newPost);\n    };\n    \n    // textChange = (title, e) => {\n    //     this.setState({\n    //         [title]: e.target.value,\n    //     });\n    // };\n\n    return(\n        <div>\n            <h2 className='text-2x1 font-bold'> Add Post </h2>\n        <form  onSubmit ={addPostHandler}>\n            <div className='form-inner'>\n            <div className=\"form-group\">\n                <label className='block'>Title</label>\n                <input\n                    type='text'\n                    className='block w-1/4 border border-gray-600 focus:outline-none'\n                    onChange={e => setNewPost({...newPost, title: e.target.value})}\n                />\n            </div>\n            <div className=\"form-group\">\n                <label className='block'>Description</label>\n                <textarea  onChange={e => setNewPost({...newPost, description: e.target.value})} value={newPost.description} className='px-3 py-1 block w-full border border-gray-600  focus:outline-none focus:border-red-600'></textarea>\n            </div>\n            <div className=\"form-group\">\n                <label className='block'>Status</label>\n                <input\n                    type='text'\n                    className='block w-1/4 border border-gray-600 focus:outline-none'\n                />\n            </div>\n            <div className='my-3'>\n                    <button\n                        type='submit'\n                        className='bg-indigo-900 text-white px-5 py-2'\n                    >\n                        Add Post\n                    </button>\n                </div>\n            </div>\n        </form>\n        </div>\n    \n    )\n    \n}\n\nexport default AddPost;","/Users/kzjouf/Desktop/project/scdapp/src/firebase.js",[],"/Users/kzjouf/Desktop/project/scdapp/src/services/AuthService.js",[],{"ruleId":"196","replacedBy":"197"},{"ruleId":"198","replacedBy":"199"},{"ruleId":"200","severity":1,"message":"201","line":3,"column":8,"nodeType":"202","messageId":"203","endLine":3,"endColumn":14},{"ruleId":"200","severity":1,"message":"204","line":4,"column":8,"nodeType":"202","messageId":"203","endLine":4,"endColumn":14},{"ruleId":"200","severity":1,"message":"205","line":5,"column":50,"nodeType":"202","messageId":"203","endLine":5,"endColumn":58},{"ruleId":"200","severity":1,"message":"206","line":5,"column":60,"nodeType":"202","messageId":"203","endLine":5,"endColumn":70},{"ruleId":"200","severity":1,"message":"207","line":6,"column":24,"nodeType":"202","messageId":"203","endLine":6,"endColumn":31},{"ruleId":"200","severity":1,"message":"208","line":10,"column":10,"nodeType":"202","messageId":"203","endLine":10,"endColumn":18},{"ruleId":"200","severity":1,"message":"209","line":10,"column":31,"nodeType":"202","messageId":"203","endLine":10,"endColumn":39},{"ruleId":"200","severity":1,"message":"210","line":11,"column":7,"nodeType":"202","messageId":"203","endLine":11,"endColumn":23},{"ruleId":"200","severity":1,"message":"205","line":4,"column":50,"nodeType":"202","messageId":"203","endLine":4,"endColumn":58},{"ruleId":"200","severity":1,"message":"211","line":2,"column":8,"nodeType":"202","messageId":"203","endLine":2,"endColumn":12},{"ruleId":"200","severity":1,"message":"212","line":4,"column":10,"nodeType":"202","messageId":"203","endLine":4,"endColumn":17},{"ruleId":"200","severity":1,"message":"213","line":9,"column":9,"nodeType":"202","messageId":"203","endLine":9,"endColumn":19},{"ruleId":"200","severity":1,"message":"214","line":15,"column":20,"nodeType":"202","messageId":"203","endLine":15,"endColumn":29},{"ruleId":"200","severity":1,"message":"215","line":17,"column":11,"nodeType":"202","messageId":"203","endLine":17,"endColumn":19},{"ruleId":"200","severity":1,"message":"213","line":9,"column":9,"nodeType":"202","messageId":"203","endLine":9,"endColumn":19},{"ruleId":"200","severity":1,"message":"216","line":9,"column":30,"nodeType":"202","messageId":"203","endLine":9,"endColumn":39},{"ruleId":"200","severity":1,"message":"217","line":31,"column":17,"nodeType":"202","messageId":"203","endLine":31,"endColumn":25},{"ruleId":"200","severity":1,"message":"218","line":3,"column":8,"nodeType":"202","messageId":"203","endLine":3,"endColumn":16},{"ruleId":"200","severity":1,"message":"219","line":4,"column":8,"nodeType":"202","messageId":"203","endLine":4,"endColumn":13},{"ruleId":"200","severity":1,"message":"220","line":18,"column":10,"nodeType":"202","messageId":"203","endLine":18,"endColumn":13},{"ruleId":"200","severity":1,"message":"221","line":18,"column":15,"nodeType":"202","messageId":"203","endLine":18,"endColumn":21},{"ruleId":"200","severity":1,"message":"222","line":59,"column":12,"nodeType":"202","messageId":"203","endLine":59,"endColumn":25},{"ruleId":"223","severity":1,"message":"224","line":115,"column":8,"nodeType":"225","endLine":115,"endColumn":10,"suggestions":"226"},{"ruleId":"200","severity":1,"message":"227","line":7,"column":19,"nodeType":"202","messageId":"203","endLine":7,"endColumn":28},{"ruleId":"200","severity":1,"message":"228","line":54,"column":11,"nodeType":"202","messageId":"203","endLine":54,"endColumn":19},{"ruleId":"200","severity":1,"message":"229","line":67,"column":18,"nodeType":"202","messageId":"203","endLine":67,"endColumn":29},{"ruleId":"200","severity":1,"message":"230","line":102,"column":18,"nodeType":"202","messageId":"203","endLine":102,"endColumn":26},{"ruleId":"200","severity":1,"message":"231","line":127,"column":18,"nodeType":"202","messageId":"203","endLine":127,"endColumn":26},{"ruleId":"200","severity":1,"message":"232","line":146,"column":13,"nodeType":"202","messageId":"203","endLine":146,"endColumn":21},{"ruleId":"200","severity":1,"message":"232","line":193,"column":13,"nodeType":"202","messageId":"203","endLine":193,"endColumn":21},{"ruleId":"200","severity":1,"message":"233","line":210,"column":15,"nodeType":"202","messageId":"203","endLine":210,"endColumn":18},{"ruleId":"234","severity":1,"message":"235","line":233,"column":7,"nodeType":"236","messageId":"237","endLine":236,"endColumn":57},{"ruleId":"200","severity":1,"message":"238","line":233,"column":13,"nodeType":"202","messageId":"203","endLine":233,"endColumn":16},{"ruleId":"200","severity":1,"message":"239","line":234,"column":13,"nodeType":"202","messageId":"203","endLine":234,"endColumn":16},{"ruleId":"200","severity":1,"message":"240","line":235,"column":13,"nodeType":"202","messageId":"203","endLine":235,"endColumn":16},{"ruleId":"200","severity":1,"message":"241","line":236,"column":13,"nodeType":"202","messageId":"203","endLine":236,"endColumn":17},{"ruleId":"200","severity":1,"message":"242","line":247,"column":18,"nodeType":"202","messageId":"203","endLine":247,"endColumn":27},{"ruleId":"200","severity":1,"message":"243","line":269,"column":13,"nodeType":"202","messageId":"203","endLine":269,"endColumn":24},{"ruleId":"244","severity":1,"message":"245","line":285,"column":13,"nodeType":"246","messageId":"247","endLine":285,"endColumn":15},{"ruleId":"200","severity":1,"message":"248","line":1,"column":10,"nodeType":"202","messageId":"203","endLine":1,"endColumn":28},{"ruleId":"200","severity":1,"message":"249","line":2,"column":8,"nodeType":"202","messageId":"203","endLine":2,"endColumn":15},{"ruleId":"200","severity":1,"message":"250","line":17,"column":8,"nodeType":"202","messageId":"203","endLine":17,"endColumn":14},{"ruleId":"200","severity":1,"message":"251","line":29,"column":21,"nodeType":"202","messageId":"203","endLine":29,"endColumn":31},{"ruleId":"252","severity":1,"message":"253","line":97,"column":27,"nodeType":"254","messageId":"255","endLine":97,"endColumn":29},{"ruleId":"200","severity":1,"message":"256","line":157,"column":9,"nodeType":"202","messageId":"203","endLine":157,"endColumn":16},{"ruleId":"200","severity":1,"message":"257","line":158,"column":29,"nodeType":"202","messageId":"203","endLine":158,"endColumn":36},{"ruleId":"200","severity":1,"message":"258","line":158,"column":38,"nodeType":"202","messageId":"203","endLine":158,"endColumn":45},{"ruleId":"200","severity":1,"message":"259","line":158,"column":47,"nodeType":"202","messageId":"203","endLine":158,"endColumn":54},{"ruleId":"200","severity":1,"message":"260","line":178,"column":9,"nodeType":"202","messageId":"203","endLine":178,"endColumn":15},{"ruleId":"200","severity":1,"message":"261","line":179,"column":9,"nodeType":"202","messageId":"203","endLine":179,"endColumn":17},{"ruleId":"200","severity":1,"message":"262","line":12,"column":10,"nodeType":"202","messageId":"203","endLine":12,"endColumn":18},{"ruleId":"200","severity":1,"message":"263","line":15,"column":12,"nodeType":"202","messageId":"203","endLine":15,"endColumn":33},{"ruleId":"200","severity":1,"message":"264","line":1,"column":17,"nodeType":"202","messageId":"203","endLine":1,"endColumn":26},{"ruleId":"200","severity":1,"message":"265","line":6,"column":22,"nodeType":"202","messageId":"203","endLine":6,"endColumn":32},{"ruleId":"200","severity":1,"message":"266","line":7,"column":8,"nodeType":"202","messageId":"203","endLine":7,"endColumn":22},{"ruleId":"200","severity":1,"message":"267","line":10,"column":8,"nodeType":"202","messageId":"203","endLine":10,"endColumn":13},{"ruleId":"200","severity":1,"message":"268","line":16,"column":10,"nodeType":"202","messageId":"203","endLine":16,"endColumn":18},{"ruleId":"200","severity":1,"message":"213","line":17,"column":9,"nodeType":"202","messageId":"203","endLine":17,"endColumn":19},{"ruleId":"200","severity":1,"message":"269","line":17,"column":21,"nodeType":"202","messageId":"203","endLine":17,"endColumn":25},{"ruleId":"200","severity":1,"message":"270","line":17,"column":27,"nodeType":"202","messageId":"203","endLine":17,"endColumn":31},{"ruleId":"200","severity":1,"message":"271","line":17,"column":33,"nodeType":"202","messageId":"203","endLine":17,"endColumn":42},{"ruleId":"200","severity":1,"message":"216","line":17,"column":44,"nodeType":"202","messageId":"203","endLine":17,"endColumn":53},{"ruleId":"200","severity":1,"message":"272","line":38,"column":9,"nodeType":"202","messageId":"203","endLine":38,"endColumn":15},{"ruleId":"200","severity":1,"message":"273","line":40,"column":11,"nodeType":"202","messageId":"203","endLine":40,"endColumn":18},{"ruleId":"200","severity":1,"message":"274","line":2,"column":10,"nodeType":"202","messageId":"203","endLine":2,"endColumn":15},{"ruleId":"200","severity":1,"message":"264","line":1,"column":10,"nodeType":"202","messageId":"203","endLine":1,"endColumn":19},{"ruleId":"200","severity":1,"message":"275","line":3,"column":9,"nodeType":"202","messageId":"203","endLine":3,"endColumn":18},{"ruleId":"200","severity":1,"message":"213","line":4,"column":9,"nodeType":"202","messageId":"203","endLine":4,"endColumn":19},{"ruleId":"200","severity":1,"message":"276","line":4,"column":21,"nodeType":"202","messageId":"203","endLine":4,"endColumn":27},{"ruleId":"200","severity":1,"message":"277","line":4,"column":29,"nodeType":"202","messageId":"203","endLine":4,"endColumn":35},{"ruleId":"200","severity":1,"message":"278","line":4,"column":37,"nodeType":"202","messageId":"203","endLine":4,"endColumn":44},{"ruleId":"200","severity":1,"message":"279","line":4,"column":46,"nodeType":"202","messageId":"203","endLine":4,"endColumn":50},{"ruleId":"200","severity":1,"message":"280","line":4,"column":52,"nodeType":"202","messageId":"203","endLine":4,"endColumn":61},{"ruleId":"200","severity":1,"message":"281","line":4,"column":63,"nodeType":"202","messageId":"203","endLine":4,"endColumn":74},{"ruleId":"200","severity":1,"message":"270","line":4,"column":76,"nodeType":"202","messageId":"203","endLine":4,"endColumn":80},{"ruleId":"200","severity":1,"message":"282","line":4,"column":82,"nodeType":"202","messageId":"203","endLine":4,"endColumn":93},{"ruleId":"200","severity":1,"message":"271","line":4,"column":95,"nodeType":"202","messageId":"203","endLine":4,"endColumn":104},{"ruleId":"200","severity":1,"message":"216","line":4,"column":106,"nodeType":"202","messageId":"203","endLine":4,"endColumn":115},{"ruleId":"200","severity":1,"message":"227","line":5,"column":19,"nodeType":"202","messageId":"203","endLine":5,"endColumn":28},"no-native-reassign",["283"],"no-negated-in-lhs",["284"],"no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar","'Navbar' is defined but never used.","'Redirect' is defined but never used.","'withRouter' is defined but never used.","'useAuth' is defined but never used.","'useState' is defined but never used.","'Suspense' is defined but never used.","'loggerMiddleware' is assigned a value but never used.","'logo' is defined but never used.","'connect' is defined but never used.","'Typography' is defined but never used.","'setErrors' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'TextField' is defined but never used.","'setTitle' is assigned a value but never used.","'accounts' is defined but never used.","'xtype' is defined but never used.","'uid' is assigned a value but never used.","'setUid' is assigned a value but never used.","'writeUserData' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'currentBCAccount'. Either include it or remove the dependency array. You can also do a functional update 'setCurrentBCAccount(c => ...)' if you only need 'currentBCAccount' in the 'setCurrentBCAccount' call.","ArrayExpression",["285"],"'useEffect' is defined but never used.","'accounts' is assigned a value but never used.","'setGreeting' is defined but never used.","'register' is defined but never used.","'genProof' is defined but never used.","'response' is assigned a value but never used.","'err' is assigned a value but never used.","no-unreachable","Unreachable code.","VariableDeclaration","unreachableCode","'pr1' is assigned a value but never used.","'pr2' is assigned a value but never used.","'pr3' is assigned a value but never used.","'data' is assigned a value but never used.","'sendCoins' is defined but never used.","'transaction' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'bindActionCreators' is defined but never used.","'AddPost' is defined but never used.","'Avatar' is defined but never used.","'setContent' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'classes' is assigned a value but never used.","'keypair' is assigned a value but never used.","'loading' is assigned a value but never used.","'balance' is assigned a value but never used.","'result' is defined but never used.","'newPosts' is assigned a value but never used.","'numPages' is assigned a value but never used.","'onDocumentLoadSuccess' is defined but never used.","'Component' is defined but never used.","'makeStyles' is defined but never used.","'TableContainer' is defined but never used.","'Paper' is defined but never used.","'DataGrid' is defined but never used.","'List' is defined but never used.","'Grid' is defined but never used.","'CardMedia' is defined but never used.","'groups' is assigned a value but never used.","'columns' is assigned a value but never used.","'Block' is defined but never used.","'useStyles' is defined but never used.","'Button' is defined but never used.","'AppBar' is defined but never used.","'Spinner' is defined but never used.","'Card' is defined but never used.","'Container' is defined but never used.","'CardActions' is defined but never used.","'CardContent' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"286","fix":"287"},"Update the dependencies array to be: [currentBCAccount]",{"range":"288","text":"289"},[3298,3300],"[currentBCAccount]"]