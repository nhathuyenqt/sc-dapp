[{"/Users/kzjouf/Desktop/project/scdapp/src/index.js":"1","/Users/kzjouf/Desktop/project/scdapp/src/reportWebVitals.js":"2","/Users/kzjouf/Desktop/project/scdapp/src/App.js":"3","/Users/kzjouf/Desktop/project/scdapp/src/pages/Home.js":"4","/Users/kzjouf/Desktop/project/scdapp/src/pages/Reports.js":"5","/Users/kzjouf/Desktop/project/scdapp/src/pages/Styles.js":"6","/Users/kzjouf/Desktop/project/scdapp/src/pages/History.js":"7","/Users/kzjouf/Desktop/project/scdapp/src/pages/AdminPage.js":"8","/Users/kzjouf/Desktop/project/scdapp/src/pages/post.js":"9","/Users/kzjouf/Desktop/project/scdapp/src/firebase.js":"10","/Users/kzjouf/Desktop/project/scdapp/src/pages/Login.js":"11","/Users/kzjouf/Desktop/project/scdapp/src/pages/Header.js":"12","/Users/kzjouf/Desktop/project/scdapp/src/pages/AuthSelector.js":"13","/Users/kzjouf/Desktop/project/scdapp/src/AuthFunction.js":"14","/Users/kzjouf/Desktop/project/scdapp/src/services/AuthService.js":"15","/Users/kzjouf/Desktop/project/scdapp/src/store/actions/AuthActions.js":"16","/Users/kzjouf/Desktop/project/scdapp/src/store/selectors/AuthSelectors.js":"17","/Users/kzjouf/Desktop/project/scdapp/src/pages2/Home/Home.js":"18","/Users/kzjouf/Desktop/project/scdapp/src/pages2/CreatePost/CreatePost.js":"19","/Users/kzjouf/Desktop/project/scdapp/src/pages2/SignUp/SignUp.js":"20","/Users/kzjouf/Desktop/project/scdapp/src/pages2/Login/Login.js":"21","/Users/kzjouf/Desktop/project/scdapp/src/store/actions/PostActions.js":"22","/Users/kzjouf/Desktop/project/scdapp/src/services/PostsService.js":"23","/Users/kzjouf/Desktop/project/scdapp/src/store/actions/PostTypes.js":"24","/Users/kzjouf/Desktop/project/scdapp/src/services/AxiosInstance.js":"25","/Users/kzjouf/Desktop/project/scdapp/src/store/store.js":"26","/Users/kzjouf/Desktop/project/scdapp/src/store/reducers/PostsReducer.js":"27","/Users/kzjouf/Desktop/project/scdapp/src/store/reducers/AuthReducer.js":"28","/Users/kzjouf/Desktop/project/scdapp/src/components2/Posts/Posts.js":"29","/Users/kzjouf/Desktop/project/scdapp/src/components2/Header/Header.js":"30","/Users/kzjouf/Desktop/project/scdapp/src/components2/Loader/Loader.js":"31","/Users/kzjouf/Desktop/project/scdapp/src/pages2/SinglePost/SinglePost.js":"32","/Users/kzjouf/Desktop/project/scdapp/src/pages2/EditPost/EditPost.js":"33","/Users/kzjouf/Desktop/project/scdapp/src/store/selectors/PostSelectors.js":"34","/Users/kzjouf/Desktop/project/scdapp/src/components/Navbar.js":"35","/Users/kzjouf/Desktop/project/scdapp/src/components/SidebarData.js":"36","/Users/kzjouf/Desktop/project/scdapp/src/pages/Posts.js":"37","/Users/kzjouf/Desktop/project/scdapp/src/components/SinglePost.js":"38","/Users/kzjouf/Desktop/project/scdapp/src/components/AddPost.js":"39","/Users/kzjouf/Desktop/project/scdapp/src/helper/Firebase.js":"40","/Users/kzjouf/Desktop/project/scdapp/src/helper/AuthContext.js":"41","/Users/kzjouf/Desktop/project/scdapp/src/components/PrivateRoute.js":"42","/Users/kzjouf/Desktop/project/scdapp/src/pages/Main.js":"43"},{"size":722,"mtime":1627565490659,"results":"44","hashOfConfig":"45"},{"size":362,"mtime":1625731792265,"results":"46","hashOfConfig":"45"},{"size":2799,"mtime":1627741465421,"results":"47","hashOfConfig":"45"},{"size":15214,"mtime":1627742282046,"results":"48","hashOfConfig":"45"},{"size":1056,"mtime":1627419602334,"results":"49","hashOfConfig":"45"},{"size":1415,"mtime":1627516526348,"results":"50","hashOfConfig":"45"},{"size":176,"mtime":1627419602325,"results":"51","hashOfConfig":"45"},{"size":7942,"mtime":1627419602324,"results":"52","hashOfConfig":"45"},{"size":1705,"mtime":1626729252411,"results":"53","hashOfConfig":"54"},{"size":1,"mtime":1627644789254,"results":"55","hashOfConfig":"45"},{"size":2171,"mtime":1627731013674,"results":"56","hashOfConfig":"45"},{"size":1885,"mtime":1627562630740,"results":"57","hashOfConfig":"45"},{"size":111,"mtime":1627562814166,"results":"58","hashOfConfig":"45"},{"size":1017,"mtime":1627564495315,"results":"59","hashOfConfig":"45"},{"size":2173,"mtime":1627562164823,"results":"60","hashOfConfig":"45"},{"size":2744,"mtime":1627590896704,"results":"61","hashOfConfig":"45"},{"size":111,"mtime":1627562164826,"results":"62","hashOfConfig":"45"},{"size":73,"mtime":1627562164822,"results":"63","hashOfConfig":"45"},{"size":2427,"mtime":1627562164821,"results":"64","hashOfConfig":"45"},{"size":3581,"mtime":1627564316642,"results":"65","hashOfConfig":"45"},{"size":3572,"mtime":1627565441076,"results":"66","hashOfConfig":"45"},{"size":1970,"mtime":1627562164825,"results":"67","hashOfConfig":"45"},{"size":605,"mtime":1627562164824,"results":"68","hashOfConfig":"45"},{"size":503,"mtime":1627562164825,"results":"69","hashOfConfig":"45"},{"size":445,"mtime":1627562164824,"results":"70","hashOfConfig":"45"},{"size":1055,"mtime":1627562164826,"results":"71","hashOfConfig":"45"},{"size":1666,"mtime":1627562164825,"results":"72","hashOfConfig":"45"},{"size":1793,"mtime":1627562164825,"results":"73","hashOfConfig":"45"},{"size":4033,"mtime":1627568588665,"results":"74","hashOfConfig":"45"},{"size":1741,"mtime":1627562164820,"results":"75","hashOfConfig":"45"},{"size":641,"mtime":1627562164820,"results":"76","hashOfConfig":"45"},{"size":616,"mtime":1627562164823,"results":"77","hashOfConfig":"45"},{"size":2647,"mtime":1627562164822,"results":"78","hashOfConfig":"45"},{"size":225,"mtime":1627562164826,"results":"79","hashOfConfig":"45"},{"size":2466,"mtime":1627740796947,"results":"80","hashOfConfig":"45"},{"size":958,"mtime":1627727036197,"results":"81","hashOfConfig":"45"},{"size":4491,"mtime":1627589614649,"results":"82","hashOfConfig":"45"},{"size":286,"mtime":1627569451235,"results":"83","hashOfConfig":"45"},{"size":2182,"mtime":1627588059641,"results":"84","hashOfConfig":"45"},{"size":563,"mtime":1627742794089,"results":"85","hashOfConfig":"45"},{"size":1948,"mtime":1627743870610,"results":"86","hashOfConfig":"45"},{"size":436,"mtime":1627741583629,"results":"87","hashOfConfig":"45"},{"size":1452,"mtime":1627727026682,"results":"88","hashOfConfig":"45"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},"n0gpj8",{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"91"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"91"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"91"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"91"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"16vm8cv",{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"91"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"91"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"91"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"91"},"/Users/kzjouf/Desktop/project/scdapp/src/index.js",[],["186","187"],"/Users/kzjouf/Desktop/project/scdapp/src/reportWebVitals.js",[],"/Users/kzjouf/Desktop/project/scdapp/src/App.js",["188","189","190","191","192","193","194","195"],"/Users/kzjouf/Desktop/project/scdapp/src/pages/Home.js",["196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214"],"import React from 'react';\n\nimport {Typography, Button, AppBar, Spinner, Card,  CircularProgress, Container, CardActions, Grid, CardContent, TextField} from '@material-ui/core'\n\nimport  useStyles  from './Styles.js';\nimport {useState, useEffect} from 'react'\nimport {ethers} from 'ethers'\nimport xtype from 'xtypejs'\nimport text  from './../contract_address.json';\nimport { useAuth } from \"../helper/AuthContext\"\nimport { useHistory } from 'react-router-dom';\nimport XContract from './../artifacts/contracts/XContract.sol/XContract.json'\n\n// const contractAddress = '0x2c934A1a4F5fC1E96Cf55FDbCbFc4614580B730a' // rinkeby\nconst contractAddress = text['contract_address']\nvar loading = false;\n\nfunction Home(props) {\n  // const history = useHistory();\n\n  // useEffect(() => {\n  //   auth.onAuthStateChanged(user => {\n  //       if (!user) history.push('/login');\n  //   })\n  // })\n\n  const { currentUser } = useAuth()\n\n  const classes = useStyles()\n\n  const [greeting, setGreetingValue] = useState('')\n  const [userAccount, setUserAccount] = useState('')\n  const [loading, setLoading] = useState(false);\n  const [balance, setBalance] = useState()\n  const [amount, setAmount] = useState()\n  const [recipient, setTo] = useState(\"0xC5e65BF63b33B865e78A02b13f0db60713c3Ff96\")\n  const [currentTime, setCurrentTime] = useState(0);\n  const [accId, setAccId] = useState(0);\n  const [accPubkey, setAccPubkey] = useState(\"\");\n  const [pubkeyList, setPubkeyList] = useState({});\n  const [privkeyList, setPrivkeyList] = useState({});\n  const [gList, setG] = useState({});\n  const [noti, setNoti] = useState(\"\")\n\n\n  // useEffect(() => {\n  //   requestAccount()\n  // });\n  if (window.ethereum){\n    window.ethereum.on('accountsChanged', function(accounts){\n      setUserAccount(accounts[0])\n\n    })\n  }\n\n  // async function updateStateEventListener(callback) {\n  //   await requestAccount()\n  //   const provider = new ethers.providers.Web3Provider(window.ethereum);\n  //   const signer = provider.getSigner();\n  //   const contract = new ethers.Contract(contractAddress, XContract.abi, signer)\n  //   const updateStateEvent = contract.UpdateState()\n  //   return updateStateEvent.watch(callback)\n  // }\n\n  async function requestAccount(){\n    const accounts = await window.ethereum.request({method : 'eth_requestAccounts'})\n    // console.log(accounts[0]);\n    setUserAccount(accounts[0])\n\n  }\n  // function getAccounts(callback) {\n  //   web3.eth.getAccounts((error,result) => {\n  //       if (error) {\n  //           console.log(error);\n  //       } else {\n  //           callback(result);\n  //       }\n  //   });\n  // }\n  \n\n  async function setGreeting(){\n    if (!greeting) return\n    if (typeof window.ethereum !== 'undefined'){\n      await requestAccount()\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(contractAddress, XContract.abi, signer)\n      const transaction = await contract.setGreeting(greeting)\n      await transaction.wait()\n\n      contract.on(\"TestMsg\", (msg) => {\n        console.log('Msg : ', msg);\n      });\n\n      fetchGreeting()\n    }\n  }\n  async function fetchGreeting(){\n    if (typeof window.ethereum !== 'undefined'){\n      const provider = new ethers.providers.Web3Provider(window.ethereum)\n      const contract = new ethers.Contract(contractAddress, XContract.abi, provider)\n      try{\n        const data = await contract.greet()\n        setGreetingValue(data)\n        console.log('data: ', data)\n      } catch(err){\n        console.log(\"Error: \", err)\n      }\n    }\n  }\n\n  async function getBalance(){\n    setLoading(true)\n    if (typeof window.ethereum !== 'undefined'){\n      const provider = new ethers.providers.Web3Provider(window.ethereum)\n      const contract = new ethers.Contract(contractAddress, XContract.abi, provider)\n      const signer =  provider.getSigner()\n      const [account] = await window.ethereum.request({method: 'eth_requestAccounts'})\n      const acc = signer.getAddress()\n\n      const b = await contract.balanceOf(account)\n      // setAmount(balance.toString())\n      console.log('provider: ', provider)\n      console.log('signer: ', signer)\n      console.log('address: ', acc)\n      console.log('balance: ', b.toString())\n      setBalance(b.toString())\n      setLoading(false)\n    }\n  }\n\n  async function register(){\n    setLoading(true)\n    if (typeof window.ethereum !== 'undefined'){\n      // await requestAccount()\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      console.log(\"signer \", signer)\n      // const contract = new ethers.Contract(contractAddress, XContract.abi, signer)\n      // const transaction = await contract.register()\n      // var accounts = await provider.getAccounts();\n      // console.log(accounts[0])\n      // await transaction.wait()\n      // let a = '0'\n      // signer.getAddress().then((address) => {\n      //   a = address\n      // });\n      // let b = provider.getBalance(a)\n      // setAddress(a)\n      \n      // getBalance()\n      // setLoading(false)\n      // \n    }\n  }\n\n  async function genKey(){\n    console.log(accId)\n    const response = await fetch(\"/genKey\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        accId: accId\n      }),\n    })\n\n    let result\n    await response.json().then((message) => {\n      result = message[\"data\"];\n      console.log(result);\n      const y = result[\"y\"];\n      const x = result[\"x\"];\n      const g = result['g']\n      let sKey =  privkeyList\n      let pubkey = pubkeyList\n      let G = gList\n      const i = parseInt(accId, 10)\n      pubkey[i] = y;\n      sKey[i] = x\n      G[i] = g\n      setPubkeyList(pubkeyList);\n      setG(G);\n      setPrivkeyList(sKey);\n      console.log(\"pubkey1 \", pubkeyList);\n      console.log(\"privkey1 \", privkeyList);\n    });\n\n      \n      console.log(\"pubkey \", pubkeyList);\n\n  }\n\n  async function genProof() {\n    const response = await fetch(\"/genProof\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        amt: amount,\n      }),\n    })\n    let result\n    await response.json().then((message) => {\n      result = JSON.stringify(message[\"data\"]);\n     \n\n    });\n    return result\n  }\n\n  async function getElBalance(){\n    setLoading(true)\n    if (typeof window.ethereum !== 'undefined'){\n\n      const response = await fetch(\"/getElBalance\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          'x' : privkeyList[accId],\n          'y' : pubkeyList[accId],\n          'g' : gList[accId],\n        }),\n      })\n      setLoading(false)\n      // const provider = new ethers.providers.Web3Provider(window.ethereum)\n      // const contract = new ethers.Contract(contractAddress, XContract.abi, provider)\n      // const signer =  provider.getSigner()\n      // const [account] = await window.ethereum.request({method: 'eth_requestAccounts'})\n      // const acc = signer.getAddress()\n      // const b = await contract.ElBalanceOf(y)\n      // console.log('address: ', acc)\n      // console.log('balance: ', b.toString())\n      // setBalance(b.toString())\n      // setLoading(false)\n    }\n  }\n\n  async function sendPrivateToken() {\n    if (typeof window.ethereum !== \"undefined\") {\n      await requestAccount();\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(\n        contractAddress,\n        XContract.abi,\n        signer\n      );\n      // function sendPrivateToken(function() {\n      //   console.log('huzzah, I\\'m done!');\n      // });\n      let messageProof = await genProof();\n      // console.log(\"Check type of Proof 1 : \", messageProof);\n      // console.log(\"hello 2\");\n      // let msg2 = JSON.stringify(messageProof)\n      // msg2 =  \"hello\"\n      // const transaction = await contract.privateTransfer(msg2);\n      // console.log(\"transaction\", transaction);\n\n      \n    }\n  }\n\n  async function genConfProof() {\n    setLoading(true)\n    console.log(\"g \", gList[0])\n      const response = await fetch(\"/genConfProof\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          'y_sender': pubkeyList[0],\n          'y_recipient': pubkeyList[1],\n          'g_sender': gList[0],\n          'amt':amount,\n          'b_after':197,\n          'x_sender': privkeyList[0]\n        }),\n      })\n      setLoading(false)\n      let result\n      await response.json().then((message) => {\n        result = message\n      });\n      return result\n  }\n\n  async function confTransfer() {\n    setNoti(\"\")\n    if (typeof window.ethereum !== \"undefined\") {\n      await requestAccount();\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(\n        contractAddress,\n        XContract.abi,\n        signer\n      );\n      // function sendPrivateToken(function() {\n      //   console.log('huzzah, I\\'m done!');\n      // });\n      let messageProof = await genConfProof();\n      console.log(messageProof);\n      if (messageProof['code'] != 200){\n        const err = messageProof['err']\n        setNoti(err);\n        return 0\n      }\n  \n      const pr1 = JSON.stringify(messageProof['rangeProofForAmt'])\n      const pr2 = JSON.stringify(messageProof['rangeProofForRemainBalance'])\n      const pr3 = JSON.stringify(messageProof['sigmaProtocol'])\n      const data = JSON.stringify(messageProof['input'])\n      // let msg2 = JSON.stringify(messageProof)\n      // console.log(msg2)\n      // // msg2 =  \"hello\"ßßßßßßßßß\n      // const transaction = await contract.confTransfer(pr1, pr2, pr3, data);\n      // console.log(\"transaction\", transaction);\n\n      \n    }\n  }\n  \n  async function sendCoins(){\n    var messageProof\n    if (typeof window.ethereum !== 'undefined'){\n\n      fetch(\"/genProof\",\n        {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({\n                amt: amount\n            }),\n        }).then((response) => response.json())\n        .then((message) => {\n          messageProof = JSON.stringify(message['data'])\n          console.log(messageProof)\n          console.log(\"Check type of Proof: \", xtype(messageProof))\n        });\n     \n      await requestAccount()\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(contractAddress, XContract.abi, signer)\n      const transaction = await contract.transfer(recipient, amount)\n      // const transaction = await contract.privateTransfer(messageProof)\n      \n      // await transaction.wait()\n      \n      contract.on(\"UpdateState\", (add, newBal) => {\n   \n          console.log(\"sender \", add)\n          console.log(\"new Balance \", newBal.toString())\n          \n       \n      });\n    }\n  }\n\n  return (\n    <div className='home'>\n      <h1 align='center'>Home</h1>\n      <Typography align='center' variant = \"h4\"> Nhat Huyen's Internship </Typography>\n      <Container maxWidth = \"sm\" className = {classes.cardGrid}> \n        <Grid container spacing ={4}>\n          <Grid item> \n            <Card className ={classes.card} maxWidth = \"md\">\n              {/* <CardMedia \n                className ={classes.cardMedia}\n                  image =\"https://source.unsplash.com/random\"\n                  title=\"Image title\" /> */}\n\n              <CardContent className = {classes.cardContent}>\n                <Typography gutterBottom variant = \"h5\"> Account </Typography>\n                \n                {/* <Dimmer active inverted>\n                  <Loader>Loading</Loader>\n                </Dimmer> */}\n                \n              \n            \n                <Typography textAlign='left'> {userAccount} </Typography>\n                <Typography textAlign='left'> {greeting}</Typography>\n                {/* <input \n                  onChange={e => setGreetingValue(e.target.value)} \n                  placeholder=\"Set greeting\"\n                  value = {greeting}\n                /> */}\n                <TextField\n                  onChange={e => setAccId(e.target.value)} \n                  placeholder=\"ACC ID\"\n                  variant='outlined'\n                  fullWidth\n                  color =\"secondary\"\n                  className={classes.field}\n                />\n              </CardContent>\n              <CardActions>\n               \n                <Button size =\"small\" color=\"primary\" onClick={register} >Register</Button>\n                <Button size =\"small\" color=\"primary\" onClick={genKey} >Generate Key-pair</Button>\n                <Button size =\"small\" color=\"primary\" onClick={getElBalance} >Get El Balance</Button>\n                \n              </CardActions>\n            </Card>\n          </Grid>\n          <Grid item>\n              <Card className ={classes.card} maxWidth = \"md\">\n            {/* <CardMedia \n              className ={classes.cardMedia}\n                image =\"https://source.unsplash.com/random\"\n                title=\"Image title\" /> */}\n\n            <CardContent className = {classes.cardContent}>\n              <Typography gutterBottom variant = \"h5\"> Balance </Typography>\n              <Typography textAlign='left'> {noti} </Typography>\n              {loading && (\n                    <CircularProgress size={24} className={classes.buttonProgress} />\n                )}\n              <Typography gutterBottom> {balance}</Typography>\n              <TextField onChange={e => setAccPubkey(e.target.value)} placeholder=\"My Account Public Key\" \n                    variant='outlined'\n                    fullWidth\n                    color =\"secondary\"\n                    value = {accPubkey}\n                    className={classes.field}/>\n              <TextField onChange={e => setTo(e.target.value)} placeholder=\"Recipient Public Key\" \n                    variant='outlined'\n                    fullWidth\n                    color =\"secondary\"\n                    defaultValue = {recipient}\n                    className={classes.field}/>\n              <TextField onChange={e => setAmount(e.target.value)} placeholder=\"Amount\" variant='outlined'\n                  fullWidth\n                  color =\"secondary\"\n                  className={classes.field}\n                  defaultValue = {1}\n                /> \n            </CardContent>\n            <CardActions>\n              <Button size =\"small\" color=\"primary\" onClick={getBalance} > Get Balance </Button>\n              <Button size =\"small\" color=\"primary\" onClick={sendCoins} >Send</Button>\n              <Button size =\"small\" color=\"primary\" onClick={sendPrivateToken} >Send Token</Button>\n              <Button size =\"small\" color=\"primary\" onClick={confTransfer} >Conf Transfer</Button>\n              \n            </CardActions>\n          </Card>\n          </Grid>\n        </Grid>\n      </Container>\n \n      \n    </div>\n  );\n}\n\nexport default Home;","/Users/kzjouf/Desktop/project/scdapp/src/pages/Reports.js",["215","216","217","218","219"],"import React from 'react';\nimport {useState, useEffect} from 'react'\nimport '@react-pdf-viewer/core/lib/styles/index.css'\nimport '@react-pdf-viewer/default-layout/lib/styles/index.css'\nimport { defaultLayoutPlugin } from '@react-pdf-viewer/default-layout';\nimport pdfFile from \"./Research_Proposal.pdf\"\nimport {Worker, Viewer} from '@react-pdf-viewer/core'\n\nfunction Reports() {\n\n  const [defaultPdfFile] = useState(pdfFile)\n  const [numPages, setNumPages] = useState(null);\n  const [pageNumber, setPageNumber] = useState(1);\n\n  function onDocumentLoadSuccess({ numPages }) {\n    setNumPages(numPages);\n  }\n\n  const defaultLayoutPluginInstance = defaultLayoutPlugin();\n\n  return (\n    <div className='reports'>\n      <br></br>\n      <h1>Reports</h1>\n        <div>\n        {defaultPdfFile&&<><Worker workerUrl=\"https://unpkg.com/pdfjs-dist@2.6.347/build/pdf.worker.min.js\">\n            <Viewer fileUrl={defaultPdfFile}\n              plugins={[defaultLayoutPluginInstance]} />\n          </Worker></>}\n        </div>\n    </div>\n  );\n}\n\nexport default Reports;","/Users/kzjouf/Desktop/project/scdapp/src/pages/Styles.js",["220"],"import { makeStyles } from \"@material-ui/core\";\nimport { Block } from \"@material-ui/icons\";\n\nconst useStyles = makeStyles((theme) => ({\n    card :{\n        height : '100%',\n        display :'flex',\n        flexDirection: 'column',\n        width: '32rem',\n        // marginLeft: '15rem', \n        // backgroundColor: '#3f4c6b'\n        backgroundColor: theme.palette.background.paper\n    },\n    cardMedia : {\n        paddingTop : '56.25%'\n    },\n\n    cardContent: {\n        flexGrow:1\n    },\n    cardGrid: {\n        padding: '20px 0'\n    },\n    icon: {\n        marginRight: '20px'\n    },\n\n    buttons : {\n        marginTop: '40px'\n    },\n    container: {\n        backgroundColor: '#FFFFFF',\n        border: '1px solid #DFE0EB',\n        borderRadius: 4,\n        cursor: 'pointer',\n        height: 70,\n        maxWidth: 350,\n        marginRight: 30,\n        padding: '24px 32px 24px 32px',\n        ':hover': {\n            borderColor: '#3751FF',\n            ':nth-child(n) > span': {\n                color: '#3751FF'\n            }\n        }\n    },\n    titleline : {\n        display :'flex',\n        flexDirection: 'row',\n        // justifycontent: space-between,\n        // align-items: center,\n        // marginbottom: 0.5rem,\n        fontSize: '20px',\n        color: '#FFFFFF',\n    },\n    field:{\n        marginTop: 20,\n        marginBottom: 10,\n        display: 'block'\n    },\n   \n\n\n}));\n\nexport default useStyles;\n\n","/Users/kzjouf/Desktop/project/scdapp/src/pages/History.js",[],"/Users/kzjouf/Desktop/project/scdapp/src/pages/AdminPage.js",["221","222","223","224","225","226","227","228","229","230","231","232"],"import React, { Component } from 'react';\nimport { Button, ButtonGroup, Container} from 'reactstrap';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { TiTick } from \"react-icons/ti\";\n// import AppNavbar from './AppNavbar';\nimport {useState, useEffect} from 'react'\nimport database from './../firebase'\nimport { Link } from 'react-router-dom';\nimport { DataGrid } from '@material-ui/data-grid';\nimport {Typography, List, Grid, CardMedia, TextField} from '@material-ui/core'\n\nconst StyledTableCell = withStyles((theme) => ({\n    head: {\n      backgroundColor: theme.palette.common.black,\n      color: theme.palette.common.white,\n    },\n    body: {\n      fontSize: 14,\n    },\n  }))(TableCell);\n  \n  const StyledTableRow = withStyles((theme) => ({\n    root: {\n      '&:nth-of-type(odd)': {\n        backgroundColor: theme.palette.action.hover,\n      },\n    },\n  }))(TableRow);\n\nfunction GroupList(){\n    var groups = [];\n    const [users, setUsers] = useState([]);\n    const columns = [\n        { field: 'id', headerName: 'ID', width: 90 },\n        {\n          field: 'fullname',\n          headerName: 'Full name',\n          width: 150,\n          editable: true,\n        },\n        {\n          field: 'address',\n          headerName: 'address',\n          description: 'This column has a value getter and is not sortable.',\n          sortable: false,\n          width: 160,\n        },\n      ];\n      \n    useEffect(() => {\n        fetchUsers();\n      }, [])\n    // const groupList = groups.map(group => {\n    //     const address = `${group.address || ''} ${group.city || ''} ${group.stateOrProvince || ''}`;\n    //     return <tr key={group.id}>\n    //     <td style={{whiteSpace: 'nowrap'}}>{group.name}</td>\n    //     <td>{address}</td>\n    //     <td>{group.events.map(event => {\n    //         return <div key={event.id}>{new Intl.DateTimeFormat('en-US', {\n    //         year: 'numeric',\n    //         month: 'long',\n    //         day: '2-digit'\n    //         }).format(new Date(event.date))}: {event.title}</div>\n    //     })}</td>\n    //     <td>\n    //         <ButtonGroup>\n    //         <Button size=\"sm\" color=\"primary\" tag={Link} to={\"/groups/\" + group.id}>Edit</Button>\n    //         <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(group.id)}>Delete</Button>\n    //         </ButtonGroup>\n    //     </td>\n    //     </tr>\n    // });\n\n    const fetchUsers = async()=>{\n        const response = database.collection('users');\n        const newList = []\n        const data = await response.get();\n        data.docs.forEach(item=>{\n            newList.push(item.data())\n           })\n           setUsers(newList)\n    }\n\n\n        return (\n            <div>\n              {/* <AppNavbar/> */}\n              <Container fluid style={{ paddingLeft: 52, paddingRight: 32 }} >\n                <div className=\"float-right\">\n                  <Button color=\"success\" tag={Link} to=\"/users/new\">Add user</Button>\n                </div>\n                <h3>Account List</h3>\n                <Table className=\"mt-4\">\n                    <TableHead>\n                        <TableRow>\n                            <StyledTableCell width=\"20%\" align=\"center\">Name</StyledTableCell>\n                            <StyledTableCell width=\"40%\" align=\"center\">Address</StyledTableCell>\n                            <StyledTableCell width=\"20%\" align=\"center\">Register To SC</StyledTableCell>\n                            <StyledTableCell width=\"20%\" align=\"center\"></StyledTableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                            {users.map((user) => (\n                                <StyledTableRow align=\"right\" key={user.fullname}>\n                                <StyledTableCell component=\"th\" scope=\"row\">\n                                    {user.fullname}\n                                </StyledTableCell>\n                                <StyledTableCell align=\"center\">{user.address}</StyledTableCell>\n                                <StyledTableCell align=\"center\">\n                                {user.registerForContract && <TiTick />}\n                                \n                                </StyledTableCell>\n                                <StyledTableCell align=\"right\">{user.registerForContract}\n                                    \n                                    <ButtonGroup>\n                                        {/* <Button size=\"sm\" color=\"primary\" tag={Link} to={\"/groups/\" + group.id}>Edit</Button> */}\n                                        <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(user.fullname)}>Delete</Button>\n                                    </ButtonGroup>\n                                </StyledTableCell>\n                                </StyledTableRow>\n                            ))}\n                    </TableBody>\n      \n                </Table>\n              </Container>\n          \n            </div>\n          );\n}\n\n// class userList extends Component {\n\n//   constructor(props) {\n//     super(props);\n//     this.state = {users: [], isLoading: true};\n//     this.remove = this.remove.bind(this);\n//   }\n\n//   componentDidMount() {\n//     this.setState({isLoading: true});\n\n//     const snapshot = database.collection('users').get();\n//         snapshot.forEach((doc) => {\n//         console.log(doc.id, '=>', doc.data());\n//         });\n//   }\n\n//   async remove(id) {\n//     await fetch(`/api/user/${id}`, {\n//       method: 'DELETE',\n//       headers: {\n//         'Accept': 'application/json',\n//         'Content-Type': 'application/json'\n//       }\n//     }).then(() => {\n//       let updatedusers = [...this.state.users].filter(i => i.id !== id);\n//       this.setState({users: updatedusers});\n//     });\n//   }\n\n//   render() {\n//     const {users, isLoading} = this.state;\n\n//     if (isLoading) {\n//       return <p>Loading...</p>;\n//     }\n\n//     const userList = users.map(user => {\n//       const address = `${user.address || ''} ${user.city || ''} ${user.stateOrProvince || ''}`;\n//       return <tr key={user.id}>\n//         <td style={{whiteSpace: 'nowrap'}}>{user.name}</td>\n//         <td>{address}</td>\n//         <td>{user.events.map(event => {\n//           return <div key={event.id}>{new Intl.DateTimeFormat('en-US', {\n//             year: 'numeric',\n//             month: 'long',\n//             day: '2-digit'\n//           }).format(new Date(event.date))}: {event.title}</div>\n//         })}</td>\n//         <td>\n//           <Buttonuser>\n//             <Button size=\"sm\" color=\"primary\" tag={Link} to={\"/users/\" + user.id}>Edit</Button>\n//             <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(user.id)}>Delete</Button>\n//           </Buttonuser>\n//         </td>\n//       </tr>\n//     });\n\n//     return (\n//       <div>\n//         {/* <AppNavbar/> */}\n//         <Container fluid>\n//           <div className=\"float-right\">\n//             <Button color=\"success\" tag={Link} to=\"/users/new\">Add user</Button>\n//           </div>\n//           <h3>My JUG Tour</h3>\n//           <Table className=\"mt-4\">\n//             <thead>\n//             <tr>\n//               <th width=\"20%\">Name</th>\n//               <th width=\"20%\">Location</th>\n//               <th>Events</th>\n//               <th width=\"10%\">Actions</th>\n//             </tr>\n//             </thead>\n//             <tbody>\n//             {groupList}\n//             </tbody>\n//           </Table>\n//         </Container>\n//       </div>\n//     );\n//   }\n// }\n\nexport default GroupList;","/Users/kzjouf/Desktop/project/scdapp/src/pages/post.js",[],"/Users/kzjouf/Desktop/project/scdapp/src/firebase.js",[],"/Users/kzjouf/Desktop/project/scdapp/src/pages/Login.js",["233","234","235","236","237","238","239"],"/Users/kzjouf/Desktop/project/scdapp/src/pages/Header.js",[],"/Users/kzjouf/Desktop/project/scdapp/src/pages/AuthSelector.js",[],"/Users/kzjouf/Desktop/project/scdapp/src/AuthFunction.js",[],"/Users/kzjouf/Desktop/project/scdapp/src/services/AuthService.js",[],"/Users/kzjouf/Desktop/project/scdapp/src/store/actions/AuthActions.js",[],"/Users/kzjouf/Desktop/project/scdapp/src/store/selectors/AuthSelectors.js",[],["240","241"],"/Users/kzjouf/Desktop/project/scdapp/src/pages2/Home/Home.js",[],["242","243"],"/Users/kzjouf/Desktop/project/scdapp/src/pages2/CreatePost/CreatePost.js",[],"/Users/kzjouf/Desktop/project/scdapp/src/pages2/SignUp/SignUp.js",[],"/Users/kzjouf/Desktop/project/scdapp/src/pages2/Login/Login.js",[],"/Users/kzjouf/Desktop/project/scdapp/src/store/actions/PostActions.js",[],"/Users/kzjouf/Desktop/project/scdapp/src/services/PostsService.js",[],"/Users/kzjouf/Desktop/project/scdapp/src/store/actions/PostTypes.js",[],"/Users/kzjouf/Desktop/project/scdapp/src/services/AxiosInstance.js",[],"/Users/kzjouf/Desktop/project/scdapp/src/store/store.js",["244"],"import {\n    applyMiddleware,\n    combineReducers,\n    compose,\n    createStore,\n} from 'redux';\nimport PostsReducer from './reducers/PostsReducer';\nimport thunk from 'redux-thunk';\nimport { AuthReducer } from './reducers/AuthReducer';\n\nconst loggerMiddleware = (store) => (next) => (action) => {\n    console.log('dispatching action', action);\n    console.log('before dispatching state', store.getState());\n    let result = next(action);\n    setTimeout(() => {\n        console.log('dispatch time out');\n    }, 5000);\n    console.log('next state', store.getState());\n    return result;\n};\n\n// const fetchDataMiddleware = (store) => (next) => (action) => {\n//     if (action.type === GET_POSTS) {\n//         //ajax call\n//     }\n\n//     return next(action);\n// };\n\nconst middleware = applyMiddleware(thunk);\n\nconst composeEnhancers =\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst reducers = combineReducers({\n    posts: PostsReducer,\n    auth: AuthReducer,\n});\n\nexport const store = createStore(reducers, composeEnhancers(middleware));\n","/Users/kzjouf/Desktop/project/scdapp/src/store/reducers/PostsReducer.js",[],"/Users/kzjouf/Desktop/project/scdapp/src/store/reducers/AuthReducer.js",[],"/Users/kzjouf/Desktop/project/scdapp/src/components2/Posts/Posts.js",[],"/Users/kzjouf/Desktop/project/scdapp/src/components2/Header/Header.js",[],"/Users/kzjouf/Desktop/project/scdapp/src/components2/Loader/Loader.js",[],"/Users/kzjouf/Desktop/project/scdapp/src/pages2/SinglePost/SinglePost.js",[],"/Users/kzjouf/Desktop/project/scdapp/src/pages2/EditPost/EditPost.js",[],"/Users/kzjouf/Desktop/project/scdapp/src/store/selectors/PostSelectors.js",[],"/Users/kzjouf/Desktop/project/scdapp/src/components/Navbar.js",["245","246","247"],"/Users/kzjouf/Desktop/project/scdapp/src/components/SidebarData.js",[],"/Users/kzjouf/Desktop/project/scdapp/src/pages/Posts.js",["248","249","250","251","252","253","254","255"],"import { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, Route, Switch } from 'react-router-dom';\nimport { bindActionCreators } from 'redux';\nimport AddPost from '../components/AddPost';\nimport SinglePost from '../components/SinglePost';\nimport { DataGrid } from '@material-ui/data-grid';\n// import EditPost from '../../pages2/EditPost/EditPost';\n// import SinglePost from '../../pages2/SinglePost/SinglePost';\n\n\n\nfunction Posts () {\n    // onCreatePost() {\n    //     // this.props.createPostAction();\n    // }\n\n    // componentDidMount() {\n    //     if (this.props.posts && !this.props.posts.length) {\n    //         this.props.getPostsAction();\n    //     }\n    // }\n\n    // onDeletePost(postId) {\n    //     if (window.confirm('Are you sure you want to delete post?')) {\n    //         this.props.deletePostAction(postId, this.props.history);\n    //     }\n    // }   \n\n\n    const state = {\n        posts : [\n            {title: 'Hello1', description: 'post 1 haa', action : 'Do it', id:0},\n            {title: 'Hello2', description: 'post 2', action : 'Done it', id: 1}\n        ],\n        postTitle: 'Posts List'\n    }\n    \n    const columns = [\n        { field: 'id', headerName: 'ID', width: 50 },\n        {\n          field: 'title',\n          headerName: 'Title',\n          width: 200,\n          editable: true,\n        },\n        {\n          field: 'description',\n          headerName: 'Description',\n          width: 450,\n          editable: true,\n        },\n        {\n          field: 'action',\n          headerName: 'Action',\n        //   type: 'number',\n          width: 150,\n          editable: true,\n        }\n        // {\n        //     field: 'id',\n        //     headerName: 'id',\n        //     type: 'number',\n        //     width: 50,\n        //     editable: true,\n        //   }\n      ];\n\n\n\n        // setTimeout(()=>{\n        //     console.log('Modifying');\n        //     const posts = [...this.state.posts];\n        //     posts[0].title ='Hello ne';\n        //     this.setState({\n        //         posts,\n        //     });\n        // }, 30000);\n        \n        // for (let post of this.props.posts) {\n        //     posts.push(\n        //         <div key={post.id} className=' mt-3 w-1/2'>\n        //             <div className='shadow border p-3 mx-3'>\n        //                 <div>{post.title}</div>\n        //                 <div>{post.description}</div>\n        //                 <div>\n        //                     <Link\n        //                         to={{ pathname: `/posts/${post.id}` }}\n        //                         className='text-purple-500'\n        //                     >\n        //                         View Details\n        //                     </Link>\n        //                 </div>\n        //                 <div>\n        //                     <Link\n        //                         to={{ pathname: `/posts/edit/${post.id}` }}\n        //                         className='text-purple-500'\n        //                     >\n        //                         Edit Details\n        //                     </Link>\n        //                 </div>\n        //                 <div>\n        //                     <button\n        //                         className='text-purple-500'\n        //                         onClick={() => this.onDeletePost(post.id)}\n        //                     >\n        //                         Delete Post\n        //                     </button>\n        //                 </div>\n        //             </div>\n        //         </div>,\n        //     );\n        // }\n        return (\n            <div style={{ height: 400, width: '100%' }}>\n            <DataGrid\n                padding ={10}\n              rows={state.posts}\n              columns={columns}\n              pageSize={5}\n            //   checkboxSelection\n              disableSelectionOnClick\n            />\n          </div>\n            // <div className='flex my-3'>\n            //     {this.state.posts.map((post) => (\n            //         <SinglePost //props ={post}\n            //             key = {post.id}\n            //             title = {post.title}\n            //             description = {post.description}\n            //             id = {post.id}\n            //             />\n            //     ))}\n            //     <div class ='my-5'>\n            //         <AddPost/>\n            //     </div>\n            // </div>\n        );\n    \n}\n\n\nexport default (Posts);\n","/Users/kzjouf/Desktop/project/scdapp/src/components/SinglePost.js",[],"/Users/kzjouf/Desktop/project/scdapp/src/components/AddPost.js",["256","257","258","259","260","261","262","263","264","265","266","267","268","269"],"import { Component } from 'react';\nimport './Post.css';\nimport  useStyles  from '../pages/Styles.js';\nimport {Typography, Button, AppBar, Spinner, Card, Container, CardActions, Grid, CardContent, CardMedia, TextField} from '@material-ui/core'\nimport {useState, useEffect} from 'react'\n\nfunction AddPost() {\n\n    const [newPost, setNewPost] = useState({title: '',\n    description: '',\n    status: 'active'});\n\n\n    const addPostHandler = (e) => {\n        e.preventDefault();\n        console.log(newPost);\n    };\n    \n    // textChange = (title, e) => {\n    //     this.setState({\n    //         [title]: e.target.value,\n    //     });\n    // };\n\n    return(\n        <div>\n            <h2 className='text-2x1 font-bold'> Add Post </h2>\n        <form  onSubmit ={addPostHandler}>\n            <div className='form-inner'>\n            <div className=\"form-group\">\n                <label className='block'>Title</label>\n                <input\n                    type='text'\n                    className='block w-1/4 border border-gray-600 focus:outline-none'\n                    onChange={e => setNewPost({...newPost, title: e.target.value})}\n                />\n            </div>\n            <div className=\"form-group\">\n                <label className='block'>Description</label>\n                <textarea  onChange={e => setNewPost({...newPost, description: e.target.value})} value={newPost.description} className='px-3 py-1 block w-full border border-gray-600  focus:outline-none focus:border-red-600'></textarea>\n            </div>\n            <div className=\"form-group\">\n                <label className='block'>Status</label>\n                <input\n                    type='text'\n                    className='block w-1/4 border border-gray-600 focus:outline-none'\n                />\n            </div>\n            <div className='my-3'>\n                    <button\n                        type='submit'\n                        className='bg-indigo-900 text-white px-5 py-2'\n                    >\n                        Add Post\n                    </button>\n                </div>\n            </div>\n        </form>\n        </div>\n    \n    )\n    \n}\n\nexport default AddPost;","/Users/kzjouf/Desktop/project/scdapp/src/helper/Firebase.js",[],"/Users/kzjouf/Desktop/project/scdapp/src/helper/AuthContext.js",["270"],"/Users/kzjouf/Desktop/project/scdapp/src/components/PrivateRoute.js",[],"/Users/kzjouf/Desktop/project/scdapp/src/pages/Main.js",["271"],"import React from 'react';\nimport Navbar from '../components/Navbar';\nimport PrivateRoute from '../components/PrivateRoute';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport Home from './Home';\nimport Posts from './Posts';\nimport History from './History';\nimport Reports from './Reports';\nimport GroupList from './AdminPage';\n\n\nfunction Main(){\n    // if ( !authorized){\n    //     return <Redirect to=\"/login\"/>;\n    // }\n    return (\n        \n        // <header className=\"App-header\">\n        //       <button onClick={fetchGreeting}> Fetch Greeting </button> \n        //       <button onClick={setGreeting}> Set Greeting </button>\n    \n        //       <input \n        //         onChange={e => setGreetingValue(e.target.value)} \n        //         placeholder=\"Set greeting\"\n        //         value={greeting}\n        //       /> \n              \n        //     </header> \n         <Router>\n            <Navbar />\n              <Switch>\n                <PrivateRoute path='/' exact component={Home} />\n                <PrivateRoute path='/posts' component={Posts} />\n                <Route path='/history' component={History} />\n                <Route path='/reports' component={Reports} />\n                <Route path='/admin' component={GroupList} />\n                {/* <Route path='/products' component={Products} /> */}\n              </Switch> \n           </Router>\n\n      );\n}\n\nexport default Main;",{"ruleId":"272","replacedBy":"273"},{"ruleId":"274","replacedBy":"275"},{"ruleId":"276","severity":1,"message":"277","line":3,"column":8,"nodeType":"278","messageId":"279","endLine":3,"endColumn":14},{"ruleId":"276","severity":1,"message":"280","line":4,"column":8,"nodeType":"278","messageId":"279","endLine":4,"endColumn":14},{"ruleId":"276","severity":1,"message":"281","line":5,"column":50,"nodeType":"278","messageId":"279","endLine":5,"endColumn":58},{"ruleId":"276","severity":1,"message":"282","line":5,"column":60,"nodeType":"278","messageId":"279","endLine":5,"endColumn":70},{"ruleId":"276","severity":1,"message":"283","line":6,"column":24,"nodeType":"278","messageId":"279","endLine":6,"endColumn":31},{"ruleId":"276","severity":1,"message":"284","line":10,"column":10,"nodeType":"278","messageId":"279","endLine":10,"endColumn":18},{"ruleId":"276","severity":1,"message":"285","line":10,"column":31,"nodeType":"278","messageId":"279","endLine":10,"endColumn":39},{"ruleId":"286","severity":1,"message":"287","line":20,"column":6,"nodeType":"288","endLine":20,"endColumn":8,"suggestions":"289"},{"ruleId":"276","severity":1,"message":"290","line":3,"column":29,"nodeType":"278","messageId":"279","endLine":3,"endColumn":35},{"ruleId":"276","severity":1,"message":"291","line":3,"column":37,"nodeType":"278","messageId":"279","endLine":3,"endColumn":44},{"ruleId":"276","severity":1,"message":"292","line":6,"column":19,"nodeType":"278","messageId":"279","endLine":6,"endColumn":28},{"ruleId":"276","severity":1,"message":"293","line":11,"column":10,"nodeType":"278","messageId":"279","endLine":11,"endColumn":20},{"ruleId":"276","severity":1,"message":"294","line":16,"column":5,"nodeType":"278","messageId":"279","endLine":16,"endColumn":12},{"ruleId":"276","severity":1,"message":"295","line":27,"column":11,"nodeType":"278","messageId":"279","endLine":27,"endColumn":22},{"ruleId":"276","severity":1,"message":"296","line":37,"column":10,"nodeType":"278","messageId":"279","endLine":37,"endColumn":21},{"ruleId":"276","severity":1,"message":"297","line":37,"column":23,"nodeType":"278","messageId":"279","endLine":37,"endColumn":37},{"ruleId":"276","severity":1,"message":"298","line":82,"column":18,"nodeType":"278","messageId":"279","endLine":82,"endColumn":29},{"ruleId":"276","severity":1,"message":"299","line":215,"column":13,"nodeType":"278","messageId":"279","endLine":215,"endColumn":21},{"ruleId":"276","severity":1,"message":"300","line":243,"column":13,"nodeType":"278","messageId":"279","endLine":243,"endColumn":21},{"ruleId":"276","severity":1,"message":"301","line":251,"column":11,"nodeType":"278","messageId":"279","endLine":251,"endColumn":23},{"ruleId":"276","severity":1,"message":"300","line":292,"column":13,"nodeType":"278","messageId":"279","endLine":292,"endColumn":21},{"ruleId":"302","severity":1,"message":"303","line":302,"column":32,"nodeType":"304","messageId":"305","endLine":302,"endColumn":34},{"ruleId":"276","severity":1,"message":"306","line":308,"column":13,"nodeType":"278","messageId":"279","endLine":308,"endColumn":16},{"ruleId":"276","severity":1,"message":"307","line":309,"column":13,"nodeType":"278","messageId":"279","endLine":309,"endColumn":16},{"ruleId":"276","severity":1,"message":"308","line":310,"column":13,"nodeType":"278","messageId":"279","endLine":310,"endColumn":16},{"ruleId":"276","severity":1,"message":"309","line":311,"column":13,"nodeType":"278","messageId":"279","endLine":311,"endColumn":17},{"ruleId":"276","severity":1,"message":"310","line":344,"column":13,"nodeType":"278","messageId":"279","endLine":344,"endColumn":24},{"ruleId":"276","severity":1,"message":"292","line":2,"column":19,"nodeType":"278","messageId":"279","endLine":2,"endColumn":28},{"ruleId":"276","severity":1,"message":"311","line":12,"column":10,"nodeType":"278","messageId":"279","endLine":12,"endColumn":18},{"ruleId":"276","severity":1,"message":"312","line":13,"column":10,"nodeType":"278","messageId":"279","endLine":13,"endColumn":20},{"ruleId":"276","severity":1,"message":"313","line":13,"column":22,"nodeType":"278","messageId":"279","endLine":13,"endColumn":35},{"ruleId":"276","severity":1,"message":"314","line":15,"column":12,"nodeType":"278","messageId":"279","endLine":15,"endColumn":33},{"ruleId":"276","severity":1,"message":"315","line":2,"column":10,"nodeType":"278","messageId":"279","endLine":2,"endColumn":15},{"ruleId":"276","severity":1,"message":"316","line":1,"column":17,"nodeType":"278","messageId":"279","endLine":1,"endColumn":26},{"ruleId":"276","severity":1,"message":"317","line":6,"column":22,"nodeType":"278","messageId":"279","endLine":6,"endColumn":32},{"ruleId":"276","severity":1,"message":"318","line":7,"column":8,"nodeType":"278","messageId":"279","endLine":7,"endColumn":22},{"ruleId":"276","severity":1,"message":"319","line":10,"column":8,"nodeType":"278","messageId":"279","endLine":10,"endColumn":13},{"ruleId":"276","severity":1,"message":"320","line":16,"column":10,"nodeType":"278","messageId":"279","endLine":16,"endColumn":18},{"ruleId":"276","severity":1,"message":"321","line":17,"column":9,"nodeType":"278","messageId":"279","endLine":17,"endColumn":19},{"ruleId":"276","severity":1,"message":"322","line":17,"column":21,"nodeType":"278","messageId":"279","endLine":17,"endColumn":25},{"ruleId":"276","severity":1,"message":"323","line":17,"column":27,"nodeType":"278","messageId":"279","endLine":17,"endColumn":31},{"ruleId":"276","severity":1,"message":"324","line":17,"column":33,"nodeType":"278","messageId":"279","endLine":17,"endColumn":42},{"ruleId":"276","severity":1,"message":"325","line":17,"column":44,"nodeType":"278","messageId":"279","endLine":17,"endColumn":53},{"ruleId":"276","severity":1,"message":"326","line":38,"column":9,"nodeType":"278","messageId":"279","endLine":38,"endColumn":15},{"ruleId":"276","severity":1,"message":"327","line":40,"column":11,"nodeType":"278","messageId":"279","endLine":40,"endColumn":18},{"ruleId":"276","severity":1,"message":"328","line":2,"column":8,"nodeType":"278","messageId":"279","endLine":2,"endColumn":12},{"ruleId":"276","severity":1,"message":"329","line":4,"column":10,"nodeType":"278","messageId":"279","endLine":4,"endColumn":17},{"ruleId":"276","severity":1,"message":"321","line":9,"column":9,"nodeType":"278","messageId":"279","endLine":9,"endColumn":19},{"ruleId":"276","severity":1,"message":"330","line":15,"column":20,"nodeType":"278","messageId":"279","endLine":15,"endColumn":29},{"ruleId":"276","severity":1,"message":"331","line":19,"column":11,"nodeType":"278","messageId":"279","endLine":19,"endColumn":19},{"ruleId":"302","severity":1,"message":"332","line":39,"column":26,"nodeType":"304","messageId":"305","endLine":39,"endColumn":28},{"ruleId":"276","severity":1,"message":"333","line":58,"column":7,"nodeType":"278","messageId":"279","endLine":58,"endColumn":22},{"ruleId":"272","replacedBy":"334"},{"ruleId":"274","replacedBy":"335"},{"ruleId":"272","replacedBy":"336"},{"ruleId":"274","replacedBy":"337"},{"ruleId":"276","severity":1,"message":"338","line":11,"column":7,"nodeType":"278","messageId":"279","endLine":11,"endColumn":23},{"ruleId":"276","severity":1,"message":"321","line":9,"column":9,"nodeType":"278","messageId":"279","endLine":9,"endColumn":19},{"ruleId":"276","severity":1,"message":"325","line":9,"column":30,"nodeType":"278","messageId":"279","endLine":9,"endColumn":39},{"ruleId":"276","severity":1,"message":"339","line":31,"column":17,"nodeType":"278","messageId":"279","endLine":31,"endColumn":25},{"ruleId":"276","severity":1,"message":"316","line":1,"column":10,"nodeType":"278","messageId":"279","endLine":1,"endColumn":19},{"ruleId":"276","severity":1,"message":"329","line":2,"column":10,"nodeType":"278","messageId":"279","endLine":2,"endColumn":17},{"ruleId":"276","severity":1,"message":"340","line":3,"column":10,"nodeType":"278","messageId":"279","endLine":3,"endColumn":14},{"ruleId":"276","severity":1,"message":"341","line":3,"column":16,"nodeType":"278","messageId":"279","endLine":3,"endColumn":21},{"ruleId":"276","severity":1,"message":"342","line":3,"column":23,"nodeType":"278","messageId":"279","endLine":3,"endColumn":29},{"ruleId":"276","severity":1,"message":"343","line":4,"column":10,"nodeType":"278","messageId":"279","endLine":4,"endColumn":28},{"ruleId":"276","severity":1,"message":"344","line":5,"column":8,"nodeType":"278","messageId":"279","endLine":5,"endColumn":15},{"ruleId":"276","severity":1,"message":"345","line":6,"column":8,"nodeType":"278","messageId":"279","endLine":6,"endColumn":18},{"ruleId":"276","severity":1,"message":"316","line":1,"column":10,"nodeType":"278","messageId":"279","endLine":1,"endColumn":19},{"ruleId":"276","severity":1,"message":"346","line":3,"column":9,"nodeType":"278","messageId":"279","endLine":3,"endColumn":18},{"ruleId":"276","severity":1,"message":"321","line":4,"column":9,"nodeType":"278","messageId":"279","endLine":4,"endColumn":19},{"ruleId":"276","severity":1,"message":"347","line":4,"column":21,"nodeType":"278","messageId":"279","endLine":4,"endColumn":27},{"ruleId":"276","severity":1,"message":"290","line":4,"column":29,"nodeType":"278","messageId":"279","endLine":4,"endColumn":35},{"ruleId":"276","severity":1,"message":"291","line":4,"column":37,"nodeType":"278","messageId":"279","endLine":4,"endColumn":44},{"ruleId":"276","severity":1,"message":"348","line":4,"column":46,"nodeType":"278","messageId":"279","endLine":4,"endColumn":50},{"ruleId":"276","severity":1,"message":"349","line":4,"column":52,"nodeType":"278","messageId":"279","endLine":4,"endColumn":61},{"ruleId":"276","severity":1,"message":"350","line":4,"column":63,"nodeType":"278","messageId":"279","endLine":4,"endColumn":74},{"ruleId":"276","severity":1,"message":"323","line":4,"column":76,"nodeType":"278","messageId":"279","endLine":4,"endColumn":80},{"ruleId":"276","severity":1,"message":"351","line":4,"column":82,"nodeType":"278","messageId":"279","endLine":4,"endColumn":93},{"ruleId":"276","severity":1,"message":"324","line":4,"column":95,"nodeType":"278","messageId":"279","endLine":4,"endColumn":104},{"ruleId":"276","severity":1,"message":"325","line":4,"column":106,"nodeType":"278","messageId":"279","endLine":4,"endColumn":115},{"ruleId":"276","severity":1,"message":"292","line":5,"column":19,"nodeType":"278","messageId":"279","endLine":5,"endColumn":28},{"ruleId":"276","severity":1,"message":"352","line":12,"column":10,"nodeType":"278","messageId":"279","endLine":12,"endColumn":24},{"ruleId":"276","severity":1,"message":"281","line":4,"column":50,"nodeType":"278","messageId":"279","endLine":4,"endColumn":58},"no-native-reassign",["353"],"no-negated-in-lhs",["354"],"no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar","'Navbar' is defined but never used.","'Redirect' is defined but never used.","'withRouter' is defined but never used.","'useAuth' is defined but never used.","'useState' is defined but never used.","'Suspense' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array.","ArrayExpression",["355"],"'AppBar' is defined but never used.","'Spinner' is defined but never used.","'useEffect' is defined but never used.","'useHistory' is defined but never used.","'loading' is assigned a value but never used.","'currentUser' is assigned a value but never used.","'currentTime' is assigned a value but never used.","'setCurrentTime' is assigned a value but never used.","'setGreeting' is defined but never used.","'response' is assigned a value but never used.","'contract' is assigned a value but never used.","'messageProof' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'pr1' is assigned a value but never used.","'pr2' is assigned a value but never used.","'pr3' is assigned a value but never used.","'data' is assigned a value but never used.","'transaction' is assigned a value but never used.","'numPages' is assigned a value but never used.","'pageNumber' is assigned a value but never used.","'setPageNumber' is assigned a value but never used.","'onDocumentLoadSuccess' is defined but never used.","'Block' is defined but never used.","'Component' is defined but never used.","'makeStyles' is defined but never used.","'TableContainer' is defined but never used.","'Paper' is defined but never used.","'DataGrid' is defined but never used.","'Typography' is defined but never used.","'List' is defined but never used.","'Grid' is defined but never used.","'CardMedia' is defined but never used.","'TextField' is defined but never used.","'groups' is assigned a value but never used.","'columns' is assigned a value but never used.","'logo' is defined but never used.","'connect' is defined but never used.","'setErrors' is assigned a value but never used.","'dispatch' is assigned a value but never used.","Expected '===' and instead saw '=='.","'mapStateToProps' is assigned a value but never used.",["353"],["354"],["353"],["354"],"'loggerMiddleware' is assigned a value but never used.","'setTitle' is assigned a value but never used.","'Link' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'bindActionCreators' is defined but never used.","'AddPost' is defined but never used.","'SinglePost' is defined but never used.","'useStyles' is defined but never used.","'Button' is defined but never used.","'Card' is defined but never used.","'Container' is defined but never used.","'CardActions' is defined but never used.","'CardContent' is defined but never used.","'currentAddress' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"356","fix":"357"},"Update the dependencies array to be: [props]",{"range":"358","text":"359"},[695,697],"[props]"]